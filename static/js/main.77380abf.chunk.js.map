{"version":3,"sources":["cage.js","path.js","symbols.js","draw.js","App.js","serviceWorker.js","index.js"],"names":["draw_cage","ctx","cells","style","corner_offset","cs","cell_size","get_cage","x","y","find","e","corner_ext_pos","lines","each_cell","m","up","down","left","right","ul","ur","dl","dr","l","add_line","start","end","push","Line","points","dash","strokeWidth","stroke","corner_pos","slice","cont","add","concat","draw_dash_cage","corner","draw_edge_cage","center_px","p","draw_path","color_index","_color","DrawColors","color","Util","colorToRGBA","r","a","g","b","start_px","map","px","flat","objs","bulb","Circle","radius","fill","line","lineCap","line1","lineJoin","line2","length","arrow","Arrow","join","underlay2","scene","draw","draw_symbol","container","str","size","bg","sym","page","substr","symbol","cx","cy","Text","text","font","fontSize","offset","offset2","aopt","pointerLength","pointerWidth","Star","innerRadius","outerRadius","numPoints","closed","Group","Rect","width","height","o","destroy","c","symboltext","symbolcolor","grid_w","grid_h","grid_left","grid_top","grid_bottom","grid_right","grid_div_width","grid_div_height","grid_style","grid_left_diagonal","grid_right_diagonal","hover_offset","symbol_page","current_color","current_mode","current_rmode","current_style","solve_mode","matrix","stuff","drag","undo_stack","current","outer","underlay","shift","cursor","boundary","grid_lines","textOptions","centerTextOptions","cornerTextOptions","set_symbol","_size","normal","symcont","bsize","DrawSymbol","element","num","stage","Stage","layer","Layer","_set_cell","lock","pos","mode","newtext","get","undo_entry","old_normal","main_grid","lock_type","center","forEach","t","side","r_color","fillEnabled","r_color_set","rect","off","measure_width","position","i","indexOf","meas","set_cell","lock_cell","DrawSetNumber","number","count","each_mark","DrawSetColor","mark","last_toggle_state","edge_toggle","edge","eo","listening","last_toggle","unmark","boundary_mousedown","event","mark_boundary","mousedown","evt","button","undefined","DrawSetMode","state","solveMode","cageStyle","pathStyle","numberStyle","btype","on","edge_mousemove","edge_mouseup","setBoundary","type","f","DrawCheck","range","rows","Array","from","columns","boxes","missing","n","Math","floor","alert","isEqual","sort","DrawDelete","findLastIndex","s","splice","DrawReset","DrawUndo","u","pop","DrawRender","code","wrapper","cellSize","top","bottom","gridDivWidth","gridDivHeight","gridStyle","gridLeftDiagonal","gridRightDiagonal","base64","pack","Uint8Array","atob","charCodeAt","unpack","pako","inflate","data","msgpack","decode","version","grid","load_size","margin","stage_w","stage_h","outer_x","outer_y","options","options_inner","gridlayer","overlay","xp","yp","ocont","r_hover","side_pos","bc","addBoundary","w","h","isArray","min","qsize","qc","ew","eh","addBoundaries","last","mousemove","inner_hover","dots","thin","fat","frame_w","frame_h","diagonal","dsize","add_grid","_s","load","window","addEventListener","target","tagName","key","preventDefault","startsWith","keydown","keyup","contextmenu","query","location","search","url_params","URLSearchParams","UrlDialog","props","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","focus","App","handleKeyDown","cycle_modes","setMode","document","getElementById","setState","setStyle","value","generateUrl","url","description","out","desc","console","log","coded","encode","packed","deflate","btoa","String","fromCharCode","origin","encodeURIComponent","DrawGenerateUrl","dialogText","dialogOpen","handleChange","newValue","parentNode","id","setGrid","canvasRef","setSymbolPage","symbolPage","symbolRef","setGridState","React","createRef","settingsMode","seconds","timeStatus","DrawGetDescription","this","interval","setInterval","removeEventListener","clearInterval","Box","FormControl","fullWidth","InputLabel","shrink","Select","labelId","onChange","MenuItem","minWidth","padding","boxShadow","Typography","align","variant","Date","toISOString","ButtonGroup","PlayArrow","Pause","SkipPrevious","TextField","multiline","InputProps","readOnly","numberStyleBox","cageStyleBox","pathStyleBox","orientation","sizeSlider","Switch","checked","label","max","step","marks","Slider","onChangeCommitted","index","Grid","item","xs","border","background","display","flexDirection","timerBox","ref","maxWidth","colorGrid","keys","colorSelect","pageSelect","symbolGrid","settingLeftBox","settingRight","renderSolveMode","renderSetMode","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77380abf.chunk.js","sourcesContent":["import { Line } from \"konva\";\r\n\r\nexport function draw_cage(ctx, cells, style) {\r\n  if (style === \"dash\") return draw_dash_cage(ctx, cells);\r\n  if (style === \"edge\") return draw_edge_cage(ctx, cells);\r\n}\r\n\r\nfunction draw_dash_cage(ctx, cells) {\r\n  let corner_offset = ctx.corner_offset;\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n\r\n  const corner_ext_pos = [\r\n    [0, corner_offset],\r\n    [corner_offset, 0],\r\n    [cs - corner_offset, 0],\r\n    [cs, corner_offset],\r\n    [cs, cs - corner_offset],\r\n    [cs - corner_offset, cs],\r\n    [corner_offset, cs],\r\n    [0, cs - corner_offset],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let ul = get_cage(x - 1, y - 1);\r\n    let ur = get_cage(x + 1, y - 1);\r\n    let dl = get_cage(x - 1, y + 1);\r\n    let dr = get_cage(x + 1, y + 1);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({points: [...start, ...end],\r\n          dash: [4],\r\n          strokeWidth: 2,\r\n          stroke: \"black\",\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = m.corner_pos[0];\r\n      let end = m.corner_pos[3];\r\n      if (up) {\r\n        start = corner_ext_pos[1].slice(0);\r\n        start[1] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[6].slice(0);\r\n        end[1] += !dl ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = m.corner_pos[1];\r\n      let end = m.corner_pos[2];\r\n      if (up) {\r\n        start = corner_ext_pos[2].slice(0);\r\n        start[1] -= !ur ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[5].slice(0);\r\n        end[1] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = m.corner_pos[0];\r\n      let end = m.corner_pos[1];\r\n      if (left) {\r\n        start = corner_ext_pos[0].slice(0);\r\n        start[0] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[3].slice(0);\r\n        end[0] += !ur ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = m.corner_pos[3];\r\n      let end = m.corner_pos[2];\r\n      if (left) {\r\n        start = corner_ext_pos[7].slice(0);\r\n        start[0] -= !dl ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[4].slice(0);\r\n        end[0] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    m.cont.add(...l);\r\n    lines = lines.concat(l);\r\n  });\r\n  return lines;\r\n}\r\n\r\nfunction draw_edge_cage(ctx, cells) {\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n\r\n  const corner = [\r\n    [0, 0],\r\n    [ctx.cell_size, 0],\r\n    [ctx.cell_size, ctx.cell_size],\r\n    [0, ctx.cell_size],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({\r\n          points: [...start, ...end],\r\n          strokeWidth: 4,\r\n          stroke: \"black\",\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner[0];\r\n      let end = corner[3];\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner[1];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner[0];\r\n      let end = corner[1];\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner[3];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    m.cont.add(...l);\r\n    lines.push(...l);\r\n  });\r\n  return lines;\r\n}\r\n","import { Circle, Line, Arrow, Util } from \"konva\";\r\nimport { DrawColors } from \"./draw\";\r\n//import Arrow from \"./arrow\";\r\n\r\nfunction center_px(cell_size, p) {\r\n  return [p[0] * cell_size + cell_size / 2, p[1] * cell_size + cell_size / 2];\r\n}\r\n\r\nexport function draw_path(ctx, cells, style, color_index) {\r\n  let cell_size = ctx.cell_size;\r\n\r\n  let _color = DrawColors[color_index];\r\n  let color = Util.colorToRGBA(_color);\r\n  color.r = color.r * color.a + (1 - color.a) * 255;\r\n  color.g = color.g * color.a + (1 - color.a) * 255;\r\n  color.b = color.b * color.a + (1 - color.a) * 255;\r\n  color.a = 1;\r\n  color = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\r\n\r\n  let start_px = center_px(cell_size, cells[0]);\r\n  let points = cells\r\n    .map((p) => {\r\n      let px = center_px(cell_size, p);\r\n      return [px[0], px[1]];\r\n    })\r\n    .flat();\r\n  let objs = [];\r\n\r\n  if (style === \"thermo\") {\r\n    let strokeWidth = cell_size * 0.3;\r\n    let bulb = new Circle({\r\n      x: start_px[0],\r\n      y: start_px[1],\r\n      radius: cell_size * 0.4,\r\n      fill: color,\r\n    });\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      lineCap: \"round\",\r\n    });\r\n    objs.push(bulb, line);\r\n  } else if (style === \"thin\") {\r\n    let strokeWidth = cell_size * 0.05;\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"fat\") {\r\n    let strokeWidth = cell_size * 0.3;\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"roundborder\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"round\",\r\n      lineJoin: \"round\",\r\n    });\r\n    let line2 = new Line({\r\n      points: points,\r\n      stroke: \"white\",\r\n      strokeWidth: cell_size * 0.67,\r\n      lineCap: \"round\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"border\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"square\",\r\n      lineJoin: \"round\",\r\n    });\r\n    let line2 = new Line({\r\n      points: points,\r\n      stroke: \"white\",\r\n      strokeWidth: cell_size * 0.67,\r\n      lineCap: \"square\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"roundfill\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"round\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1);\r\n  } else if (style === \"squarefill\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"square\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1);\r\n  } else if (style === \"arrowcircle\" || style === \"arrow\") {\r\n    let strokeWidth = cell_size * 0.07;\r\n    if (points.length > 1) {\r\n      let arrow = new Arrow({\r\n        points: points,\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        arrow: cell_size * 0.3,\r\n      });\r\n      objs.push(arrow);\r\n    }\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      join: \"miter\",\r\n    });\r\n    objs.push(line);\r\n    if (style === \"arrowcircle\") {\r\n      let bulb = new Circle({\r\n        x: start_px[0],\r\n        y: start_px[1],\r\n        radius: cell_size * 0.4,\r\n        fill: \"white\",\r\n        strokeWidth: strokeWidth,\r\n        stroke: color,\r\n      });\r\n      objs.push(bulb);\r\n    }\r\n  }\r\n\r\n  ctx.underlay2.add(...objs);\r\n  ctx.scene.draw();\r\n\r\n  return objs;\r\n}\r\n","//import Arrow from \"./arrow\";\r\nimport { Circle, Star, Rect, Group, Text, Line, Arrow } from \"konva\";\r\nimport { DrawColors } from \"./draw\";\r\n\r\n/*\r\nclass Text2 extends Text\r\n{\r\n    makePath(ctx) {\r\n        const origin = this.getOrigin();\r\n        ctx.translate(origin.x, origin.y);\r\n\r\n        this.path = new window.Path2D();\r\n        this.path.rect(0, 0, this.width, this.height);\r\n\r\n        ctx.fillStyle = \"rgba(255,255,255,1)\";\r\n        ctx.fill(this.path);\r\n        ctx.fillStyle = this.options.fill.toString(ctx);\r\n\r\n        ctx.translate(-origin.x, -origin.y);\r\n\r\n        super.makePath(ctx);\r\n\r\n        return this;\r\n    }\r\n}\r\n*/\r\n\r\nexport function draw_symbol(container, str, _color, size, bg) {\r\n  let page = +str.substr(1, 1);\r\n  let symbol = +str.substr(2, 1);\r\n  let color = typeof _color === \"string\" ? _color : DrawColors[_color];\r\n  let cx = size / 2;\r\n  let cy = size / 2;\r\n  let sym;\r\n\r\n  if (str[0] !== \"#\") page = 0;\r\n\r\n  if (page === 0) {\r\n    sym = new Text({\r\n      x: size / 4,\r\n      y: size * 0.1,\r\n      text: str,\r\n      font: \"sans-serif\",\r\n      fontSize: size,\r\n      fill: color,\r\n    });\r\n    /*const meas = Text.measure(str, textOptions);*/\r\n    //const measure_width = 30;\r\n    //sym.position.x = (size - measure_width) / 2;\r\n    //bg = true;\r\n  }\r\n  if (page === 1) {\r\n    if (symbol === 1) {\r\n      // circle fill\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      // circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // dash circle fill\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      // dash circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n  }\r\n  if (page === 2) {\r\n    let offset = size * 0.05;\r\n    let offset2 = size * 0.15;\r\n    let aopt = {\r\n      stroke: \"black\",\r\n      strokeWidth: 3,\r\n      fill: color,\r\n      pointerLength: size * 0.3,\r\n      pointerWidth: size * 0.3,\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, size - cx - offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, size - cx - offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: offset2,\r\n        y: cy,\r\n        points: [0, 0, size - offset2 * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: size - offset2,\r\n        y: cy,\r\n        points: [0, 0, -(size - offset2 * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: offset2,\r\n        points: [0, 0, 0, size - offset2 * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: size - offset2,\r\n        points: [0, 0, 0, -(size - offset2 * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 3) {\r\n    // Yajilin style arrows\r\n    let offset = size * 0.15;\r\n    let aopt = {\r\n      stroke: color,\r\n      strokeWidth: 2,\r\n      pointerLength: size * 0.1,\r\n      pointerWidth: size * 0.1,\r\n      fill: \"black\",\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 4) {\r\n    if (symbol === 1) {\r\n      sym = new Star({\r\n        x: cx,\r\n        y: cy,\r\n        innerRadius: size * 0.2,\r\n        outerRadius: size * 0.4,\r\n        numPoints: 5,\r\n        fill: color,\r\n        stroke: \"black\",\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      let offset = size * 0.1;\r\n      sym = new Line({\r\n        x: offset,\r\n        y: offset,\r\n        points: [\r\n          0,\r\n          0,\r\n          size - offset * 2,\r\n          cy - offset,\r\n          0,\r\n          size - offset * 2,\r\n          0,\r\n          0,\r\n        ],\r\n        fill: color,\r\n        closed: true,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Group();\r\n      sym.add(new Rect({ width: size, height: size, fill: color }));\r\n      sym.add(\r\n        new Line({\r\n          points: [0, 0, size, size],\r\n          stroke: \"white\",\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n    }\r\n    if (symbol === 4) {\r\n      let o = size * 0.1;\r\n      sym = new Group();\r\n      sym.add(\r\n        new Line({\r\n          points: [o, o, size - o, size - o],\r\n          stroke: color,\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n      sym.add(\r\n        new Line({\r\n          points: [o, size - o, size - o, o],\r\n          stroke: color,\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n    }\r\n  }\r\n  if (sym) {\r\n    if (container.symbol) {\r\n      container.symbol.destroy();\r\n    }\r\n    if (bg) {\r\n      let bg = new Rect({ width: size, height: size, fill: \"white\" });\r\n      let c = new Group();\r\n      c.add(bg, sym);\r\n      container.symbol = c;\r\n      container.add(c);\r\n    } else {\r\n      container.symbol = sym;\r\n      container.add(sym);\r\n    }\r\n    container.symboltext = str;\r\n    container.symbolcolor = _color;\r\n  }\r\n}\r\n","import { Stage, Layer, Text, Rect, Group, Line, Circle } from \"konva\";\nimport { draw_cage } from \"./cage\";\nimport { draw_path } from \"./path\";\nimport { draw_symbol } from \"./symbols\";\nimport pako from \"pako\";\nimport msgpack from \"msgpack-lite\";\nimport { isEqual, range, findLastIndex, last } from \"lodash\";\n\nlet ctx = {};\nlet cell_size = 0;\nlet grid_w = null;\nlet grid_h = null;\nlet grid_left = 0;\nlet grid_top = 0;\nlet grid_bottom = 0;\nlet grid_right = 0;\nlet grid_div_width = 0;\nlet grid_div_height = 0;\nlet grid_style = \"normal\";\nlet grid_left_diagonal = false;\nlet grid_right_diagonal = false;\nlet corner_offset = 0;\nlet hover_offset = 0;\nlet symbol_page = 0;\n\nconst type_path = 1;\nconst type_cage = 2;\n\nconst lock_normal = 1;\nconst lock_color = 2;\nconst lock_boundary = 3;\n\nconst b_corner = 1;\nconst b_side = 2;\nconst b_quarter = 3;\nconst b_boundary = 4;\nconst b_edge = 5;\n\nconst transparent = \"rgb(0, 0, 0, 0)\";\nconst sol_text_color = \"rgb(29, 106, 229)\";\nconst mark_color = \"rgba(247, 208, 56, 0.5)\";\nexport const DrawColors = [\n  \"rgba(0, 0, 0, 1)\",\n  \"rgba(207, 207, 207, 0.5)\",\n  \"rgba(255, 255, 255, 1)\",\n  \"rgba(163, 224, 72, 0.5)\",\n  \"rgba(210, 59, 231, 0.5)\",\n  \"rgba(235, 117, 50, 0.5)\",\n  \"rgba(226, 38, 31, 0.5)\",\n  \"rgba(247, 208, 56, 0.5)\",\n  \"rgba(52, 187, 230, 0.5)\",\n  //\n  \"rgba(140, 140, 140, 0.5)\",\n  \"rgba(80, 80, 80, 0.5)\",\n  \"rgba(20, 20, 20, 0.5)\",\n];\n\nlet current_color = 0;\nlet current_mode = \"normal\";\nlet current_rmode = null;\nlet current_style = null;\nlet solve_mode = false;\nlet scene = null;\nlet matrix = [];\nlet stuff = [];\nlet drag = false;\nlet undo_stack = [];\nlet current = null;\nlet outer = null;\nlet underlay = null;\nlet shift = false;\nlet cursor = null;\nlet boundary = null;\nlet grid_lines = [];\n\nfunction reset() {\n  matrix = [];\n  stuff = [];\n  undo_stack = [];\n  current = null;\n  outer = null;\n  underlay = null;\n  shift = false;\n  cursor = null;\n}\n\nconst textOptions = {\n  font: \"sans-serif\",\n  //cursor: Component.cursors.pointer,\n};\nconst centerTextOptions = {\n  font: \"sans-serif\",\n  fill: sol_text_color,\n  //cursor: Component.cursors.pointer,\n};\nconst cornerTextOptions = {\n  font: \"sans-serif\",\n  fill: sol_text_color,\n  //cursor: Component.cursors.pointer,\n};\n\nexport function DrawSetSymbolPage(page) {\n  symbol_page = page;\n}\n\nfunction set_symbol(container, str, color, _size) {\n  let text;\n  let size = _size;\n  if (container.normal) {\n    size = cell_size;\n    text = container.normal;\n    container = container.symcont;\n  } else if (size > 0) {\n    // Symbol page\n    color = \"gray\";\n  } else {\n    size = container.bsize;\n  }\n  if (str[0] === \"#\" || !text) {\n    draw_symbol(container, str, color, size);\n  } else {\n    text.text(str);\n  }\n}\n\nexport function DrawSymbol(element, page, num, size) {\n  let stage = new Stage({ container: element, width: size, height: size });\n  let layer = new Layer();\n  set_symbol(layer, \"#\" + page + num, current_color, size);\n  stage.add(layer);\n  stage.draw();\n}\n\nfunction _set_cell(lock, pos, mode, color, newtext) {\n  let x = pos[0];\n  let y = pos[1];\n  let b = null;\n  if (pos.length === 3) b = get(...pos);\n  let m = get(x, y);\n  let undo_entry = {\n    mode: mode,\n    x: x,\n    y: y,\n    newtext: newtext,\n    old_normal: m.normal.text(),\n  };\n\n  if (!m.main_grid && mode !== \"normal\" && !lock) {\n    return;\n  }\n  if (m.lock_type === lock_normal && !lock && mode !== \"color\") {\n    return;\n  }\n\n  if (mode === \"reset\") {\n    m.center.text(\"\");\n    m.normal.text(\"\");\n    m.corner.forEach((t) => t.text(\"\"));\n    m.side.forEach((t) => t.text(\"\"));\n    m.r_color.fill(null);\n    m.r_color.fillEnabled(false);\n    if (lock) {\n      m.r_color_set.fill(null);\n      m.r_color_set.fillEnabled(false);\n      m.fill = -1;\n      if (m.symcont.symbol) {\n        m.symcont.symbol.destroy();\n        m.symcont.symbol = null;\n        m.symcont.symboltext = \"\";\n      }\n      m.boundary.forEach((b) => {\n        if (b.symbol) {\n          b.symbol.destroy();\n          b.symbol = null;\n          b.symboltext = \"\";\n        }\n        b.rect.fill(null);\n        b.rect.fillEnabled(false);\n        b.rect.off(\"mousedown\");\n      });\n    }\n  } else if (b) {\n    set_symbol(b, newtext, color);\n  } else if (mode === \"normal\") {\n    if (!lock) {\n      m.normal.fill(sol_text_color);\n    } else {\n      m.lock_type = newtext !== \"\" ? lock_normal : 0;\n      if (newtext[0] !== \"#\") {\n        m.normal.fill(DrawColors[color]);\n        m.color = color;\n        if (m.normal.text() !== \"\" && newtext[0] !== \"#\")\n          newtext = m.normal.text() + newtext;\n      }\n    }\n    set_symbol(m, newtext, color);\n    if (newtext[0] !== \"#\") {\n      /*const meas = Text.measure(m.normal.text, m.normal.text.options);*/\n      //console.log(m.normal.getContext().measureText(\"1\"));\n      let measure_width = cell_size / 2;\n      m.normal.position({\n        x: (cell_size - measure_width) / 2,\n        y: cell_size * 0.15,\n      });\n      m.center.text(\"\");\n      m.corner.forEach((t) => {\n        t.text(\"\");\n      });\n      m.side.forEach((t) => {\n        t.text(\"\");\n      });\n    }\n  } else if (mode === \"center\" && m.normal.text() === \"\") {\n    let current = m.center.text();\n    let center = \"\";\n    m.center.fill(sol_text_color);\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          center += i;\n        }\n      }\n    }\n\n    m.center.text(center);\n    //const meas = Text.measure(center, m.center.options);\n    let meas = { width: cell_size / 2, height: cell_size / 2 };\n    m.center.position.x = (cell_size - meas.width) / 2;\n    m.center.position.y = (cell_size - meas.height) / 2;\n  } else if (mode === \"corner\" && m.normal.text() === \"\") {\n    let current = \"\";\n    m.corner.forEach((t) => {\n      current += t.text();\n    });\n    m.side.forEach((t) => {\n      current += t.text();\n    });\n    let text = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          text += i;\n        }\n      }\n    }\n    let i = 0;\n    m.corner.forEach((t) => {\n      t.text(text[i++] || \"\");\n    });\n    m.side.forEach((t) => {\n      t.text(text[i++] || \"\");\n    });\n  } else if (mode === \"color\") {\n    if (!lock) {\n      m.r_color.fill(DrawColors[color]);\n      m.r_color.fillEnabled(true);\n    } else {\n      m.r_color_set.fill(DrawColors[color]);\n      m.r_color_set.fillEnabled(true);\n      m.fill = color;\n    }\n  }\n  undo_entry.normal = m.normal.text();\n  undo_stack.push(undo_entry);\n}\n\nfunction keyup(event) {\n  if (event.key === \"Shift\") {\n    shift = false;\n  }\n}\n\nfunction set_cell(pos, mode, color, newtext) {\n  let lock = !solve_mode;\n  _set_cell(lock, pos, mode, color, newtext);\n}\n\nfunction lock_cell(pos, mode, color, newtext) {\n  _set_cell(true, pos, mode, color, newtext);\n}\n\nexport function DrawSetNumber(number) {\n  let count = 0;\n  let symbol = number;\n  if (symbol_page > 0) symbol = \"#\" + symbol_page + number;\n  if (boundary) {\n    set_cell(boundary, \"boundary\", current_color, symbol);\n  } else {\n    each_mark((m) => {\n      set_cell([m.x, m.y], current_mode, current_color, symbol);\n      ++count;\n    });\n    if (count > 1) undo_stack.push({ mode: \"group\", count: count });\n  }\n  scene.draw();\n}\n\nexport function DrawSetColor(color_index) {\n  current_color = color_index;\n  if (current_mode === \"color\") {\n    each_mark((m) => {\n      set_cell([m.x, m.y], \"color\", color_index, null);\n    });\n    scene.draw();\n  }\n}\n\nfunction keydown(event) {\n  if (event.target.tagName === \"TEXTAREA\") {\n    return;\n  }\n\n  let newtext;\n  if (event.key === \"Shift\") {\n    shift = true;\n    return;\n  } else if (event.key === \"Delete\" || event.key === \"Backspace\") {\n    DrawDelete();\n    event.preventDefault();\n    return;\n  } else if (event.key >= \"0\" && event.key <= \"9\") {\n    newtext = event.key;\n    if (symbol_page > 0) newtext = \"#\" + symbol_page + newtext;\n  } else if (\n    event.key.length === 1 &&\n    ((event.key >= \"a\" && event.key <= \"z\") ||\n      (event.key >= \"A\" && event.key <= \"Z\")) &&\n    !solve_mode\n  ) {\n    newtext = event.key;\n  } else if (event.key.startsWith(\"Arrow\") && cursor) {\n    let c = cursor.slice();\n    if (!shift) unmark();\n    cursor = c;\n    if (event.key === \"ArrowUp\" && cursor[1] > 0) cursor[1] -= 1;\n    if (event.key === \"ArrowDown\" && cursor[1] < grid_h - 1) cursor[1] += 1;\n    if (event.key === \"ArrowLeft\" && cursor[0] > 0) cursor[0] -= 1;\n    if (event.key === \"ArrowRight\" && cursor[0] < grid_w - 1) cursor[0] += 1;\n    mark(cursor[0], cursor[1]);\n    scene.draw();\n    return;\n  } else {\n    return;\n  }\n\n  if (boundary) {\n    set_cell(boundary, \"boundary\", current_color, newtext);\n  } else {\n    let count = 0;\n    each_mark((m) => ++count);\n    each_mark((m) => {\n      if (current_mode === \"color\") {\n        let color = +newtext - 1;\n        if (color >= 0 && color <= 9)\n          set_cell([m.x, m.y], current_mode, color, null);\n      } else set_cell([m.x, m.y], current_mode, current_color, newtext);\n    });\n    if (count > 1) undo_stack.push({ mode: \"group\", count: count });\n  }\n  scene.draw();\n}\n\nfunction get(x, y, b) {\n  if (x < 0 || y < 0 || x >= grid_w || y >= grid_h) {\n    return null;\n  }\n  let m = matrix[y][x];\n  if (b >= 0) return m.boundary[b];\n  return m;\n}\n\nfunction mark(x, y) {\n  let m = get(x, y);\n  if (!m.mark) {\n    m.mark = true;\n    m.rect.fill(mark_color);\n    m.rect.fillEnabled(true);\n    return true;\n  }\n  return false;\n}\n\nfunction inner_hover(x, y) {\n  if (!drag) return;\n\n  if (current_mode === \"path\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = draw_path(ctx, current.cells, current_style, current_color);\n    scene.draw();\n  }\n}\n\nlet last_toggle_state = null;\n\nfunction edge_toggle(x, y, i) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let c = solve_mode ? \"black\" : DrawColors[current_color];\n  let eo = cell_size * 0.15;\n  let edge;\n  let del;\n\n  if (last_toggle_state === null) {\n    if (b.edge) last_toggle_state = true;\n    else last_toggle_state = false;\n  }\n  del = last_toggle_state;\n\n  if (del) {\n    if (b.edge) {\n      b.edge.destroy();\n      b.edge = null;\n    }\n  } else if (!b.edge) {\n    if (i === 12) {\n      edge = new Line({\n        x: eo,\n        y: -eo,\n        points: [0, 0, 0, cell_size],\n        strokeWidth: 3,\n        stroke: c,\n        listening: false,\n      });\n    } else if (i === 13) {\n      edge = new Line({\n        x: -eo,\n        y: eo,\n        points: [0, 0, cell_size, 0],\n        strokeWidth: 3,\n        stroke: c,\n        listening: false,\n      });\n    }\n    b.edge = edge;\n    b.add(edge);\n  }\n\n  scene.draw();\n}\n\nlet last_toggle = { x: -1, y: -1, i: -1 };\n\nfunction edge_mousemove(event, x, y, i) {\n  if (!drag) return;\n\n  if (last_toggle.x === x && last_toggle.y === y && last_toggle.i === i) return;\n  last_toggle = { x: x, y: y, i: i };\n  edge_toggle(x, y, i);\n}\n\nfunction mousemove(event, x, y) {\n  if (!drag) return;\n\n  if (current_mode === \"path\" || current_mode === \"edge\") {\n  } else if (current_mode === \"cage\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    if (current.objs) current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = draw_cage(ctx, current.cells, current_style);\n    scene.draw();\n  } else {\n    if (mark(x, y)) scene.draw();\n  }\n}\n\nfunction mark_boundary(x, y, i) {\n  unmark();\n\n  let b = get(x, y).boundary[i];\n  b.rect.stroke(\"red\");\n  b.rect.strokeWidth(1);\n  boundary = [x, y, i];\n}\n\nfunction unmark() {\n  if (boundary) {\n    get(...boundary).rect.strokeWidth(0);\n    boundary = null;\n  }\n  each_mark((m) => {\n    m.rect.fillEnabled(false);\n    m.mark = false;\n  });\n  cursor = null;\n}\n\nfunction boundary_mousedown(event, x, y, i) {\n  mark_boundary(x, y, i);\n  scene.draw();\n}\n\nfunction contextmenu(event) {\n  if (event.target.tagName === \"CANVAS\")\n    event.preventDefault();\n}\n\nfunction mousedown(event, x, y, i) {\n  if (event.evt.button === 2 && current_rmode === \"cross\") {\n    if (i !== undefined) {\n      let b = get(x, y).boundary[i];\n      if (b.symbol) {\n        b.symbol.destroy();\n        b.symbol = null;\n      }\n      else\n        draw_symbol(b, \"#44\", \"black\", b.bsize);\n      scene.draw();\n    }\n    return;\n  }\n\n  if (!shift) unmark();\n\n  if (boundary) {\n    get(...boundary).strokeWidth(0);\n    boundary = null;\n  }\n\n  cursor = [x, y];\n  drag = true;\n\n  if (current_mode === \"path\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = draw_path(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"cage\") {\n    current = { cells: [x, y] };\n    current.objs = draw_cage(ctx, current.cells, current_style);\n  } else if (current_mode === \"edge\" && i !== undefined) {\n    edge_toggle(x, y, i);\n  } else {\n    mark(x, y);\n  }\n\n  scene.draw();\n}\n\nfunction edge_mouseup(event, x, y, i) {\n  if (event.evt.button === 2)\n    return;\n  if (last_toggle_state === null)\n    edge_toggle(x, y, i);\n  last_toggle_state = null;\n  drag = false;\n}\n\nfunction mouseup() {\n  drag = false;\n  if (current_mode === \"path\" && current) {\n    stuff.push({\n      type: type_path,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    current = null;\n  } else if (current_mode === \"cage\" && current) {\n    stuff.push({\n      type: type_cage,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n    });\n    current = null;\n  }\n}\n\nexport function DrawSetMode(state) {\n  current_mode = state.mode;\n  solve_mode = state.solveMode;\n\n  each_cell(m =>\n    m.boundary.forEach((b) => {\n      b.rect.fill(null);\n      b.rect.fillEnabled(false);\n      b.rect.off(\"mousedown mousemove mouseup touchmove touchstart touchend\");\n    })\n  );\n\n  if (state.mode === \"cage\") current_style = state.cageStyle;\n  if (state.mode === \"path\") current_style = state.pathStyle;\n  if (state.mode === \"edgecross\") {\n    current_mode = \"edge\";\n    current_rmode = \"cross\";\n  }\n  if (\n    (state.mode === \"normal\" || state.mode === \"number\") &&\n    state.numberStyle === \"normal\"\n  ) {\n    current_mode = \"normal\";\n  }\n\n  if (current_mode === \"edge\") {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === b_edge) {\n          b.rect.fillEnabled(true);\n          b.rect.on(\"mousemove touchmove\", (event) => edge_mousemove(event, m.x, m.y, i));\n          b.rect.on(\"mousedown touchstart\", (event) => mousedown(event, m.x, m.y, i));\n          b.rect.on(\"mouseup touchend\", (event) => edge_mouseup(event, m.x, m.y, i));\n        }\n      })\n    );\n  }\n\n  let setBoundary = (type) => {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        b.rect.fillEnabled(b.btype === type);\n        b.rect.fill(b.btype === type ? transparent : null);\n        if (b.btype === type)\n          b.rect.on(\"mousedown\", (event) =>\n            boundary_mousedown(event, m.x, m.y, i)\n          );\n      })\n    );\n  };\n\n  if (state.mode === \"number\" && state.numberStyle === \"corner\") {\n    current_mode = \"boundary\";\n    setBoundary(b_corner);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"side\") {\n    current_mode = \"boundary\";\n    setBoundary(b_side);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"quarter\") {\n    current_mode = \"boundary\";\n    setBoundary(b_quarter);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"boundary\") {\n    current_mode = \"boundary\";\n    setBoundary(b_boundary);\n  }\n  scene.draw();\n}\n\nfunction each_cell(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      f(m);\n    }\n  }\n}\n\nfunction each_mark(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      if (m.mark) f(m);\n    }\n  }\n}\n\nfunction load_size(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  if (data.version !== 1) {\n    alert(\"Bad version\");\n  }\n\n  cell_size = data.grid[0];\n  grid_w = data.grid[1];\n  grid_h = data.grid[2];\n  grid_left = data.grid[3];\n  grid_right = data.grid[4];\n  grid_top = data.grid[5];\n  grid_bottom = data.grid[6];\n  grid_div_width = data.grid[7];\n  grid_div_height = data.grid[8];\n  grid_style = data.grid[9];\n  grid_left_diagonal = data.grid[10];\n  grid_right_diagonal = data.grid[11];\n}\n\nfunction load(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  stuff = [];\n  each_cell((m) => {\n    m.lock_type = 0;\n    m.normal.text(\"\");\n    m.center.text(\"\");\n  });\n\n  data.cells.forEach((c) => {\n    let [pos, type, text, color] = c;\n    if (type === lock_normal) {\n      lock_cell(pos, \"normal\", color, text);\n    } else if (type === lock_color) {\n      lock_cell(pos, \"color\", color, text);\n    } else if (type === lock_boundary) {\n      lock_cell(pos, \"boundary\", color, text);\n    }\n  });\n  data.stuff.forEach((_s) => {\n    let s = { type: _s[0], style: _s[1], color: _s[2], cells: _s[3] };\n    if (s.type === type_path) {\n      s.objs = draw_path(ctx, s.cells, s.style, s.color);\n    } else if (s.type === type_cage) {\n      s.objs = draw_cage(ctx, s.cells, s.style);\n    }\n    stuff.push(s);\n  });\n}\n\nexport function DrawGetDescription(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  return data.desc;\n}\n\nexport function DrawGenerateUrl(description) {\n  let out = {\n    version: 1,\n    grid: [\n      cell_size,\n      grid_w,\n      grid_h,\n      grid_left,\n      grid_right,\n      grid_top,\n      grid_bottom,\n      grid_div_width,\n      grid_div_height,\n      grid_style,\n      grid_left_diagonal,\n      grid_right_diagonal,\n    ],\n    cells: [],\n    stuff: stuff.map((e) => [e.type, e.style, e.color, e.cells]),\n    desc: description,\n  };\n\n  each_cell((m) => {\n    let pos = [m.x, m.y];\n    if (m.lock_type === lock_normal) {\n      if (m.normal.text() !== \"\")\n        out.cells.push([pos, m.lock_type, m.normal.text(), m.color]);\n      if (m.symcont.symboltext !== \"\" && m.symcont.symboltext !== undefined)\n        out.cells.push([\n          pos,\n          m.lock_type,\n          m.symcont.symboltext,\n          m.symcont.symbolcolor,\n        ]);\n    }\n    if (m.fill >= 0) {\n      out.cells.push([pos, lock_color, null, m.fill]);\n    }\n    m.boundary.forEach((b, i) => {\n      if (b.symboltext)\n        out.cells.push([\n          [m.x, m.y, i],\n          lock_boundary,\n          b.symboltext,\n          b.symbolcolor,\n        ]);\n    });\n  });\n\n  console.log(out);\n\n  let coded = msgpack.encode(out);\n  let packed = pako.deflate(coded);\n  let base64 = btoa(String.fromCharCode(...packed));\n  return window.location.origin + \"/?s=1&p=\" + encodeURIComponent(base64);\n}\n\nexport function DrawCheck() {\n  let r = range(1, 10);\n  let rows = Array.from({ length: 9 }, () => []);\n  let columns = Array.from({ length: 9 }, () => []);\n  let boxes = Array.from({ length: 9 }, () => []);\n  let missing = null;\n  each_cell((m) => {\n    let x = m.x - grid_left;\n    let y = m.y - grid_top;\n    let n = +m.normal.text();\n    if (n === 0 && missing === null) {\n      missing = `Missing entry at ${x + 1}, ${y + 1}`;\n    }\n    columns[x].push(n);\n    rows[y].push(n);\n    let b = Math.floor(x / 3) + Math.floor(y / 3) * 3;\n    boxes[b].push(n);\n  });\n  if (missing) {\n    alert(missing);\n    return false;\n  }\n  for (let i = 0; i < 9; ++i) {\n    if (!isEqual(rows[i].sort(), r)) {\n      alert(`Bad row ${i + 1}`);\n      return false;\n    }\n    if (!isEqual(columns[i].sort(), r)) {\n      alert(`Bad column ${i + 1}`);\n      return false;\n    }\n    if (!isEqual(boxes[i].sort(), r)) {\n      alert(`Bad box ${i + 1}`);\n      return false;\n    }\n  }\n  alert(\"OK\");\n  return true;\n}\n\nexport function DrawDelete() {\n  if (!solve_mode) {\n    let i = findLastIndex(stuff, (s) =>\n      s.cells.find((c) => c[0] === cursor[0] && c[1] === cursor[1])\n    );\n    if (i !== -1) {\n      stuff[i].objs.forEach((o) => o.destroy());\n      stuff.splice(i, 1);\n      scene.draw();\n      return;\n    }\n  }\n\n  let count = 0;\n\n  if (boundary) {\n    set_cell(boundary, \"boundary\", null, \"\");\n  } else {\n    each_mark((m) => {\n      set_cell([m.x, m.y], \"reset\", null, \"\");\n      ++count;\n    });\n  }\n\n  if (count > 1) {\n    undo_stack.push({ mode: \"group\", count: count });\n  }\n\n  scene.draw();\n}\n\nexport function DrawReset() {\n  each_cell((m) => {\n    set_cell([m.x, m.y], \"reset\", null, \"\");\n  });\n\n  if (!solve_mode) {\n    stuff.forEach((s) => s.objs.forEach((o) => o.destroy()));\n    stuff = [];\n  }\n  scene.draw();\n}\n\nexport function DrawUndo() {\n  if (undo_stack.length === 0) return;\n  let u = undo_stack.pop();\n  let count = 0;\n  if (u.mode === \"group\") {\n    count = u.count;\n    u = undo_stack.pop();\n  }\n  do {\n    if (u.mode === \"normal\") {\n      set_cell([u.x, u.y], u.mode, current_color, u.old_normal);\n    } else if (u.mode === \"center\" || u.mode === \"corner\") {\n      set_cell([u.x, u.y], u.mode, current_color, u.newtext);\n    }\n    undo_stack.pop();\n    --count;\n    if (count > 0) {\n      u = undo_stack.pop();\n    }\n  } while (count > 0);\n  scene.draw();\n}\n\nfunction add_grid(layer) {\n  let dash = grid_style === \"dash\" ? [4] : null;\n  let dots = grid_style === \"dots\";\n\n  let thin = {\n    fill: null,\n    stroke: \"black\",\n    strokeWidth: 1,\n    dash: dash,\n  };\n  let fat = {\n    fill: null,\n    stroke: \"black\",\n    strokeWidth: 4,\n  };\n\n  grid_lines.forEach((g) => g.destroy());\n\n  let frame_w = grid_w - grid_left - grid_right;\n  let frame_h = grid_h - grid_top - grid_bottom;\n\n  grid_lines = [];\n  if (grid_left_diagonal || grid_right_diagonal) {\n    let diagonal = {\n      stroke: DrawColors[1],\n      strokeWidth: 4,\n    };\n    if (grid_left_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            grid_left * cell_size,\n            grid_top * cell_size,\n            (grid_left + grid_w) * cell_size,\n            (grid_top + grid_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n    if (grid_right_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            (grid_w - grid_right) * cell_size,\n            grid_top * cell_size,\n            grid_left * cell_size,\n            (grid_top + grid_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n  }\n\n  if (dots) {\n    let dsize = cell_size * 0.07;\n    for (let y = 0; y <= frame_h; ++y) {\n      for (let x = 0; x <= frame_w; ++x) {\n        grid_lines.push(\n          new Circle({\n            x: grid_left + x * cell_size,\n            y: grid_top + y * cell_size,\n            radius: dsize,\n            fill: \"black\",\n          })\n        );\n      }\n    }\n  } else {\n    for (let x = 0; x <= frame_w; ++x) {\n      grid_lines.push(\n        new Line({\n          x: (grid_left + x) * cell_size,\n          y: grid_top * cell_size,\n          points: [0, 0, 0, frame_h * cell_size],\n          ...(x % grid_div_width === 0 ? fat : thin),\n        })\n      );\n    }\n    for (let y = 0; y <= frame_h; ++y) {\n      grid_lines.push(\n        new Line({\n          x: grid_left * cell_size,\n          y: (grid_top + y) * cell_size,\n          points: [0, 0, frame_w * cell_size, 0],\n          ...(y % grid_div_height === 0 ? fat : thin),\n        })\n      );\n    }\n\n    grid_lines.push(\n      new Rect({\n        x: grid_left * cell_size,\n        y: grid_top * cell_size,\n        width: frame_w * cell_size,\n        height: frame_h * cell_size,\n        stroke: \"black\",\n        strokeWidth: 4,\n        fillEnabled: false,\n      })\n    );\n  }\n\n  layer.add(...grid_lines);\n}\n\nfunction addBoundaries(x, y, boundary) {\n  const bc = cell_size * 0.03;\n  const cs = cell_size;\n  const bsize = cell_size * 0.3;\n\n  const addBoundary = (x, y, size, type) => {\n    let g = new Group({ x: x, y: y });\n    let w = size;\n    let h = size;\n    let s = size;\n    if (Array.isArray(size)) {\n      w = size[0];\n      h = size[1];\n      s = Math.min(size[0], size[1]);\n    }\n    let r = new Rect({ width: w, height: h, fillEnabled: false });\n    g.add(r);\n    g.rect = r;\n    g.bsize = s;\n    g.btype = type;\n    boundary.push(g);\n  };\n\n  // Corners\n  addBoundary(bc, bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, bc, bsize, b_corner);\n  addBoundary(bc, cs - bsize - bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, cs - bsize - bc, bsize, b_corner);\n\n  // Sides\n  addBoundary(bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, bc, bsize, b_side);\n  addBoundary(cs - bsize - bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, cs - bsize - bc, bsize, b_side);\n\n  // Quarter\n  const qsize = cell_size * 0.4;\n  const qc = cell_size * 0.05;\n  addBoundary(qc, qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, qc, qsize, b_quarter);\n  addBoundary(qc, cs - qsize - qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, cs - qsize - qc, qsize, b_quarter);\n\n  // Edges\n  const ew = cell_size * 0.3;\n  const eh = cell_size * 0.7;\n  const eo = ew / 2;\n  addBoundary(-eo, eo, [ew, eh], b_edge);\n  addBoundary(eo, -eo, [eh, ew], b_edge);\n  if (x === grid_w - grid_right - 1) addBoundary(cs - eo, eo, [ew, eh], b_edge);\n  if (y === grid_h - grid_bottom - 1)\n    addBoundary(eo, cs - eo, [eh, ew], b_edge);\n\n  // Boundaries\n  addBoundary(-bsize / 2, -bsize / 2, bsize, b_boundary);\n  addBoundary(-bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  addBoundary(cs / 2 - bsize / 2, -bsize / 2, bsize, b_boundary);\n  if (x === grid_w - grid_right - 1) {\n    addBoundary(cs - bsize / 2, -bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  }\n  if (y === grid_h - grid_bottom - 1) {\n    addBoundary(-bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs / 2 - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n  }\n}\n\nexport function DrawRender(code, wrapper, state) {\n  cell_size = state.cellSize;\n  grid_left = state.left;\n  grid_right = state.right;\n  grid_top = state.top;\n  grid_bottom = state.bottom;\n  grid_w = grid_left + state.width + grid_right;\n  grid_h = grid_top + state.height + grid_bottom;\n  grid_div_width = state.gridDivWidth;\n  grid_div_height = state.gridDivHeight;\n  grid_style = state.gridStyle;\n  grid_left_diagonal = state.gridLeftDiagonal;\n  grid_right_diagonal = state.gridRightDiagonal;\n\n  if (code) load_size(code);\n\n  corner_offset = cell_size * 0.08;\n  hover_offset = cell_size * 0.2;\n\n  const margin = cell_size * 0.2;\n  const stage_w = grid_w * cell_size + margin * 2;\n  const stage_h = grid_h * cell_size + margin * 2;\n  let stage = new Stage({\n    container: wrapper,\n    width: stage_w,\n    height: stage_h,\n  });\n  scene = new Layer();\n  stage.add(scene);\n\n  reset();\n\n  const outer_x = margin;\n  const outer_y = margin;\n  const options = {\n    fillEnabled: false,\n    stroke: \"black\",\n    strokeWidth: 0,\n    //cursor: Component.cursors.pointer,\n  };\n  const options_inner = {\n    fillEnabled: false,\n    //cursor: Component.cursors.pointer,\n  };\n\n  textOptions.fontSize = cell_size * 0.8;\n  centerTextOptions.fontSize = cell_size * 0.3;\n\n  outer = new Group({ x: outer_x, y: outer_y });\n  scene.add(outer);\n\n  underlay = new Group();\n  let underlay2 = new Group();\n  let gridlayer = new Group();\n  let overlay = new Group();\n  outer.add(underlay2, underlay, gridlayer, overlay);\n\n  for (let y = 0; y < grid_h; ++y) {\n    matrix[y] = [];\n  }\n  let cs = cell_size;\n\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let xp = x * cs;\n      let yp = y * cs;\n      let main_grid =\n        x >= grid_left &&\n        y >= grid_top &&\n        x < grid_w - grid_right &&\n        y < grid_h - grid_bottom;\n      let ocont = new Group({ x: xp, y: yp });\n      let cont = new Group({ x: xp, y: yp });\n      let symcont = new Group({ x: xp, y: yp });\n      let r = new Rect({\n        width: cs,\n        height: cs,\n        ...options,\n        fillEnabled: true,\n      });\n      let r_color = new Rect({ width: cs, height: cs, ...options });\n      let r_color_set = new Rect({ width: cs, height: cs, ...options });\n      let r_hover = new Rect({\n        x: hover_offset,\n        y: hover_offset,\n        width: cs - hover_offset * 2,\n        height: cs - hover_offset * 2,\n        ...options_inner,\n        fillEnabled: true,\n      });\n      let normal = new Text({ x: 0, y: cs * 0.5, text: \"\", ...textOptions });\n      let center = new Text({\n        x: 0,\n        y: cs * 0.4,\n        text: \"\",\n        ...centerTextOptions,\n      });\n      let corner_pos = [];\n      corner_pos[0] = [corner_offset, corner_offset];\n      corner_pos[1] = [cs - corner_offset, corner_offset];\n      corner_pos[2] = [cs - corner_offset, cs - corner_offset];\n      corner_pos[3] = [corner_offset, cs - corner_offset];\n      let side_pos = [];\n      side_pos[0] = [cs / 2, corner_offset];\n      side_pos[1] = [cs - corner_offset, cs / 2];\n      side_pos[2] = [cs / 2, cs - corner_offset];\n      side_pos[3] = [corner_offset, cs / 2];\n\n      let corner = [];\n      let side = [];\n      let boundary = [];\n      if (main_grid) {\n        cornerTextOptions.fontSize = cs * 0.25;\n        corner_pos.forEach((p, i) => {\n          p = p.slice(0);\n          p[0] -= cs * 0.025;\n          p[1] -= cs * 0.025;\n          if (i === 2 || i === 3) p[1] -= cs * 0.15;\n          if (i === 1 || i === 2) p[0] -= cs * 0.1;\n          corner.push(\n            new Text({ x: p[0], y: p[1], text: \"\", ...cornerTextOptions })\n          );\n        });\n        side_pos.forEach((p, i) => {\n          p = p.slice(0);\n          p[0] -= cs * 0.025;\n          p[1] -= cs * 0.025;\n          if (i === 2) p[1] -= cs * 0.15;\n          if (i === 1 || i === 3) p[1] -= cs * 0.05;\n          if (i === 0 || i === 2) p[0] -= cs * 0.025;\n          if (i === 1) p[0] -= cs * 0.1;\n          side.push(\n            new Text({ x: p[0], y: p[1], text: \"\", ...cornerTextOptions })\n          );\n        });\n        addBoundaries(x, y, boundary);\n      }\n\n      cont.add(r_color_set, r_color, r, r_hover, normal, center);\n      cont.on(\"mousedown touchstart\", (event) => mousedown(event, x, y));\n      cont.on(\"mousemove touchmove\", (event) => mousemove(event, x, y));\n      r_hover.on(\"mousemove\", () => inner_hover(x, y));\n      matrix[y][x] = {\n        x: x,\n        y: y,\n        pos: [xp, yp],\n        symcont: symcont,\n        cont: cont,\n        ocont: ocont,\n        rect: r,\n        boundary: boundary,\n        fill: -1,\n        color: null,\n        normal: normal,\n        center: center,\n        corner: corner,\n        side: side,\n        corner_pos: corner_pos,\n        r_color_set: r_color_set,\n        r_color: r_color,\n        main_grid: main_grid,\n      };\n      underlay.add(symcont, cont);\n      if (main_grid) ocont.add(...corner, ...side, ...boundary);\n      overlay.add(ocont);\n    }\n  }\n\n  add_grid(gridlayer);\n\n  ctx.scene = scene;\n  ctx.underlay = underlay;\n  ctx.underlay2 = underlay2;\n  ctx.cell_size = cell_size;\n  ctx.corner_offset = corner_offset;\n  ctx.each_cell = each_cell;\n  ctx.get = get;\n\n  if (code) load(code);\n\n  scene.draw();\n\n  return null;\n}\n\nwindow.addEventListener(\"keydown\", (event) => keydown(event));\nwindow.addEventListener(\"keyup\", (event) => keyup(event));\nwindow.addEventListener(\"mouseup\", (event) => mouseup(event));\nwindow.addEventListener(\"contextmenu\", (event) => contextmenu(event));\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  DrawRender,\r\n  DrawSymbol,\r\n  DrawSetMode,\r\n  DrawUndo,\r\n  DrawDelete,\r\n  DrawGenerateUrl,\r\n  DrawSetNumber,\r\n  DrawSetColor,\r\n  DrawColors,\r\n  DrawGetDescription,\r\n  DrawReset,\r\n  DrawCheck,\r\n  DrawSetSymbolPage,\r\n} from \"./draw\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Slider,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Grid,\r\n  TextField,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport { PlayArrow, Pause, SkipPrevious } from \"@material-ui/icons\";\r\n\r\nconst query = window.location.search;\r\nconst url_params = new URLSearchParams(query);\r\nconst code = url_params.get(\"p\");\r\nconst solve_mode = url_params.get(\"s\") === \"1\";\r\n\r\nfunction UrlDialog(props) {\r\n  let openInTab = () => {\r\n    props.onClose();\r\n    let w = window.open(props.text, \"_blank\");\r\n    w.focus();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onClose}>\r\n      <DialogTitle>URL</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{props.text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={openInTab}>Open in tab</Button>\r\n        <Button color=\"primary\" onClick={props.onClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.symbolRef = [];\r\n    for (let i = 0; i < 9; ++i) this.symbolRef.push(React.createRef());\r\n\r\n    this.state = {\r\n      solveMode: solve_mode,\r\n      settingsMode: \"size\",\r\n      color: 0,\r\n      description: \"\",\r\n      cellSize: 64,\r\n      width: 9,\r\n      height: 9,\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      gridDivWidth: 3,\r\n      gridDivHeight: 3,\r\n      gridStyle: \"lines\",\r\n      gridLeftDiagonal: false,\r\n      gridRightDiagonal: false,\r\n      mode: solve_mode ? \"normal\" : \"number\",\r\n      numberStyle: \"normal\",\r\n      cageStyle: \"dash\",\r\n      pathStyle: \"arrow\",\r\n      dialogOpen: false,\r\n      dialogText: \"\",\r\n      seconds: 0,\r\n      timeStatus: true,\r\n      symbolPage: \"0\",\r\n    };\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.target.tagName === \"TEXTAREA\")\r\n      return;\r\n\r\n    if (this.state.solveMode) {\r\n      const cycle_modes = [\"normal\", \"center\", \"corner\", \"color\"];\r\n      let i = \"qwer\".indexOf(event.key);\r\n      if (event.key.length === 1 && i !== -1) this.setMode(cycle_modes[i]);\r\n      else if (event.key === \" \") {\r\n        let i = cycle_modes.indexOf(this.state.mode);\r\n        i = (i + 1) % cycle_modes.length;\r\n        this.setMode(cycle_modes[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let desc = \"\";\r\n    if (code) {\r\n      desc = DrawGetDescription(code);\r\n    }\r\n    this.setState({ description: desc }, () => {\r\n      DrawRender(code, this.canvasRef.current, this.state);\r\n      DrawSetMode(this.state);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    this.interval = setInterval(() => {\r\n      if (this.state.timeStatus) {\r\n        this.setState({ seconds: this.state.seconds + 1 });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  setMode = (mode) => {\r\n    let b = document.getElementById(\"button\" + mode);\r\n    if (b) b.focus();\r\n    this.setState({ mode: mode }, () => {\r\n      DrawSetMode(this.state);\r\n    });\r\n  };\r\n\r\n  setStyle = (style, value) => {\r\n    this.setState({ [style]: value }, () => DrawSetMode(this.state));\r\n  };\r\n\r\n  generateUrl = () => {\r\n    let url = DrawGenerateUrl(this.state.description);\r\n    this.setState({ dialogText: url, dialogOpen: true });\r\n  };\r\n\r\n  numberStyleBox() {\r\n    return (\r\n      <Box margin=\"10px\">\r\n        <FormControl fullWidth={true}>\r\n          <InputLabel shrink id=\"numberstyle-label\">\r\n            Style\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"numberstyle-label\"\r\n            fullWidth={true}\r\n            value={this.state.numberStyle}\r\n            onChange={(event) =>\r\n              this.setStyle(\"numberStyle\", event.target.value)\r\n            }\r\n          >\r\n            <MenuItem value=\"normal\">Normal</MenuItem>\r\n            <MenuItem value=\"corner\">Corner</MenuItem>\r\n            <MenuItem value=\"side\">Side</MenuItem>\r\n            <MenuItem value=\"quarter\">Quarter</MenuItem>\r\n            <MenuItem value=\"boundary\">Boundary</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  cageStyleBox() {\r\n    return (\r\n      <Box margin=\"10px\">\r\n        <FormControl fullWidth={true}>\r\n          <InputLabel shrink id=\"cagestyle-label\">\r\n            Style\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"cagestyle-label\"\r\n            fullWidth={true}\r\n            value={this.state.cageStyle}\r\n            onChange={(event) => this.setStyle(\"cageStyle\", event.target.value)}\r\n          >\r\n            <MenuItem value=\"dash\">Dashed</MenuItem>\r\n            <MenuItem value=\"edge\">Edge</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  pathStyleBox() {\r\n    return (\r\n      <Box margin=\"10px\">\r\n        <FormControl fullWidth={true}>\r\n          <InputLabel shrink id=\"pathstyle-label\">\r\n            Style\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"pathstyle-label\"\r\n            fullWidth={true}\r\n            value={this.state.pathStyle}\r\n            onChange={(event) => this.setStyle(\"pathStyle\", event.target.value)}\r\n          >\r\n            <MenuItem value=\"thin\">Line</MenuItem>\r\n            <MenuItem value=\"fat\">Fat Line</MenuItem>\r\n            <MenuItem value=\"thermo\">Thermo</MenuItem>\r\n            <MenuItem value=\"arrow\">Arrow</MenuItem>\r\n            <MenuItem value=\"arrowcircle\">Arrow with circle</MenuItem>\r\n            <MenuItem value=\"roundborder\">Round border</MenuItem>\r\n            <MenuItem value=\"border\">Border</MenuItem>\r\n            <MenuItem value=\"roundfill\">Round fill</MenuItem>\r\n            <MenuItem value=\"squarefill\">Square fill</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  timerBox() {\r\n    return (\r\n      <Box minWidth=\"250px\">\r\n        <Box margin=\"20px\" padding=\"10px\" boxShadow={3}>\r\n          <Typography align=\"center\" variant=\"h4\">\r\n            {new Date(this.state.seconds * 1000).toISOString().substr(11, 8)}\r\n          </Typography>\r\n          <ButtonGroup fullWidth={true} size=\"large\">\r\n            <Button onClick={() => this.setState({ timeStatus: true })}>\r\n              <PlayArrow />\r\n            </Button>\r\n            <Button onClick={() => this.setState({ timeStatus: false })}>\r\n              <Pause />\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.setState({ seconds: 0, timeStatus: false })}\r\n            >\r\n              <SkipPrevious />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Box>\r\n        {this.state.description !== \"\" && (\r\n          <Box margin=\"20px\">\r\n            <TextField\r\n              multiline\r\n              variant=\"outlined\"\r\n              InputProps={{ readOnly: true }}\r\n              value={this.state.description}\r\n            />\r\n          </Box>\r\n        )}\r\n        <Box margin=\"20px\">\r\n          <TextField multiline variant=\"outlined\" />\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  settingLeftBox() {\r\n    return (\r\n      <Box minWidth=\"250px\">\r\n        <Box margin=\"30px\">\r\n          <Select\r\n            fullWidth={true}\r\n            value={this.state.mode}\r\n            onChange={(event) => this.setMode(event.target.value)}\r\n          >\r\n            <MenuItem value=\"number\">Number</MenuItem>\r\n            <MenuItem value=\"cage\">Cage</MenuItem>\r\n            <MenuItem value=\"path\">Path</MenuItem>\r\n            <MenuItem value=\"color\">Color</MenuItem>\r\n            <MenuItem value=\"edge\">Edge</MenuItem>\r\n          </Select>\r\n          {this.state.mode === \"number\" && this.numberStyleBox()}\r\n          {this.state.mode === \"cage\" && this.cageStyleBox()}\r\n          {this.state.mode === \"path\" && this.pathStyleBox()}\r\n        </Box>\r\n        <Box margin=\"30px\">\r\n          <ButtonGroup\r\n            fullWidth={true}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            orientation=\"vertical\"\r\n          >\r\n            <Button onClick={this.generateUrl}>Generate URL</Button>\r\n          </ButtonGroup>\r\n        </Box>\r\n        <Box margin=\"30px\">\r\n          <Select\r\n            fullWidth={true}\r\n            value={this.state.settingsMode}\r\n            onChange={(event) =>\r\n              this.setState({ settingsMode: event.target.value })\r\n            }\r\n          >\r\n            <MenuItem value=\"size\">Size</MenuItem>\r\n            <MenuItem value=\"margins\">Margins</MenuItem>\r\n            <MenuItem value=\"grid\">Grid</MenuItem>\r\n            <MenuItem value=\"description\">Description</MenuItem>\r\n          </Select>\r\n        </Box>\r\n        {this.state.settingsMode === \"size\" && (\r\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\r\n            {this.sizeSlider(\"cellSize\", \"Cell size\", 32, 96, 5, true)}\r\n            {this.sizeSlider(\"width\", \"Width\", 3, 30)}\r\n            {this.sizeSlider(\"height\", \"Height\", 3, 30)}\r\n          </Box>\r\n        )}\r\n        {this.state.settingsMode === \"margins\" && (\r\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\r\n            {this.sizeSlider(\"left\", \"Left\")}\r\n            {this.sizeSlider(\"right\", \"Right\")}\r\n            {this.sizeSlider(\"top\", \"Top\")}\r\n            {this.sizeSlider(\"bottom\", \"Bottom\")}\r\n          </Box>\r\n        )}\r\n        {this.state.settingsMode === \"grid\" && (\r\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\r\n            {this.sizeSlider(\"gridDivWidth\", \"Grid divider width\")}\r\n            {this.sizeSlider(\"gridDivHeight\", \"Grid divider height\")}\r\n            <FormControl fullWidth={true}>\r\n              <InputLabel shrink id=\"gridstyle-label\">\r\n                Style\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"gridstyle-label\"\r\n                fullWidth={true}\r\n                value={this.state.gridStyle}\r\n                onChange={(event) =>\r\n                  this.setGridState(\"gridStyle\", event.target.value)\r\n                }\r\n              >\r\n                <MenuItem value=\"lines\">Lines</MenuItem>\r\n                <MenuItem value=\"dash\">Dashed</MenuItem>\r\n                <MenuItem value=\"dots\">Dots</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Typography>Diagonals</Typography>\r\n            <Switch\r\n              checked={this.state.gridLeftDiagonal}\r\n              onChange={(e) => {\r\n                this.setGridState(\"gridLeftDiagonal\", e.target.checked);\r\n              }}\r\n            />\r\n            <Switch\r\n              checked={this.state.gridRightDiagonal}\r\n              onChange={(e) => {\r\n                this.setGridState(\"gridRightDiagonal\", e.target.checked);\r\n              }}\r\n            />\r\n          </Box>\r\n        )}\r\n        {this.state.settingsMode === \"description\" && (\r\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\r\n            <TextField\r\n              multiline\r\n              rows={8}\r\n              value={this.state.description}\r\n              onChange={(e) => this.setState({ description: e.target.value })}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({ [event.target.parentNode.id]: newValue });\r\n  };\r\n\r\n  setGrid = () => {\r\n    DrawRender(code, this.canvasRef.current, this.state);\r\n    DrawSetMode(this.state);\r\n  };\r\n\r\n  setSymbolPage = (event) => {\r\n    this.setState({ symbolPage: event.target.value }, () => {\r\n      if (+this.state.symbolPage > 0)\r\n        for (let i = 0; i < 9; ++i) {\r\n          DrawSymbol(\r\n            this.symbolRef[i].current,\r\n            this.state.symbolPage,\r\n            i + 1,\r\n            30\r\n          );\r\n        }\r\n    });\r\n    DrawSetSymbolPage(+event.target.value);\r\n  };\r\n\r\n  setGridState = (state, value) => {\r\n    this.setState({ [state]: value }, () => {\r\n      DrawRender(code, this.canvasRef.current, this.state);\r\n      DrawSetMode(this.state);\r\n    });\r\n  };\r\n\r\n  sizeSlider(type, label, min = 0, max = 10, step = 1, marks = false) {\r\n    return (\r\n      <Box>\r\n        <Typography>\r\n          {label}: {this.state[type]}\r\n        </Typography>\r\n        <Slider\r\n          value={this.state[type]}\r\n          min={min}\r\n          max={max}\r\n          step={step}\r\n          marks={marks}\r\n          id={type}\r\n          onChange={this.handleChange}\r\n          onChangeCommitted={this.setGrid}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  colorGrid(num) {\r\n    return DrawColors.slice(0, num).map((color, index) => (\r\n      <Grid key={index} item xs={4}>\r\n        <Button variant=\"outlined\" onClick={() => DrawSetColor(index)}>\r\n          <div\r\n            style={{\r\n              border: \"1px solid black\",\r\n              background: color,\r\n              width: \"30px\",\r\n              height: \"30px\",\r\n            }}\r\n          />\r\n        </Button>\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  renderSolveMode() {\r\n    let buttons = [\r\n      [\"normal\", \"Normal\"],\r\n      [\"edgecross\", \"Edge+cross\"],\r\n      [\"center\", \"Center\"],\r\n      [\"corner\", \"Corner\"],\r\n      [\"color\", \"Color\"],\r\n    ];\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        {this.timerBox()}\r\n        <Box display=\"flex\">\r\n          <div id=\"canvas\" ref={this.canvasRef}></div>\r\n        </Box>\r\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\r\n          <Box margin=\"30px\">\r\n            <ButtonGroup\r\n              fullWidth={true}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              orientation=\"vertical\"\r\n            >\r\n              {buttons.map((b) => (\r\n                <Button\r\n                  id={\"button\" + b[0]}\r\n                  key={b[0]}\r\n                  color={this.state.mode === b[0] ? \"primary\" : \"default\"}\r\n                  onClick={() => this.setMode(b[0])}\r\n                >\r\n                  {b[1]}\r\n                </Button>\r\n              ))}\r\n            </ButtonGroup>\r\n          </Box>\r\n          <Box margin=\"30px\">\r\n            <ButtonGroup\r\n              fullWidth={true}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              orientation=\"vertical\"\r\n            >\r\n              <Button onClick={DrawReset}>Reset</Button>\r\n              <Button onClick={DrawCheck}>Check</Button>\r\n              <Button onClick={DrawUndo}>Undo</Button>\r\n              <Button onClick={DrawDelete}>Delete</Button>\r\n            </ButtonGroup>\r\n          </Box>\r\n          <Box margin=\"30px\">\r\n            <Grid container>\r\n              {this.state.mode === \"color\" && this.colorGrid(9)}\r\n              {this.state.mode !== \"color\" &&\r\n                [...Array(9).keys()].map((index) => (\r\n                  <Grid key={index} item xs={4}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={() => DrawSetNumber(index + 1)}\r\n                    >\r\n                      <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\r\n                    </Button>\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  colorSelect() {\r\n    return DrawColors.map((color, index) => (\r\n      <Grid key={index} item xs={4}>\r\n        <Button\r\n          variant={this.state.color === index ? \"contained\" : \"outlined\"}\r\n          onClick={() => {\r\n            this.setState({ color: index });\r\n            DrawSetColor(index);\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              border: \"1px solid black\",\r\n              background: color,\r\n              width: \"30px\",\r\n              height: \"30px\",\r\n            }}\r\n          />\r\n        </Button>\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  pageSelect() {\r\n    const pages = [\"Numbers\", \"Circles\", \"Arrows\", \"Arrows 2\", \"Misc\"];\r\n\r\n    return (\r\n      <FormControl fullWidth={true}>\r\n        <Select\r\n          fullWidth={true}\r\n          value={this.state.symbolPage}\r\n          onChange={this.setSymbolPage}\r\n        >\r\n          {pages.map((p, i) => (\r\n            <MenuItem key={p} value={i}>\r\n              {p}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  symbolGrid() {\r\n    return [...Array(9).keys()].map((index) => (\r\n      <Grid key={index} item xs={4}>\r\n        <Button variant=\"outlined\" onClick={() => DrawSetNumber(index + 1)}>\r\n          {+this.state.symbolPage === 0 && (\r\n            <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\r\n          )}\r\n          {+this.state.symbolPage > 0 && <div ref={this.symbolRef[index]} />}\r\n        </Button>\r\n      </Grid>\r\n    ));\r\n  }\r\n\r\n  settingRight() {\r\n    return (\r\n      <Grid container>\r\n        {this.state.mode !== \"color\" && this.colorSelect()}\r\n        {this.state.mode === \"color\" && this.colorGrid()}\r\n        {this.state.mode === \"number\" && this.pageSelect()}\r\n        {this.state.mode === \"number\" && this.symbolGrid()}\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  renderSetMode() {\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <UrlDialog\r\n          text={this.state.dialogText}\r\n          open={this.state.dialogOpen}\r\n          onClose={() => this.setState({ dialogOpen: false })}\r\n        />\r\n        {this.settingLeftBox()}\r\n        <Box display=\"flex\">\r\n          <div id=\"canvas\" ref={this.canvasRef}></div>\r\n        </Box>\r\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\r\n          <Box margin=\"30px\">\r\n            <ButtonGroup\r\n              fullWidth={true}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              orientation=\"vertical\"\r\n            >\r\n              <Button onClick={DrawReset}>Reset</Button>\r\n              <Button onClick={DrawCheck}>Check</Button>\r\n              <Button onClick={DrawUndo}>Undo</Button>\r\n              <Button onClick={DrawDelete}>Delete</Button>\r\n            </ButtonGroup>\r\n          </Box>\r\n          <Box margin=\"30px\">{this.settingRight()}</Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.state.solveMode ? this.renderSolveMode() : this.renderSetMode();\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}