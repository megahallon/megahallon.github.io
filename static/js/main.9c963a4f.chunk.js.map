{"version":3,"sources":["cage.js","path.js","symbols.js","draw.js","App.js","serviceWorker.js","index.js"],"names":["DrawCage","ctx","cells","_style","color","split","style","size","width","get_line_width","_size","corner_offset","cell_size","cs","get_cage","x","y","find","e","DrawColorPremul","corner_pos","corner_ext_pos","lines","each_cell","m","up","down","left","right","ul","ur","dl","dr","l","add_line","start","end","push","Line","points","dash","strokeWidth","stroke","slice","length","cont","add","concat","drawDashCage","corner","lineCap","ocont","drawEdgeCage","Thermo","context","this","beginPath","moveTo","arc","Math","PI","n","lineTo","strokeShape","Arrow","config","arrowLength","p0x","p0y","dx","dy","sqrt","a","atan2","a1","a2","al","w","cos","sin","center","p","DrawPath","DrawColors","start_px","map","px","objs","roundLine","flat","lineJoin","squareLine","newLine","thermo","line","closed","fill","line1","line2","arrow","bulb","Circle","radius","underlay2","scene","draw","DrawSymbol","container","str","_color","bg","cx","cy","sym","page","substr","symbol","min","meas","Text","text","fontSize","listening","measureSize","position","height","offset","offset2","aopt","pointerLength","pointerWidth","Star","innerRadius","outerRadius","numPoints","o","Group","Rect","rect","destroy","c","symboltext","symbolcolor","grid_w","grid_h","main_w","main_h","grid_left","grid_top","grid_bottom","grid_right","grid_div_width","grid_div_height","grid_style","grid_left_diagonal","grid_right_diagonal","hover_offset","symbol_page","multi_digit","number_bg","cursor_visible","sol_text_color","Util","colorToRGBA","r","g","b","current_color","current_mode","current_rmode","current_style","solve_mode","matrix","stuff","edges","drag","drag_toggle","drag_button","undo_stack","redo_stack","current","outer","underlay","shift","cursor","boundary","grid_lines","RectHolder","obj","undefined","TextHolder","_text","t","setSymbol","normal","symcont","bsize","DrawSymbolElement","element","num","stage","Stage","layer","Layer","saveState","state","s","r_color","cross","edge","centerline","edgecross","forEach","i","lock","saveUndo","loadState","get","setCell","drawCross","drawEdge","drawEdgeCross","drawCenterLine","_setCell","pos","mode","newtext","main_grid","lock_type","index","r_color_set","indexOf","lock_cell","DrawSetNumber","number","count","each_mark","DrawSetColor","color_index","mark","fillEnabled","last_toggle_state","set","eo","new_edge","x1","y1","btype2","edgeToggle","cp","bw","bwidth","bh","bheight","cline","centerLineToggle","last_toggle","last_move","unmark","boundary_mousedown","event","mark_boundary","mousedown","evt","stopPropagation","type","button","hasCross","hasEdgeCross","mouseup","last","DrawSetMode","numberBackground","multiDigit","cageStyle","pathStyle","edgeStyle","numberStyle","btype","on","edgeMousemove","edgeMouseup","setBoundary","f","load_grid","base64","pack","Uint8Array","from","atob","charCodeAt","unpack","pako","inflate","data","msgpack","decode","version","alert","unserialize_grid","grid","unserialize","k","_s","serialize","meta","out","desc","console","log","DrawDelete","findLastIndex","splice","DrawUndo","pop","DrawRedo","render","wrapper","margin","stage_w","stage_h","gridlayer","overlay","xp","yp","r_inner","corner_size","bc","addBoundary","type2","h","Array","isArray","qsize","qc","ew","eh","addBoundaries","mousemove","inner_mousemove","dots","thin","fat","diagonal","dsize","addGrid","DrawRender","code","solveMode","cellSize","top","bottom","gridDivWidth","gridDivHeight","gridStyle","gridLeftDiagonal","gridRightDiagonal","load","window","addEventListener","target","tagName","key","preventDefault","startsWith","keydown","keyup","window_mousedown","contextmenu","query","location","search","urlParams","URLSearchParams","ColorGrid","props","Grid","item","xs","Button","variant","onClick","border","background","Timer","useState","seconds","setSeconds","useEffect","id","setInterval","active","clearInterval","Box","padding","boxShadow","Typography","align","Date","toISOString","ButtonGroup","fullWidth","onStart","PlayArrow","onStop","Pause","SkipPrevious","ResetButton","confirm","useConfirm","description","then","setState","timeStatus","catch","SymbolSelect","setPage","symbolRef","useRef","DrawSetSymbolPage","FormControl","Select","value","onChange","MenuItem","keys","ref","ColorSelect","setColor","UrlDialog","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","focus","App","handleKeyDown","cycle_modes","setMode","document","getElementById","setStyle","generateUrl","url","coded","encode","packed","deflate","btoa","String","fromCharCode","origin","encodeURIComponent","DrawGenerateUrl","solveSudoku","solveEdge","solveCenterLine","dialogText","dialogOpen","setGridState","setGrid","check","range","rows","columns","boxes","missing","floor","isEqual","sort","DrawCheck","status","msg","canvasRef","React","createRef","settingsMode","symbolPage","DrawGetMetaData","removeEventListener","interval","InputLabel","shrink","labelId","FormControlLabel","control","Switch","checked","label","minWidth","TextField","multiline","InputProps","readOnly","numberStyleBox","cageStyleBox","pathStyleBox","edgeStyleBox","sizeSlider","FormLabel","FormGroup","newValue","includes","DrawUpdateGrid","max","step","marks","Slider","handleChange","onChangeCommitted","buttons","display","flexDirection","timerBox","maxWidth","orientation","settingLeftBox","settingRight","renderSolveMode","renderSetMode","Component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9c963a4f.chunk.js","sourcesContent":["import { Line } from \"konva\";\r\nimport { DrawColorPremul } from \"./draw\";\r\n\r\nexport function DrawCage(ctx, cells, _style, color) {\r\n  let [style, size] = _style.split(\":\");\r\n  let width = ctx.get_line_width(size);\r\n  if (style === \"dash\") return drawDashCage(ctx, cells, width, color);\r\n  if (style === \"edge\") return drawEdgeCage(ctx, cells, width, color);\r\n}\r\n\r\nfunction drawDashCage(ctx, cells, _size, color) {\r\n  let size = 2; //ctx.cell_size / 32;\r\n  let corner_offset = ctx.cell_size * 0.08;\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n  color = DrawColorPremul(color);\r\n\r\n  const corner_pos = [\r\n    [corner_offset, corner_offset],\r\n    [cs - corner_offset, corner_offset],\r\n    [cs - corner_offset, cs - corner_offset],\r\n    [corner_offset, cs - corner_offset],\r\n  ];\r\n\r\n  const corner_ext_pos = [\r\n    [0, corner_offset],\r\n    [corner_offset, 0],\r\n    [cs - corner_offset, 0],\r\n    [cs, corner_offset],\r\n    [cs, cs - corner_offset],\r\n    [cs - corner_offset, cs],\r\n    [corner_offset, cs],\r\n    [0, cs - corner_offset],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let ul = get_cage(x - 1, y - 1);\r\n    let ur = get_cage(x + 1, y - 1);\r\n    let dl = get_cage(x - 1, y + 1);\r\n    let dr = get_cage(x + 1, y + 1);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({\r\n          points: [...start, ...end],\r\n          dash: [ctx.cell_size / 20],\r\n          strokeWidth: size,\r\n          stroke: color,\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner_pos[0];\r\n      let end = corner_pos[3];\r\n      if (up) {\r\n        start = corner_ext_pos[1].slice(0);\r\n        start[1] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[6].slice(0);\r\n        end[1] += !dl ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner_pos[1];\r\n      let end = corner_pos[2];\r\n      if (up) {\r\n        start = corner_ext_pos[2].slice(0);\r\n        start[1] -= !ur ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[5].slice(0);\r\n        end[1] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner_pos[0];\r\n      let end = corner_pos[1];\r\n      if (left) {\r\n        start = corner_ext_pos[0].slice(0);\r\n        start[0] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[3].slice(0);\r\n        end[0] += !ur ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner_pos[3];\r\n      let end = corner_pos[2];\r\n      if (left) {\r\n        start = corner_ext_pos[7].slice(0);\r\n        start[0] -= !dl ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[4].slice(0);\r\n        end[0] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (l.length > 0) m.cont.add(...l);\r\n    lines = lines.concat(l);\r\n  });\r\n  return lines;\r\n}\r\n\r\nfunction drawEdgeCage(ctx, cells, size, color) {\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n  color = DrawColorPremul(color);\r\n\r\n  const corner = [\r\n    [0, 0],\r\n    [cs, 0],\r\n    [cs, cs],\r\n    [0, cs],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({\r\n          points: [...start, ...end],\r\n          strokeWidth: size,\r\n          stroke: color,\r\n          lineCap: \"round\",\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner[0];\r\n      let end = corner[3];\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner[1];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner[0];\r\n      let end = corner[1];\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner[3];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (l.length > 0) m.ocont.add(...l);\r\n    lines.push(...l);\r\n  });\r\n  return lines;\r\n}\r\n","import { Circle, Line } from \"konva\";\r\nimport { DrawColors } from \"./draw\";\r\n\r\nclass Thermo extends Line {\r\n  _sceneFunc(context) {\r\n    let points = this.points();\r\n    let length = points.length;\r\n    context.beginPath();\r\n    context.moveTo(points[0], points[1]);\r\n    context.arc(points[0], points[1], 16, 0, 2 * Math.PI, true);\r\n    context.moveTo(points[0], points[1]);\r\n    for (let n = 2; n < length; n += 2) {\r\n      context.lineTo(points[n], points[n + 1]);\r\n    }\r\n    context.strokeShape(this);\r\n  }\r\n}\r\n\r\nclass Arrow extends Line {\r\n  constructor(config) {\r\n    super(config);\r\n    this.arrowLength = config.arrowLength;\r\n  }\r\n\r\n  _sceneFunc(context) {\r\n    let points = this.points();\r\n    let length = points.length;\r\n    context.beginPath();\r\n    context.moveTo(points[0], points[1]);\r\n    for (let n = 2; n < length; n += 2) {\r\n      context.lineTo(points[n], points[n + 1]);\r\n    }\r\n    let p0x = points[points.length - 2];\r\n    let p0y = points[points.length - 1];\r\n    let p1x = points[points.length - 4];\r\n    let p1y = points[points.length - 3];\r\n    let dx = p1x - p0x;\r\n    let dy = p1y - p0y;\r\n    let dl = Math.sqrt(dx ** 2 + dy ** 2);\r\n    if (dl > 0) {\r\n      let a = Math.atan2(dy, dx);\r\n      let a1 = a + Math.PI / 4;\r\n      let a2 = a - Math.PI / 4;\r\n      let al = this.arrowLength;\r\n      let w = this.strokeWidth() / 2;\r\n      context.moveTo(p0x + al * Math.cos(a1), p0y + al * Math.sin(a1));\r\n      context.lineTo(p0x - dx * w / dl, p0y - dy * w / dl);\r\n      context.lineTo(p0x + al * Math.cos(a2), p0y + al * Math.sin(a2));\r\n    }\r\n    context.strokeShape(this);\r\n  }\r\n}\r\n\r\nfunction center(cell_size, p) {\r\n  return [p[0] * cell_size + cell_size / 2, p[1] * cell_size + cell_size / 2];\r\n}\r\n\r\nexport function DrawPath(ctx, cells, style, color) {\r\n  let cell_size = ctx.cell_size;\r\n  color = DrawColors[color];\r\n\r\n  let start_px = center(cell_size, cells[0]);\r\n  let points = cells.map((p) => {\r\n    let px = center(cell_size, p);\r\n    return [px[0], px[1]];\r\n  });\r\n  if (points.length === 1) points.push(points[points.length - 1]);\r\n  points = points.flat();\r\n  let objs = [];\r\n  let roundLine = {\r\n    points: points,\r\n    stroke: color,\r\n    lineCap: \"round\",\r\n    lineJoin: \"round\",\r\n  };\r\n  let squareLine = {\r\n    points: points,\r\n    stroke: color,\r\n    lineCap: \"square\",\r\n    lineJoin: \"miter\",\r\n  };\r\n  let newLine = (width) => new Line({\r\n    ...roundLine,\r\n    strokeWidth: width,\r\n  });\r\n\r\n  if (style === \"thermo\") {\r\n    let thermo = new Thermo({\r\n      ...roundLine,\r\n      strokeWidth: cell_size * 0.3,\r\n    });\r\n    objs.push(thermo);\r\n  } else if (style === \"polygon\") {\r\n    let strokeWidth = cell_size * 0.05;\r\n    let line = new Line({\r\n      ...roundLine,\r\n      strokeWidth: strokeWidth,\r\n      stroke: color,\r\n      closed: true,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"polygonfill\") {\r\n    let strokeWidth = cell_size * 0.05;\r\n    let line = new Line({\r\n      ...roundLine,\r\n      strokeWidth: strokeWidth,\r\n      fill: color,\r\n      closed: true,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"thin\") {\r\n    let line = newLine(cell_size * 0.05);\r\n    objs.push(line);\r\n  } else if (style === \"medium\") {\r\n    let line = newLine(cell_size * 0.15);\r\n    objs.push(line);\r\n  } else if (style === \"fat\") {\r\n    let line = newLine(cell_size * 0.3);\r\n    objs.push(line);\r\n  } else if (style === \"roundborder\") {\r\n    let line1 = newLine(cell_size * 0.8);\r\n    let line2 = new Line({\r\n      ...roundLine,\r\n      strokeWidth: cell_size * 0.67,\r\n      stroke: \"white\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"border\") {\r\n    // TODO only allow 90 degree angles\r\n    let line1 = new Line({\r\n      ...squareLine,\r\n      strokeWidth: cell_size * 0.8,\r\n    });\r\n    let line2 = new Line({\r\n      ...squareLine,\r\n      strokeWidth: cell_size * 0.67,\r\n      stroke: \"white\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"roundfill\") {\r\n    let line = newLine(cell_size * 0.8);\r\n    objs.push(line);\r\n  } else if (style === \"squarefill\") {\r\n    let line = new Line({\r\n      ...squareLine,\r\n      strokeWidth: cell_size * 0.8,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"arrowcircle\" || style === \"arrow\") {\r\n    let strokeWidth = cell_size * 0.1;\r\n    let arrow = new Arrow({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      lineCap: \"square\",\r\n      lineJoin: \"miter\",\r\n      arrowLength: cell_size * 0.3\r\n    });\r\n    objs.push(arrow);\r\n    if (style === \"arrowcircle\") {\r\n      let bulb = new Circle({\r\n        x: start_px[0],\r\n        y: start_px[1],\r\n        radius: cell_size * 0.4,\r\n        fill: \"white\",\r\n        strokeWidth: strokeWidth,\r\n        stroke: color,\r\n      });\r\n      objs.push(bulb);\r\n    }\r\n  }\r\n\r\n  ctx.underlay2.add(...objs);\r\n  ctx.scene.draw();\r\n\r\n  return objs;\r\n}\r\n","//import Arrow from \"./arrow\";\r\nimport { Circle, Star, Rect, Group, Text, Line, Arrow } from \"konva\";\r\nimport { DrawColorPremul } from \"./draw\";\r\n\r\nexport function DrawSymbol(container, str, _color, _size, bg) {\r\n  let page = +str.substr(1, 1);\r\n  let symbol = +str.substr(2, 1);\r\n  let color = DrawColorPremul(_color);\r\n  let cx;\r\n  let cy;\r\n  let size;\r\n  if (typeof _size === \"object\") {\r\n    cx = _size[0] / 2;\r\n    cy = _size[1] / 2;\r\n    size = Math.min(..._size);\r\n  } else {\r\n    size = _size;\r\n    cx = size / 2;\r\n    cy = size / 2;\r\n  }\r\n  let sym;\r\n\r\n  if (str[0] !== \"#\") page = 0;\r\n\r\n  if (page === 0) {\r\n    sym = new Text({\r\n      text: str,\r\n      fontSize: size,\r\n      fill: color,\r\n      listening: false,\r\n    });\r\n    let meas = sym.measureSize(str);\r\n    sym.position({\r\n      x: cx - meas.width / 2,\r\n      y: cy - meas.height / 2,\r\n    });\r\n  }\r\n  if (page === 1) {\r\n    if (symbol === 1) {\r\n      // circle fill\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      // circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // dash circle fill\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      // dash circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      // dash circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        strokeWidth: 0,\r\n      });\r\n    }\r\n  }\r\n  if (page === 2) {\r\n    // Little killer style arrows\r\n    let offset = size * 0.05;\r\n    let offset2 = size * 0.15;\r\n    let aopt = {\r\n      stroke: color,\r\n      strokeWidth: 3,\r\n      fill: color,\r\n      pointerLength: size * 0.3,\r\n      pointerWidth: size * 0.3,\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [offset, offset, size - cx - offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, size - cx - offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: offset2,\r\n        y: cy,\r\n        points: [0, 0, size - offset2 * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: size - offset2,\r\n        y: cy,\r\n        points: [0, 0, -(size - offset2 * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: offset2,\r\n        points: [0, 0, 0, size - offset2 * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: size - offset2,\r\n        points: [0, 0, 0, -(size - offset2 * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 3) {\r\n    // Yajilin style arrows\r\n    let offset = size * 0.15;\r\n    let aopt = {\r\n      stroke: color,\r\n      fill: color,\r\n      strokeWidth: 2,\r\n      pointerLength: size * 0.1,\r\n      pointerWidth: size * 0.1,\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 4) {\r\n    if (symbol === 1) {\r\n      sym = new Star({\r\n        x: cx,\r\n        y: cy,\r\n        innerRadius: size * 0.2,\r\n        outerRadius: size * 0.4,\r\n        numPoints: 5,\r\n        fill: color,\r\n        stroke: \"black\",\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        points: [o, o, size - o, size / 2, o, size - o, o, o],\r\n        fill: color,\r\n        closed: true,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // Kakuro box\r\n      sym = new Group();\r\n      sym.add(new Rect({ width: size, height: size, fill: color }));\r\n      sym.add(\r\n        new Line({\r\n          points: [0, 0, size, size],\r\n          stroke: \"white\",\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n    }\r\n    if (symbol === 4) {\r\n      // Cross\r\n      let o = size * 0.1;\r\n      sym = new Group();\r\n      sym.add(\r\n        new Line({\r\n          x: cx - size / 2,\r\n          y: cy - size / 2,\r\n          points: [o, o, size - o, size - o],\r\n          stroke: color,\r\n          strokeWidth: 3,\r\n          listening: false,\r\n        })\r\n      );\r\n      sym.add(\r\n        new Line({\r\n          x: cx - size / 2,\r\n          y: cy - size / 2,\r\n          points: [o, size - o, size - o, o],\r\n          stroke: color,\r\n          strokeWidth: 3,\r\n          listening: false,\r\n        })\r\n      );\r\n    }\r\n    if (symbol === 5) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [o, o, size - o, size / 2, o, size - o],\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [size - o, o, o, size / 2, size - o, size - o],\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [o, o, size / 2, size - o, size - o, o],\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [o, size - o, size / 2, o, size - o, size - o],\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        listening: false,\r\n      });\r\n    }\r\n  }\r\n  if (page == 5) {\r\n    let o = size * 0.1;\r\n    let w = 2;\r\n    let rect = {\r\n      x: o,\r\n      y: o,\r\n      width: size - o * 2,\r\n      height: size - o * 2\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Rect({...rect,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: w,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Rect({...rect,\r\n        fill: null,\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Rect({...rect,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: w,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Rect({...rect,\r\n        fill: null,\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Rect({...rect,\r\n        fill: color,\r\n        strokeWidth: 0,\r\n      });\r\n    }\r\n  }\r\n  if (sym) {\r\n    if (container.symbol) {\r\n      container.symbol.destroy();\r\n    }\r\n    if (bg) {\r\n      let bg = new Rect({\r\n        width: size,\r\n        height: size,\r\n        fill: \"white\",\r\n        listening: false,\r\n      });\r\n      let c = new Group();\r\n      c.add(bg, sym);\r\n      container.symbol = c;\r\n      container.add(c);\r\n    } else {\r\n      container.symbol = sym;\r\n      container.add(sym);\r\n    }\r\n    container.symboltext = str;\r\n    container.symbolcolor = _color;\r\n  }\r\n}\r\n","import { Stage, Layer, Text, Rect, Group, Line, Circle, Util } from \"konva\";\nimport { DrawCage } from \"./cage\";\nimport { DrawPath } from \"./path\";\nimport { DrawSymbol } from \"./symbols\";\nimport pako from \"pako\";\nimport msgpack from \"msgpack-lite\";\nimport { isEqual, range, findLastIndex, last } from \"lodash\";\n\nlet ctx = {};\nlet cell_size = 0;\nlet grid_w = null;\nlet grid_h = null;\nlet main_w = null;\nlet main_h = null;\nlet grid_left = 0;\nlet grid_top = 0;\nlet grid_bottom = 0;\nlet grid_right = 0;\nlet grid_div_width = 0;\nlet grid_div_height = 0;\nlet grid_style = \"normal\";\nlet grid_left_diagonal = false;\nlet grid_right_diagonal = false;\nlet corner_offset = 0;\nlet hover_offset = 0;\nlet symbol_page = 0;\nlet multi_digit = false;\nlet number_bg = false;\nlet cursor_visible = true;\n\nconst thin_grid_line = 0.01;\nconst medium_grid_line = 0.05;\nconst fat_grid_line = 0.1;\n\nconst type_path = 1;\nconst type_cage = 2;\n\nconst lock_normal = 1;\nconst lock_color = 2;\nconst lock_boundary = 3;\n\nconst b_corner = 1;\nconst b_side = 2;\nconst b_quarter = 3;\nconst b_boundary = 4;\nconst b_edge = 5;\n\nconst b_left = 1;\nconst b_top = 2;\nconst b_bottom = 3;\nconst b_right = 4;\n\nconst sol_text_color = \"rgb(29, 106, 229)\";\nconst mark_color = \"rgba(247, 208, 56, 0.5)\";\nexport const DrawColors = [\n  \"rgba(0, 0, 0, 1)\",\n  \"rgba(207, 207, 207, 0.5)\",\n  \"rgba(255, 255, 255, 1)\",\n  \"rgba(163, 224, 72, 0.5)\",\n  \"rgba(210, 59, 231, 0.5)\",\n  \"rgba(235, 117, 50, 0.5)\",\n  \"rgba(226, 38, 31, 0.5)\",\n  \"rgba(247, 208, 56, 0.5)\",\n  \"rgba(52, 187, 230, 0.5)\",\n  //\n  \"rgba(140, 140, 140, 0.5)\",\n  \"rgba(80, 80, 80, 0.5)\",\n  \"rgba(20, 20, 20, 0.5)\",\n];\n\nexport function DrawColorPremul(color) {\n  if (typeof color === \"number\") {\n    color = DrawColors[color];\n  }\n  // Premultiply for thermo\n  color = Util.colorToRGBA(color);\n  color.r = color.r * color.a + (1 - color.a) * 255;\n  color.g = color.g * color.a + (1 - color.a) * 255;\n  color.b = color.b * color.a + (1 - color.a) * 255;\n  color.a = 1;\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n}\n\nlet current_color = 0;\nlet current_mode = \"normal\";\nlet current_rmode = null;\nlet current_style = null;\nlet solve_mode = false;\nlet scene = null;\nlet matrix = [];\nlet stuff = [];\nlet edges = {};\nlet drag = false;\nlet drag_toggle = null;\nlet drag_button = -1;\nlet undo_stack = [];\nlet redo_stack = [];\nlet current = null;\nlet outer = null;\nlet underlay = null;\nlet shift = false;\nlet cursor = null;\nlet boundary = null;\nlet grid_lines = [];\n\nfunction reset() {\n  matrix = [];\n  stuff = [];\n  edges = {};\n  undo_stack = [];\n  redo_stack = [];\n  current = null;\n  outer = null;\n  underlay = null;\n  shift = false;\n  cursor = null;\n}\n\nexport function DrawSetSymbolPage(page) {\n  symbol_page = page;\n}\n\nclass RectHolder {\n  constructor(container, width, height) {\n    this.container = container;\n    this.width = width;\n    this.height = height;\n    this.color = null;\n    this.obj = null;\n  }\n\n  fill(color) {\n    if (color === undefined) return this.color;\n\n    this.color = color;\n    if (color === null) {\n      if (this.obj) {\n        this.obj.destroy();\n        this.obj = null;\n      }\n    } else {\n      if (this.obj === null) {\n        this.obj = new Rect({ width: this.width, height: this.height });\n        this.container.add(this.obj);\n      }\n      this.obj.fill(this.color);\n    }\n  }\n}\n\nclass TextHolder {\n  constructor(container, color, fontSize, size) {\n    this.container = container;\n    this._color = color;\n    this.fontSize = fontSize;\n    this.size = size;\n    this._text = \"\";\n    this.obj = null;\n  }\n\n  text(t) {\n    if (t === undefined) return this._text;\n\n    this._text = t;\n    if (this._text.length > 0) {\n      if (!this.obj) {\n        this.obj = new Text({\n          fill: this._color,\n          text: this._text,\n          fontSize: this.fontSize,\n        });\n        this.container.add(this.obj);\n      } else this.obj.text(this._text);\n      let meas = this.obj.measureSize(this._text);\n      this.obj.position({\n        x: (this.size - meas.width) / 2,\n        y: (this.size - meas.height) / 2,\n      });\n    } else if (this.obj) {\n      this.obj.destroy();\n      this.obj = null;\n    }\n  }\n\n  color(c) {\n    if (c === undefined) return this._color;\n\n    this._color = c;\n    if (this.obj) this.obj.fill(this._color);\n  }\n}\n\nfunction setSymbol(container, str, color, _size) {\n  let text;\n  let size = _size;\n  if (container.normal) {\n    if (typeof color === \"number\") color = DrawColors[color];\n    size = cell_size;\n    text = container.normal.text;\n    if (multi_digit) str = text.text() + str;\n    container = container.symcont;\n  } else if (size > 0) {\n    // Symbol page\n    color = \"gray\";\n  } else {\n    size = container.bsize;\n    if (multi_digit && str !== \"\") str = (container.symboltext || \"\") + str;\n  }\n  if (str[0] === \"#\" || !text) {\n    DrawSymbol(container, str, color, size, number_bg);\n  } else {\n    text.text(str);\n    text.color(color);\n  }\n}\n\nexport function DrawSymbolElement(element, page, num, size) {\n  let stage = new Stage({ container: element, width: size, height: size });\n  let layer = new Layer();\n  setSymbol(layer, \"#\" + page + num, current_color, size);\n  stage.add(layer);\n  stage.draw();\n}\n\nfunction saveState() {\n  let state = [];\n  each_cell((m) => {\n    let s = { x: m.x, y: m.y };\n    if (m.normal.text.text() !== \"\") s.normal = m.normal.text.text();\n    else {\n      if (m.center.text.text() !== \"\") s.center = m.center.text.text();\n      s.corner = m.corner.map((c) => c.text.text());\n    }\n    if (m.r_color.rect.fill()) s.color = m.r_color.rect.fill();\n    if (m.cross) s.cross = true;\n    s.edge = [];\n    s.centerline = [];\n    s.edgecross = [];\n    m.boundary.forEach((b, i) => {\n      if (b.edge && !b.lock) s.edge.push(i);\n      if (b.cross) s.edgecross.push(i);\n      if (b.centerline) s.centerline.push(i);\n    });\n    state.push(s);\n  });\n  return state;\n}\n\nfunction saveUndo() {\n  let state = saveState();\n  undo_stack.push(state);\n}\n\nfunction loadState(state) {\n  state.forEach((s) => {\n    let m = get(s.x, s.y);\n    setCell([s.x, s.y], \"reset\", null, \"\");\n    if (s.normal) m.normal.text.text(s.normal);\n    else {\n      if (s.center) m.center.text.text(s.center);\n      if (s.corner) s.corner.forEach((c, i) => m.corner[i].text.text(c));\n    }\n    if (s.color) m.r_color.rect.fill(s.color);\n    if (s.cross) drawCross(s.x, s.y, true);\n    s.edge.forEach(i => drawEdge(s.x, s.y, i, true));\n    s.edgecross.forEach(i => drawEdgeCross(s.x, s.y, i, true));\n    s.centerline.forEach(i => drawCenterLine(s.x, s.y, i, true));\n  });\n}\n\nfunction _setCell(lock, pos, mode, color, newtext) {\n  let x = pos[0];\n  let y = pos[1];\n  let b = null;\n  if (pos.length === 3) b = get(...pos);\n  let m = get(x, y);\n\n  if (!m.main_grid && mode !== \"normal\" && !lock) {\n    return;\n  }\n  if (m.lock_type === lock_normal && !lock && mode !== \"color\") {\n    return;\n  }\n\n  if (mode === \"reset\") {\n    m.center.text.text(\"\");\n    m.normal.text.text(\"\");\n    m.corner.forEach((c) => c.text.text(\"\"));\n    m.r_color.rect.fill(null);\n    if (m.cross) {\n      m.cross.destroy();\n      m.cross = null;\n    }\n    m.boundary.forEach((b) => {\n      if (b.edge && !b.lock) {\n        b.edge.destroy();\n        b.edge = null;\n        delete edges[[x, y, b.index]];\n      }\n      if (b.centerline) {\n        b.centerline.destroy();\n        b.centerline = null;\n      }\n      if (b.cross) {\n        b.cross.destroy();\n        b.cross = null;\n      }\n    });\n    if (lock) {\n      m.r_color_set.rect.fill(null);\n      m.fill = -1;\n      if (m.symcont.symbol) {\n        m.symcont.symbol.destroy();\n        m.symcont.symbol = null;\n        m.symcont.symboltext = \"\";\n      }\n      m.boundary.forEach((b) => {\n        if (b.symbol) {\n          b.symbol.destroy();\n          b.symbol = null;\n          b.symboltext = \"\";\n        }\n        if (b.rect) {\n          b.rect.destroy();\n          b.rect = null;\n        }\n        if (b.edge) {\n          b.edge.destroy();\n          b.edge = null;\n          delete edges[[x, y, b.index]];\n        }\n      });\n    }\n  } else if (b) {\n    setSymbol(b, newtext, color);\n  } else if (mode === \"normal\") {\n    if (!lock) {\n      color = sol_text_color;\n    } else {\n      m.lock_type = newtext !== \"\" ? lock_normal : 0;\n      if (newtext[0] !== \"#\") {\n        m.color = color;\n      }\n    }\n    setSymbol(m, newtext, color);\n    if (newtext[0] !== \"#\") {\n      m.center.text.text(\"\");\n      m.corner.forEach((c) => c.text.text(\"\"));\n    }\n  } else if (mode === \"center\" && m.normal.text.text() === \"\") {\n    let current = m.center.text.text();\n    let center = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          center += i;\n        }\n      }\n    }\n\n    m.center.text.text(center);\n  } else if (mode === \"corner\" && m.normal.text.text() === \"\") {\n    let current = \"\";\n    m.corner.forEach((t) => (current += t.text.text()));\n    let text = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          text += i;\n        }\n      }\n    }\n    let i = 0;\n    m.corner.forEach((c) => c.text.text(text[i++] || \"\"));\n  } else if (mode === \"color\") {\n    // white == clear\n    if (!lock) {\n      if (color === 2) {\n        m.r_color.rect.fill(null);\n      } else {\n        m.r_color.rect.fill(DrawColors[color]);\n      }\n    } else {\n      if (color === 2) {\n        m.r_color_set.rect.fill(null);\n      } else {\n        m.r_color_set.rect.fill(DrawColors[color]);\n        m.fill = color;\n      }\n    }\n  }\n}\n\nfunction keyup(event) {\n  if (event.key === \"Shift\") {\n    shift = false;\n  }\n}\n\nfunction setCell(pos, mode, color, newtext) {\n  let lock = !solve_mode;\n  _setCell(lock, pos, mode, color, newtext);\n}\n\nfunction lock_cell(pos, mode, color, newtext) {\n  _setCell(true, pos, mode, color, newtext);\n}\n\nexport function DrawSetNumber(number) {\n  saveUndo();\n\n  let symbol = \"\" + number;\n  if (symbol_page > 0) symbol = \"#\" + symbol_page + number;\n  if (boundary) {\n    setCell(boundary, \"boundary\", current_color, symbol);\n  } else {\n    let count = 0;\n    let mode = current_mode;\n    each_mark((m) => ++count);\n    if (count > 1 && solve_mode && mode === \"normal\") mode = \"center\";\n    each_mark((m) => setCell([m.x, m.y], mode, current_color, symbol));\n  }\n  scene.draw();\n}\n\nexport function DrawSetColor(color_index) {\n  saveUndo();\n\n  current_color = color_index;\n  if (current_mode === \"color\") {\n    each_mark((m) => {\n      setCell([m.x, m.y], \"color\", color_index, null);\n    });\n    scene.draw();\n  }\n}\n\nfunction keydown(event) {\n  if (event.target.tagName === \"TEXTAREA\") {\n    return;\n  }\n\n  let newtext;\n  if (event.key === \"Shift\") {\n    shift = true;\n    return;\n  } else if (event.key === \"Delete\" || event.key === \"Backspace\") {\n    DrawDelete();\n    event.preventDefault();\n    return;\n  } else if (event.key >= \"0\" && event.key <= \"9\") {\n    newtext = event.key;\n    if (symbol_page > 0) newtext = \"#\" + symbol_page + newtext;\n  } else if (event.key === \"u\" && solve_mode) {\n    DrawUndo();\n    return;\n  } else if (\n    event.key.length === 1 &&\n    ((event.key >= \"a\" && event.key <= \"z\") ||\n      (event.key >= \"A\" && event.key <= \"Z\")) &&\n    !solve_mode\n  ) {\n    newtext = event.key;\n  } else if (event.key.startsWith(\"Arrow\") && cursor) {\n    let c = cursor.slice();\n    if (!shift) unmark();\n    cursor = c;\n    if (event.key === \"ArrowUp\") cursor[1] -= 1;\n    if (cursor[1] < 0) cursor[1] = grid_h - 1;\n    if (event.key === \"ArrowDown\") cursor[1] += 1;\n    if (cursor[1] >= grid_h) cursor[1] = 0;\n    if (event.key === \"ArrowLeft\") cursor[0] -= 1;\n    if (cursor[0] < 0) cursor[0] = grid_w - 1;\n    if (event.key === \"ArrowRight\") cursor[0] += 1;\n    if (cursor[0] >= grid_w) cursor[0] = 0;\n    mark(cursor[0], cursor[1]);\n    scene.draw();\n    return;\n  } else {\n    return;\n  }\n\n  saveUndo();\n\n  if (boundary) {\n    setCell(boundary, \"boundary\", current_color, newtext);\n  } else {\n    let count = 0;\n    each_mark((m) => ++count);\n\n    let mode = current_mode;\n    if (count > 1 && solve_mode && mode === \"normal\") mode = \"center\";\n    each_mark((m) => {\n      if (current_mode === \"color\") {\n        let color = +newtext - 1;\n        if (color >= 0 && color <= 9)\n          setCell([m.x, m.y], current_mode, color, null);\n      } else setCell([m.x, m.y], mode, current_color, newtext);\n    });\n  }\n  scene.draw();\n}\n\nfunction get(x, y, b) {\n  if (x < 0 || y < 0 || x >= grid_w || y >= grid_h) {\n    return null;\n  }\n  let m = matrix[y][x];\n  if (b >= 0) return m.boundary[b];\n  return m;\n}\n\nfunction mark(x, y) {\n  let m = get(x, y);\n  cursor = [x, y];\n  if (!m.mark) {\n    m.mark = true;\n    m.rect.fill(mark_color);\n    m.rect.fillEnabled(cursor_visible);\n    return true;\n  }\n  return false;\n}\n\nfunction inner_mousemove(event, x, y) {\n  if (!drag) return;\n  if (drag_button !== 0) return;\n\n  if (current_mode === \"path\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = DrawPath(ctx, current.cells, current_style, current_color);\n    scene.draw();\n  }\n}\n\nlet last_toggle_state = null;\n\nfunction get_line_width(style) {\n  switch (style) {\n    case \"thin\":\n      return cell_size * thin_grid_line;\n    case \"medium\":\n      return cell_size * medium_grid_line;\n    default:\n      return cell_size * fat_grid_line;\n  }\n}\n\nfunction drawEdge(x, y, i, set, style, color, lock = false) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let c = solve_mode ? sol_text_color : DrawColors[current_color];\n  let width = solve_mode ? get_line_width(\"fat\") : get_line_width(style);\n  let eo = cell_size * 0.15;\n\n  if (!set) {\n    if (b.edge) {\n      b.edge.destroy();\n      b.edge = null;\n      delete edges[[x, y, i]];\n    }\n  }\n  else if (!b.edge) {\n    let edge;\n    let new_edge = (x, y, x1, y1) => {\n      edge = new Line({\n        x: x,\n        y: y,\n        points: [0, 0, x1, y1],\n        strokeWidth: width,\n        stroke: c,\n        lineCap: \"round\",\n        listening: false,\n      });\n    };\n    switch (b.btype2) {\n      case b_left:\n      case b_right:\n        new_edge(eo, -eo, 0, cell_size);\n        break;\n      case b_top:\n      case b_bottom:\n        new_edge(-eo, eo, cell_size, 0);\n        break;\n      default:\n        break;\n    }\n    edges[[x, y, i]] = [style, color];\n    b.edge = edge;\n    b.lock = lock;\n    b.add(edge);\n  }\n}\n\nfunction edgeToggle(x, y, i, style, color, lock) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let set;\n\n  if (b.lock && solve_mode) return;\n\n  if (last_toggle_state === null) {\n    if (b.edge) last_toggle_state = true;\n    else last_toggle_state = false;\n  }\n  set = !last_toggle_state;\n\n  drawEdge(x, y, i, set, style, color, lock);\n}\n\nfunction drawCenterLine(x, y, i, set, style, color) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let c = solve_mode ? sol_text_color : DrawColors[current_color];\n  if (color !== undefined) c = DrawColors[color];\n  let width = get_line_width(style);\n\n  if (!set) {\n    if (b.centerline) {\n      b.centerline.destroy();\n      b.centerline = null;\n    }\n  } else if (!b.centerline) {\n    let points;\n    let cp = cell_size / 2;\n    let bw = b.bwidth / 2;\n    let bh = b.bheight / 2;\n    if (b.btype2 === b_top || b.btype2 === b_bottom) {\n      if (b.btype2 === b_top && m.y <= grid_top) return;\n      if (b.btype2 === b_bottom && m.y >= grid_top + grid_h - 1) return;\n      points = [0, -cp, 0, cp];\n    } else {\n      if (b.btype2 === b_left && m.x <= grid_left) return;\n      if (b.btype2 === b_right && m.x >= grid_left + grid_w - 1) return;\n      points = [-cp, 0, cp, 0];\n    }\n\n    let cline = new Line({\n      x: bw,\n      y: bh,\n      points: points,\n      strokeWidth: width,\n      stroke: c,\n      lineCap: \"round\",\n      listening: false,\n    });\n    b.centerline = cline;\n    b.add(cline);\n  }\n}\n\nfunction centerLineToggle(x, y, i, style, color) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let set;\n\n  if (last_toggle_state === null) {\n    if (b.centerline) last_toggle_state = true;\n    else last_toggle_state = false;\n  }\n  set = !last_toggle_state;\n\n  drawCenterLine(x, y, i, set, style, color);\n}\n\nlet last_toggle = { x: -1, y: -1, i: -1 };\n\nfunction hasCross(x, y) {\n  let m = get(x, y);\n  return !!m.cross;\n}\n\nfunction drawCross(x, y, set) {\n  let m = get(x, y);\n  if (set) {\n    if (!m.cross) {\n      m.cross = new Group();\n      m.add(m.cross);\n      DrawSymbol(m.cross, \"#44\", sol_text_color, cell_size);\n    }\n  } else {\n    if (m.cross) {\n      m.cross.destroy();\n      m.cross = null;\n    }\n  }\n}\n\nfunction hasEdgeCross(x, y, i) {\n  let b = get(x, y).boundary[i];\n  return !!b.cross;\n}\n\nfunction drawEdgeCross(x, y, i, set) {\n  let b = get(x, y).boundary[i];\n  if (set) {\n    if (!b.cross) {\n      b.cross = new Group();\n      b.add(b.cross);\n      DrawSymbol(b.cross, \"#44\", sol_text_color, [b.bwidth, b.bheight]);\n    }\n  } else if (b.cross) {\n    b.cross.destroy();\n    b.cross = null;\n  }\n}\n\nfunction edgeMousemove(event, x, y, i) {\n  if (!drag) return;\n  if (last_toggle.x === x && last_toggle.y === y && last_toggle.i === i) return;\n  last_toggle = { x: x, y: y, i: i };\n\n  saveUndo();\n\n  if (drag_button === 2 && current_rmode === \"edgecross\") {\n    if (i !== undefined) {\n      drawEdgeCross(x, y, i, drag_toggle);\n      scene.draw();\n    }\n    return;\n  }\n\n  unmark();\n\n  if (current_mode === \"edge\") {\n    edgeToggle(x, y, i, current_style, current_color);\n  } else {\n    centerLineToggle(x, y, i, current_style, current_color);\n  }\n  scene.draw();\n}\n\nlet last_move = [-1, -1];\n\nfunction mousemove(event, x, y) {\n  if (x === last_move[0] && y === last_move[1]) return;\n\n  last_move[0] = x;\n  last_move[1] = y;\n\n  if (!drag) return;\n\n  if (drag_button === 2 && current_rmode === \"edgecross\") return;\n\n  if (drag_button === 2 && current_rmode === \"cross\") {\n    drawCross(x, y, drag_toggle);\n    scene.draw();\n    return;\n  }\n\n  if (\n    current_mode === \"path\" ||\n    current_mode === \"edge\" ||\n    current_mode === \"centerline\"\n  ) {\n  } else if (current_mode === \"cage\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    if (current.objs) current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = DrawCage(ctx, current.cells, current_style, current_color);\n  } else {\n    mark(x, y);\n  }\n\n  scene.draw();\n}\n\nfunction mark_boundary(x, y, i) {\n  unmark();\n\n  let b = get(x, y).boundary[i];\n  if (!b.rect) {\n    b.rect = new Rect({\n      width: b.bwidth,\n      height: b.bheight,\n      fillEnabled: false,\n    });\n    b.add(b.rect);\n  }\n  b.rect.stroke(\"red\");\n  b.rect.strokeWidth(1);\n  boundary = [x, y, i];\n}\n\nfunction unmark() {\n  if (boundary) {\n    let r = get(...boundary).rect;\n    if (r) r.strokeWidth(0);\n    boundary = null;\n  }\n  each_mark((m) => {\n    m.rect.fill(null);\n    m.mark = false;\n  });\n  cursor = null;\n}\n\nfunction boundary_mousedown(event, x, y, i) {\n  mark_boundary(x, y, i);\n  scene.draw();\n}\n\nfunction contextmenu(event) {\n  if (event.target.tagName === \"CANVAS\") event.preventDefault();\n}\n\nfunction window_mousedown(event) {\n  if (event.target.tagName === \"HTML\") {\n    unmark();\n    scene.draw();\n  }\n  last_move = [-1, -1];\n}\n\nfunction mousedown(event, x, y, i) {\n  event.evt.stopPropagation();\n\n  drag = true;\n  if (event.evt.type === \"touchstart\") drag_button = 0;\n  else drag_button = event.evt.button;\n\n  if (event.evt.button === 2 && current_rmode === \"edgecross\") {\n    if (i !== undefined) {\n      drag_toggle = !hasEdgeCross(x, y, i);\n      saveUndo();\n      drawEdgeCross(x, y, i, drag_toggle);\n      scene.draw();\n    }\n    return;\n  }\n\n  if (event.evt.button === 2 && current_rmode === \"cross\") {\n    drag_toggle = !hasCross(x, y);\n    saveUndo();\n    drawCross(x, y, drag_toggle);\n    scene.draw();\n    return;\n  }\n\n  if (!shift) {\n    unmark();\n  }\n\n  if (boundary) {\n    get(...boundary).strokeWidth(0);\n    boundary = null;\n  }\n\n  if (current_mode === \"path\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = DrawPath(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"cage\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = DrawCage(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"edge\" && i !== undefined) {\n    saveUndo();\n    edgeToggle(x, y, i, current_style, current_color);\n  } else if (current_mode === \"centerline\" && i !== undefined) {\n    saveUndo();\n    centerLineToggle(x, y, i, current_style, current_color);\n  } else {\n    mark(x, y);\n  }\n\n  scene.draw();\n}\n\nfunction edgeMouseup(event, x, y, i) {\n  if (event.evt.button === 2) return;\n  if (last_toggle_state === null && current_mode === \"edge\") {\n    edgeToggle(x, y, i, current_style, current_color);\n  }\n}\n\nfunction mouseup() {\n  drag = false;\n  last_toggle_state = null;\n\n  if (current_mode === \"path\" && current) {\n    stuff.push({\n      type: type_path,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    cursor = last(current.cells);\n    current = null;\n  } else if (current_mode === \"cage\" && current) {\n    stuff.push({\n      type: type_cage,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    cursor = last(current.cells);\n    current = null;\n  }\n}\n\nexport function DrawSetMode(state) {\n  current_mode = state.mode;\n  number_bg = state.numberBackground;\n  multi_digit = state.multiDigit;\n\n  each_cell((m) =>\n    m.boundary.forEach((b) => {\n      if (b.rect) {\n        b.rect.destroy();\n        b.rect = null;\n      }\n    })\n  );\n\n  cursor_visible = false;\n\n  if (state.mode === \"cage\") current_style = state.cageStyle;\n  else if (state.mode === \"path\") current_style = state.pathStyle;\n  else if (state.mode === \"edge\") current_style = state.edgeStyle;\n  else if (state.mode === \"edgecross\") {\n    current_mode = \"edge\";\n    current_style = \"fat\";\n    current_color = undefined;\n    current_rmode = \"edgecross\";\n  } else if (state.mode === \"centerline\") {\n    current_mode = \"centerline\";\n    current_style = \"fat\";\n    current_color = undefined;\n    current_rmode = \"edgecross\";\n  } else if (\n    (state.mode === \"normal\" || state.mode === \"number\") &&\n    state.numberStyle === \"normal\"\n  ) {\n    current_mode = \"normal\";\n    cursor_visible = true;\n  } else cursor_visible = true;\n\n  if (!cursor_visible) unmark();\n\n  if (current_mode === \"edge\" || current_mode === \"centerline\") {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === b_edge) {\n          if (!b.rect) {\n            b.rect = new Rect({\n              width: b.bwidth,\n              height: b.bheight,\n              fill: null,\n              fillEnabled: false,\n            });\n            b.add(b.rect);\n          }\n          b.rect.fillEnabled(true);\n          b.rect.on(\"mousemove touchmove\", (event) =>\n            edgeMousemove(event, m.x, m.y, i)\n          );\n          b.rect.on(\"mousedown tap touchstart\", (event) =>\n            mousedown(event, m.x, m.y, i)\n          );\n          b.rect.on(\"mouseup touchend\", (event) =>\n            edgeMouseup(event, m.x, m.y, i)\n          );\n        }\n      })\n    );\n  }\n\n  let setBoundary = (type) => {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === type) {\n          if (!b.rect) {\n            b.rect = new Rect({\n              width: b.bwidth,\n              height: b.bheight,\n              fill: null,\n              fillEnabled: true,\n            });\n            b.add(b.rect);\n          }\n          b.rect.on(\"mousedown touchstart tap\", (event) =>\n            boundary_mousedown(event, m.x, m.y, i)\n          );\n        }\n      })\n    );\n  };\n\n  if (state.mode === \"number\" && state.numberStyle === \"corner\") {\n    current_mode = \"boundary\";\n    setBoundary(b_corner);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"side\") {\n    current_mode = \"boundary\";\n    setBoundary(b_side);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"quarter\") {\n    current_mode = \"boundary\";\n    setBoundary(b_quarter);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"boundary\") {\n    current_mode = \"boundary\";\n    setBoundary(b_boundary);\n  }\n  scene.draw();\n}\n\nfunction each_cell(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      f(m);\n    }\n  }\n}\n\nfunction each_mark(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      if (m.mark) f(m);\n    }\n  }\n}\n\nfunction unserialize_grid(s) {\n  [\n    cell_size,\n    grid_w,\n    grid_h,\n    grid_left,\n    grid_right,\n    grid_top,\n    grid_bottom,\n    grid_div_width,\n    grid_div_height,\n    grid_style,\n    grid_left_diagonal,\n    grid_right_diagonal,\n  ] = s;\n}\n\nfunction load_grid(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  if (data.version !== 1) {\n    alert(\"Bad version\");\n  }\n\n  unserialize_grid(data.grid);\n}\n\nfunction unserialize(data) {\n  stuff = [];\n  each_cell((m) => {\n    m.lock_type = 0;\n    m.normal.text.text(\"\");\n    m.center.text.text(\"\");\n  });\n\n  if (data.edges) {\n    for (const k in data.edges) {\n      let pos = k.split(\",\").map((x) => +x);\n      let [style, color] = data.edges[k];\n      edgeToggle(...pos, style, color, true);\n    }\n  }\n\n  data.cells.forEach((c) => {\n    let [pos, type, text, color] = c;\n    if (type === lock_normal) {\n      lock_cell(pos, \"normal\", color, text);\n    } else if (type === lock_color) {\n      lock_cell(pos, \"color\", color, text);\n    } else if (type === lock_boundary) {\n      lock_cell(pos, \"boundary\", color, text);\n    }\n  });\n  data.stuff.forEach((_s) => {\n    let s = { type: _s[0], style: _s[1], color: _s[2], cells: _s[3] };\n    if (s.type === type_path) {\n      s.objs = DrawPath(ctx, s.cells, s.style, s.color);\n    } else if (s.type === type_cage) {\n      s.objs = DrawCage(ctx, s.cells, s.style, s.color);\n    }\n    stuff.push(s);\n  });\n}\n\nfunction load(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  unserialize(data);\n}\n\nexport function DrawGetMetaData(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  return data.desc;\n}\n\nfunction serialize(meta) {\n  let out = {\n    version: 1,\n    grid: [\n      cell_size,\n      grid_w,\n      grid_h,\n      grid_left,\n      grid_right,\n      grid_top,\n      grid_bottom,\n      grid_div_width,\n      grid_div_height,\n      grid_style,\n      grid_left_diagonal,\n      grid_right_diagonal,\n    ],\n    cells: [],\n    stuff: stuff.map((e) => [e.type, e.style, e.color, e.cells]),\n    edges: edges,\n    desc: meta,\n  };\n\n  each_cell((m) => {\n    let pos = [m.x, m.y];\n    if (m.lock_type === lock_normal) {\n      if (m.normal.text.text() !== \"\")\n        out.cells.push([pos, m.lock_type, m.normal.text.text(), m.color]);\n      if (m.symcont.symboltext !== \"\" && m.symcont.symboltext !== undefined)\n        out.cells.push([\n          pos,\n          m.lock_type,\n          m.symcont.symboltext,\n          m.symcont.symbolcolor,\n        ]);\n    }\n    if (m.fill >= 0) {\n      out.cells.push([pos, lock_color, null, m.fill]);\n    }\n    m.boundary.forEach((b, i) => {\n      if (b.symboltext)\n        out.cells.push([\n          [m.x, m.y, i],\n          lock_boundary,\n          b.symboltext,\n          b.symbolcolor,\n        ]);\n    });\n  });\n\n  console.log(out);\n  return out;\n}\n\nexport function DrawGenerateUrl(meta) {\n  let out = serialize(meta);\n  let coded = msgpack.encode(out);\n  let packed = pako.deflate(coded);\n  let base64 = btoa(String.fromCharCode(...packed));\n  return window.location.origin + \"/?s=1&p=\" + encodeURIComponent(base64);\n}\n\nexport function DrawCheck() {\n  if (main_w !== 9 || main_h !== 9) return [false, \"Not sudoku\"];\n  let r = range(1, 10);\n  let rows = Array.from({ length: 9 }, () => []);\n  let columns = Array.from({ length: 9 }, () => []);\n  let boxes = Array.from({ length: 9 }, () => []);\n  let missing = null;\n  each_cell((m) => {\n    let x = m.x - grid_left;\n    let y = m.y - grid_top;\n    let n = +m.normal.text.text();\n    if (n === 0 && missing === null) {\n      missing = `Missing entry at ${x + 1}, ${y + 1}`;\n    }\n    columns[x].push(n);\n    rows[y].push(n);\n    let b = Math.floor(x / 3) + Math.floor(y / 3) * 3;\n    boxes[b].push(n);\n  });\n  if (missing) {\n    return [false, missing];\n  }\n  for (let i = 0; i < 9; ++i) {\n    if (!isEqual(rows[i].sort(), r)) {\n      return [false, `Bad row ${i + 1}`];\n    }\n    if (!isEqual(columns[i].sort(), r)) {\n      return [false, `Bad column ${i + 1}`];\n    }\n    if (!isEqual(boxes[i].sort(), r)) {\n      return [false, `Bad box ${i + 1}`];\n    }\n  }\n  return [true, \"OK\"];\n}\n\nexport function DrawDelete() {\n  if (!solve_mode && cursor) {\n    let i = findLastIndex(stuff, (s) =>\n      s.cells.find((c) => c[0] === cursor[0] && c[1] === cursor[1])\n    );\n    if (i === -1) {\n      each_mark((m) => {\n        if (i !== -1) return;\n        i = findLastIndex(stuff, (s) =>\n          s.cells.find((c) => c[0] === m.x && c[1] === m.y)\n        );\n      });\n    }\n    if (i !== -1) {\n      stuff[i].objs.forEach((o) => o.destroy());\n      stuff.splice(i, 1);\n      scene.draw();\n      return;\n    }\n  }\n\n  saveUndo();\n\n  if (boundary) {\n    setCell(boundary, \"boundary\", null, \"\");\n  } else {\n    each_mark((m) => {\n      setCell([m.x, m.y], \"reset\", null, \"\");\n    });\n  }\n\n  scene.draw();\n}\n\nexport function DrawReset() {\n  each_cell((m) => {\n    setCell([m.x, m.y], \"reset\", null, \"\");\n  });\n\n  if (!solve_mode) {\n    stuff.forEach((s) => s.objs.forEach((o) => o.destroy()));\n    stuff = [];\n  }\n\n  undo_stack = [];\n  redo_stack = [];\n\n  scene.draw();\n}\n\nexport function DrawUndo() {\n  if (undo_stack.length === 0) return;\n  let state = saveState();\n  redo_stack.push(state);\n  state = undo_stack.pop();\n  loadState(state);\n  scene.draw();\n}\n\nexport function DrawRedo() {\n  if (redo_stack.length === 0) return;\n  let state = saveState();\n  undo_stack.push(state);\n  state = redo_stack.pop();\n  loadState(state);\n  scene.draw();\n}\n\nfunction addGrid(layer) {\n  let dash = grid_style === \"dash\" ? [4] : null;\n  let dots = grid_style === \"dots\";\n\n  let thin = {\n    stroke: \"black\",\n    strokeWidth: cell_size * thin_grid_line,\n    dash: dash,\n  };\n  let fat = {\n    stroke: \"black\",\n    strokeWidth: cell_size * medium_grid_line,\n  };\n\n  grid_lines.forEach((g) => g.destroy());\n\n  main_w = grid_w - grid_left - grid_right;\n  main_h = grid_h - grid_top - grid_bottom;\n\n  grid_lines = [];\n  if (grid_left_diagonal || grid_right_diagonal) {\n    let diagonal = {\n      stroke: DrawColors[1],\n      strokeWidth: cell_size * medium_grid_line,\n    };\n    if (grid_left_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            grid_left * cell_size,\n            grid_top * cell_size,\n            (grid_left + main_w) * cell_size,\n            (grid_top + main_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n    if (grid_right_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            (grid_w - grid_right) * cell_size,\n            grid_top * cell_size,\n            grid_left * cell_size,\n            (grid_top + main_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n  }\n\n  if (dots) {\n    let dsize = cell_size * 0.07;\n    for (let y = 0; y <= main_h; ++y) {\n      for (let x = 0; x <= main_w; ++x) {\n        grid_lines.push(\n          new Circle({\n            x: (grid_left + x) * cell_size,\n            y: (grid_top + y) * cell_size,\n            radius: dsize,\n            fill: \"black\",\n          })\n        );\n      }\n    }\n  } else {\n    for (let x = 0; x <= main_w; ++x) {\n      grid_lines.push(\n        new Line({\n          x: (grid_left + x) * cell_size,\n          y: grid_top * cell_size,\n          points: [0, 0, 0, main_h * cell_size],\n          ...(x % grid_div_width === 0 ? fat : thin),\n        })\n      );\n    }\n    for (let y = 0; y <= main_h; ++y) {\n      grid_lines.push(\n        new Line({\n          x: grid_left * cell_size,\n          y: (grid_top + y) * cell_size,\n          points: [0, 0, main_w * cell_size, 0],\n          ...(y % grid_div_height === 0 ? fat : thin),\n        })\n      );\n    }\n\n    grid_lines.push(\n      new Rect({\n        x: grid_left * cell_size,\n        y: grid_top * cell_size,\n        width: main_w * cell_size,\n        height: main_h * cell_size,\n        stroke: \"black\",\n        strokeWidth: cell_size * medium_grid_line,\n        fillEnabled: false,\n      })\n    );\n  }\n\n  layer.add(...grid_lines);\n}\n\nfunction addBoundaries(x, y, boundary) {\n  const bc = cell_size * 0.03;\n  const cs = cell_size;\n  const bsize = cell_size * 0.3;\n\n  let i = 0;\n  const addBoundary = (x, y, size, type, type2) => {\n    let b = new Group({ x: x, y: y });\n    let w = size;\n    let h = size;\n    let s = size;\n    if (Array.isArray(size)) {\n      w = size[0];\n      h = size[1];\n      s = Math.min(size[0], size[1]);\n    }\n    b.rect = null;\n    b.index = i++;\n    b.bsize = s;\n    b.bwidth = w;\n    b.bheight = h;\n    b.btype = type;\n    b.btype2 = type2;\n    boundary.push(b);\n  };\n\n  // Corners\n  addBoundary(bc, bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, bc, bsize, b_corner);\n  addBoundary(bc, cs - bsize - bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, cs - bsize - bc, bsize, b_corner);\n\n  // Sides\n  addBoundary(bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, bc, bsize, b_side);\n  addBoundary(cs - bsize - bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, cs - bsize - bc, bsize, b_side);\n\n  // Quarter\n  const qsize = cell_size * 0.4;\n  const qc = cell_size * 0.05;\n  addBoundary(qc, qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, qc, qsize, b_quarter);\n  addBoundary(qc, cs - qsize - qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, cs - qsize - qc, qsize, b_quarter);\n\n  // Edges\n  const ew = cell_size * 0.3;\n  const eh = cell_size * 0.7;\n  const eo = ew / 2;\n  addBoundary(-eo, eo, [ew, eh], b_edge, b_left);\n  addBoundary(eo, -eo, [eh, ew], b_edge, b_top);\n  if (x === grid_w - grid_right - 1)\n    addBoundary(cs - eo, eo, [ew, eh], b_edge, b_right);\n  if (y === grid_h - grid_bottom - 1)\n    addBoundary(eo, cs - eo, [eh, ew], b_edge, b_bottom);\n\n  // Boundaries\n  addBoundary(-bsize / 2, -bsize / 2, bsize, b_boundary);\n  addBoundary(-bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  addBoundary(cs / 2 - bsize / 2, -bsize / 2, bsize, b_boundary);\n  if (x === grid_w - grid_right - 1) {\n    addBoundary(cs - bsize / 2, -bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  }\n  if (y === grid_h - grid_bottom - 1) {\n    addBoundary(-bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs / 2 - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n  }\n}\n\nfunction render(wrapper) {\n  hover_offset = cell_size * 0.2;\n\n  const margin = cell_size * 0.2;\n  const stage_w = grid_w * cell_size + margin * 2;\n  const stage_h = grid_h * cell_size + margin * 2;\n  let stage = new Stage({\n    container: wrapper,\n    width: stage_w,\n    height: stage_h,\n  });\n  scene = new Layer();\n  stage.add(scene);\n\n  reset();\n\n  outer = new Group({ x: margin, y: margin });\n  scene.add(outer);\n\n  underlay = new Group();\n  let underlay2 = new Group();\n  let gridlayer = new Group();\n  let overlay = new Group();\n  outer.add(underlay2, underlay, gridlayer, overlay);\n\n  for (let y = 0; y < grid_h; ++y) {\n    matrix[y] = [];\n  }\n  let cs = cell_size;\n\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let xp = x * cs;\n      let yp = y * cs;\n      let main_grid =\n        x >= grid_left &&\n        y >= grid_top &&\n        x < grid_w - grid_right &&\n        y < grid_h - grid_bottom;\n      let ocont = new Group({ x: xp, y: yp });\n      let cont = new Group({ x: xp, y: yp });\n      let symcont = new Group();\n      let r = new Rect({\n        width: cs,\n        height: cs,\n        strokeWidth: 0,\n        fillEnabled: true,\n      });\n      let r_color = new Group();\n      r_color.rect = new RectHolder(r_color, cs, cs);\n      let r_color_set = new Group();\n      r_color_set.rect = new RectHolder(r_color_set, cs, cs);\n      let r_inner = new Rect({\n        x: hover_offset,\n        y: hover_offset,\n        width: cs - hover_offset * 2,\n        height: cs - hover_offset * 2,\n        fillEnabled: true,\n      });\n      let normal = new Group();\n      normal.text = new TextHolder(normal, sol_text_color, cs * 0.7, cs);\n      let center = new Group();\n      center.text = new TextHolder(center, sol_text_color, cs * 0.3, cs);\n      let corner_pos = [];\n      let corner_size = cell_size * 0.2;\n      corner_offset = cell_size * 0;\n      corner_pos[0] = [0, 0];\n      corner_pos[1] = [cs - corner_size, 0];\n      corner_pos[2] = [cs - corner_size, cs - corner_size];\n      corner_pos[3] = [0, cs - corner_size];\n      corner_pos[4] = [(cs - corner_size) / 2, 0];\n      corner_pos[5] = [cs - corner_size, (cs - corner_size) / 2];\n      corner_pos[6] = [(cs - corner_size) / 2, cs - corner_size];\n      corner_pos[7] = [0, (cs - corner_size) / 2];\n\n      let corner = [];\n      let boundary = [];\n      if (main_grid) {\n        corner_pos.forEach((p, i) => {\n          let g = new Group({ x: p[0], y: p[1] });\n          g.text = new TextHolder(g, sol_text_color, cs * 0.2, cs * 0.2);\n          corner.push(g);\n        });\n      }\n      addBoundaries(x, y, boundary);\n\n      cont.add(r_color_set, r_color, r, r_inner, symcont, normal, center);\n      cont.on(\"mousedown touchstart tap\", (event) => mousedown(event, x, y));\n      cont.on(\"mousemove touchmove\", (event) => mousemove(event, x, y));\n      r_inner.on(\"mousemove touchmove\", (event) =>\n        inner_mousemove(event, x, y)\n      );\n      matrix[y][x] = {\n        x: x,\n        y: y,\n        pos: [xp, yp],\n        symcont: symcont,\n        cont: cont,\n        ocont: ocont,\n        rect: r,\n        boundary: boundary,\n        fill: -1,\n        color: null,\n        normal: normal,\n        center: center,\n        corner: corner,\n        corner_pos: corner_pos,\n        r_color_set: r_color_set,\n        r_color: r_color,\n        main_grid: main_grid,\n      };\n      underlay.add(cont);\n      if (main_grid) ocont.add(...corner);\n      ocont.add(...boundary);\n      overlay.add(ocont);\n    }\n  }\n\n  addGrid(gridlayer);\n\n  ctx.scene = scene;\n  ctx.underlay = underlay;\n  ctx.underlay2 = underlay2;\n  ctx.overlay = overlay;\n  ctx.cell_size = cell_size;\n  ctx.corner_offset = corner_offset;\n  ctx.each_cell = each_cell;\n  ctx.get_line_width = get_line_width;\n  ctx.get = get;\n}\n\nexport function DrawUpdateGrid(wrapper, state) {\n  let s = serialize();\n  if (\"cellSize\" in state) cell_size = state.cellSize;\n  if (\"gridDivWidth\" in state) grid_div_width = state.gridDivWidth;\n  if (\"gridDivHeight\" in state) grid_div_height = state.gridDivHeight;\n  if (\"gridStyle\" in state) grid_style = state.gridStyle;\n  if (\"gridLeftDiagonal\" in state) grid_left_diagonal = state.gridLeftDiagonal;\n  if (\"gridRightDiagonal\" in state)\n    grid_right_diagonal = state.gridRightDiagonal;\n  render(wrapper);\n  unserialize(s);\n  scene.draw();\n}\n\nexport function DrawRender(code, wrapper, state) {\n  solve_mode = state.solveMode;\n  cell_size = state.cellSize;\n  grid_left = state.left;\n  grid_right = state.right;\n  grid_top = state.top;\n  grid_bottom = state.bottom;\n  grid_w = grid_left + state.width + grid_right;\n  grid_h = grid_top + state.height + grid_bottom;\n  grid_div_width = state.gridDivWidth;\n  grid_div_height = state.gridDivHeight;\n  grid_style = state.gridStyle;\n  grid_left_diagonal = state.gridLeftDiagonal;\n  grid_right_diagonal = state.gridRightDiagonal;\n\n  if (code) load_grid(code);\n\n  render(wrapper);\n\n  if (code) load(code);\n\n  scene.draw();\n\n  DrawSetMode(state);\n}\n\nwindow.addEventListener(\"keydown\", (event) => keydown(event));\nwindow.addEventListener(\"keyup\", (event) => keyup(event));\nwindow.addEventListener(\"mousedown\", (event) => window_mousedown(event));\nwindow.addEventListener(\"mouseup\", (event) => mouseup(event));\nwindow.addEventListener(\"touchend\", (event) => mouseup(event));\nwindow.addEventListener(\"contextmenu\", (event) => contextmenu(event));\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  DrawRender,\n  DrawSymbolElement,\n  DrawSetMode,\n  DrawUndo,\n  DrawRedo,\n  DrawDelete,\n  DrawGenerateUrl,\n  DrawSetNumber,\n  DrawSetColor,\n  DrawColors,\n  DrawGetMetaData,\n  DrawReset,\n  DrawCheck,\n  DrawSetSymbolPage,\n  DrawUpdateGrid,\n} from \"./draw\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Slider,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  InputLabel,\n  Grid,\n  TextField,\n  Switch,\n} from \"@material-ui/core\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { PlayArrow, Pause, SkipPrevious } from \"@material-ui/icons\";\n\nconst query = window.location.search;\nconst urlParams = new URLSearchParams(query);\nconst code = urlParams.get(\"p\");\nconst solveMode = urlParams.get(\"s\") === \"1\";\n\nfunction ColorGrid(props) {\n  return DrawColors.slice(0, props.num).map((color, index) => (\n    <Grid key={index} item xs={4}>\n      <Button variant=\"outlined\" onClick={() => DrawSetColor(index)}>\n        <div\n          style={{\n            border: \"1px solid black\",\n            background: color,\n            width: \"30px\",\n            height: \"30px\",\n          }}\n        />\n      </Button>\n    </Grid>\n  ));\n}\n\nfunction Timer(props) {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (props.active) {\n        setSeconds((s) => s + 1);\n      }\n    }, 1000);\n    return () => clearInterval(id);\n  }, [props.active]);\n\n  const restart = () => {\n    props.onStop();\n    setSeconds(0);\n  };\n\n  return (\n    <Box margin=\"20px\" padding=\"10px\" boxShadow={3}>\n      <Typography align=\"center\" variant=\"h4\">\n        {new Date(seconds * 1000).toISOString().substr(11, 8)}\n      </Typography>\n      <ButtonGroup fullWidth={true} size=\"large\">\n        <Button onClick={props.onStart}>\n          <PlayArrow />\n        </Button>\n        <Button onClick={props.onStop}>\n          <Pause />\n        </Button>\n        <Button onClick={restart}>\n          <SkipPrevious />\n        </Button>\n      </ButtonGroup>\n    </Box>\n  );\n}\n\nfunction ResetButton() {\n  const confirm = useConfirm();\n\n  const onClick = () => {\n    confirm({ description: \"Remove all changes in grid?\" })\n      .then(() => {\n        DrawReset();\n        this.setState({ timeStatus: true });\n      })\n      .catch(() => null);\n  };\n\n  return (\n    <Button fullWidth={true} variant=\"contained\" size=\"large\" onClick={onClick}>\n      Reset\n    </Button>\n  );\n}\n\nfunction SymbolSelect() {\n  let [page, setPage] = useState(\"0\");\n  let symbolRef = [];\n  symbolRef[0] = useRef(null);\n  symbolRef[1] = useRef(null);\n  symbolRef[2] = useRef(null);\n  symbolRef[3] = useRef(null);\n  symbolRef[4] = useRef(null);\n  symbolRef[5] = useRef(null);\n  symbolRef[6] = useRef(null);\n  symbolRef[7] = useRef(null);\n  symbolRef[8] = useRef(null);\n  symbolRef[9] = useRef(null);\n\n  const pages = [\"Numbers\", \"Circles\", \"Arrows\", \"Arrows 2\", \"Misc\", \"Squares\"];\n  const setSymbolPage = (e) => setPage(e.target.value);\n\n  useEffect(() => {\n    if (+page > 0) {\n      for (let i = 0; i < 9; ++i) {\n        DrawSymbolElement(symbolRef[i].current, page, i + 1, 30);\n      }\n    }\n    DrawSetSymbolPage(+page);\n  });\n\n  return (\n    <Box>\n      <FormControl fullWidth={true}>\n        <Select fullWidth={true} value={page} onChange={setSymbolPage}>\n          {pages.map((p, i) => (\n            <MenuItem key={p} value={i}>\n              {p}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Grid container>\n        {[...Array(9).keys()].map((index) => (\n          <Grid key={index} item xs={4}>\n            <Button variant=\"outlined\" onClick={() => DrawSetNumber(index + 1)}>\n              {+page === 0 && (\n                <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n              )}\n              {+page > 0 && <div ref={symbolRef[index]} />}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nfunction ColorSelect() {\n  let [color, setColor] = useState(0);\n\n  return DrawColors.map((c, index) => (\n    <Grid key={index} item xs={4}>\n      <Button\n        variant={color === index ? \"contained\" : \"outlined\"}\n        onClick={() => {\n          setColor(index);\n          DrawSetColor(index);\n        }}\n      >\n        <div\n          style={{\n            border: \"1px solid black\",\n            background: c,\n            width: \"30px\",\n            height: \"30px\",\n          }}\n        />\n      </Button>\n    </Grid>\n  ));\n}\n\nfunction UrlDialog(props) {\n  let openInTab = () => {\n    props.onClose();\n    let w = window.open(props.text, \"_blank\");\n    w.focus();\n  };\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle>URL</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{props.text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={openInTab}>Open in tab</Button>\n        <Button color=\"primary\" onClick={props.onClose}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.symbolRef = [];\n    for (let i = 0; i < 9; ++i) this.symbolRef.push(React.createRef());\n\n    this.state = {\n      solveMode: solveMode,\n      settingsMode: \"size\",\n      color: 0,\n      description: \"\",\n      cellSize: 64,\n      width: 9,\n      height: 9,\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      gridDivWidth: 3,\n      gridDivHeight: 3,\n      gridStyle: \"lines\",\n      gridLeftDiagonal: false,\n      gridRightDiagonal: false,\n      mode: solveMode ? \"normal\" : \"number\",\n      numberStyle: \"normal\",\n      multiDigit: false,\n      numberBackground: false,\n      edgeStyle: \"fat\",\n      cageStyle: \"dash\",\n      pathStyle: \"arrow\",\n      dialogOpen: false,\n      dialogText: \"\",\n      timeStatus: true,\n      symbolPage: \"0\",\n      solveSudoku: true,\n      solveEdge: false,\n      solveCenterLine: false,\n    };\n  }\n\n  handleKeyDown = (event) => {\n    if (event.target.tagName === \"TEXTAREA\") return;\n\n    if (solveMode) {\n      const cycle_modes = [\"normal\", \"center\", \"corner\", \"color\"];\n      let i = \"qwer\".indexOf(event.key);\n      if (event.key.length === 1 && i !== -1) this.setMode(cycle_modes[i]);\n      else if (event.key === \" \") {\n        let i = cycle_modes.indexOf(this.state.mode);\n        i = (i + 1) % cycle_modes.length;\n        this.setMode(cycle_modes[i]);\n      }\n    }\n  };\n\n  componentDidMount() {\n    let meta = {};\n    if (code) {\n      meta = DrawGetMetaData(code);\n      if (typeof meta !== \"object\") meta = { description: meta };\n    }\n    this.setState(meta, () => {\n      DrawRender(code, this.canvasRef.current, this.state);\n    });\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    clearInterval(this.interval);\n  }\n\n  setMode = (mode) => {\n    let b = document.getElementById(\"button\" + mode);\n    if (b) b.focus();\n    this.setState({ mode: mode }, () => {\n      DrawSetMode(this.state);\n    });\n  };\n\n  setStyle = (style, value) => {\n    this.setState({ [style]: value }, () => DrawSetMode(this.state));\n  };\n\n  generateUrl = () => {\n    let meta = {\n      description: this.state.description,\n      solveSudoku: this.state.solveSudoku,\n      solveEdge: this.state.solveEdge,\n      solveCenterLine: this.state.solveCenterLine,\n    };\n    let url = DrawGenerateUrl(meta);\n    this.setState({ dialogText: url, dialogOpen: true });\n  };\n\n  numberStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"numberstyle-label\">\n            Position\n          </InputLabel>\n          <Select\n            labelId=\"numberstyle-label\"\n            fullWidth={true}\n            value={this.state.numberStyle}\n            onChange={(event) =>\n              this.setStyle(\"numberStyle\", event.target.value)\n            }\n          >\n            <MenuItem value=\"normal\">Normal</MenuItem>\n            <MenuItem value=\"corner\">Corner</MenuItem>\n            <MenuItem value=\"side\">Side</MenuItem>\n            <MenuItem value=\"quarter\">Quarter</MenuItem>\n            <MenuItem value=\"boundary\">Boundary</MenuItem>\n          </Select>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.numberBackground}\n                onChange={(e) => {\n                  this.setStyle(\"numberBackground\", e.target.checked);\n                }}\n              />\n            }\n            label=\"Background\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.multiDigit}\n                onChange={(e) => {\n                  this.setStyle(\"multiDigit\", e.target.checked);\n                }}\n              />\n            }\n            label=\"Multi digit\"\n          />\n        </FormControl>\n      </Box>\n    );\n  }\n\n  cageStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"cagestyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"cagestyle-label\"\n            fullWidth={true}\n            value={this.state.cageStyle}\n            onChange={(event) => this.setStyle(\"cageStyle\", event.target.value)}\n          >\n            <MenuItem value=\"dash\">Dashed</MenuItem>\n            <MenuItem value=\"edge:thin\">Edge thin</MenuItem>\n            <MenuItem value=\"edge:medium\">Edge medium </MenuItem>\n            <MenuItem value=\"edge:fat\">Edge fat</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  edgeStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"edgestyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"cagestyle-label\"\n            fullWidth={true}\n            value={this.state.edgeStyle}\n            onChange={(event) => this.setStyle(\"edgeStyle\", event.target.value)}\n          >\n            <MenuItem value=\"thin\">Thin</MenuItem>\n            <MenuItem value=\"medium\">Medium</MenuItem>\n            <MenuItem value=\"fat\">Fat</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  pathStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"pathstyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"pathstyle-label\"\n            fullWidth={true}\n            value={this.state.pathStyle}\n            onChange={(event) => this.setStyle(\"pathStyle\", event.target.value)}\n          >\n            <MenuItem value=\"thin\">Line</MenuItem>\n            <MenuItem value=\"medium\">Medium line</MenuItem>\n            <MenuItem value=\"fat\">Fat Line</MenuItem>\n            <MenuItem value=\"thermo\">Thermo</MenuItem>\n            <MenuItem value=\"arrow\">Arrow</MenuItem>\n            <MenuItem value=\"arrowcircle\">Arrow with circle</MenuItem>\n            <MenuItem value=\"roundborder\">Round border</MenuItem>\n            <MenuItem value=\"border\">Border</MenuItem>\n            <MenuItem value=\"roundfill\">Round fill</MenuItem>\n            <MenuItem value=\"squarefill\">Square fill</MenuItem>\n            <MenuItem value=\"polygon\">Polygon</MenuItem>\n            <MenuItem value=\"polygonfill\">Polygon fill</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  timerBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Timer\n          active={this.state.timeStatus}\n          onStart={() => this.setState({ timeStatus: true })}\n          onStop={() => this.setState({ timeStatus: false })}\n        />\n        {this.state.description !== \"\" && (\n          <Box margin=\"20px\">\n            <TextField\n              multiline\n              variant=\"outlined\"\n              InputProps={{ readOnly: true }}\n              value={this.state.description}\n            />\n          </Box>\n        )}\n        <Box margin=\"20px\">\n          <TextField multiline variant=\"outlined\" />\n        </Box>\n      </Box>\n    );\n  }\n\n  settingLeftBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Box margin=\"30px\">\n          <Select\n            fullWidth={true}\n            value={this.state.mode}\n            onChange={(event) => this.setMode(event.target.value)}\n          >\n            <MenuItem value=\"number\">Symbol</MenuItem>\n            <MenuItem value=\"cage\">Cage</MenuItem>\n            <MenuItem value=\"path\">Path</MenuItem>\n            <MenuItem value=\"color\">Color</MenuItem>\n            <MenuItem value=\"edge\">Edge</MenuItem>\n          </Select>\n          {this.state.mode === \"number\" && this.numberStyleBox()}\n          {this.state.mode === \"cage\" && this.cageStyleBox()}\n          {this.state.mode === \"path\" && this.pathStyleBox()}\n          {this.state.mode === \"edge\" && this.edgeStyleBox()}\n        </Box>\n        <Box margin=\"30px\">\n          <Select\n            fullWidth={true}\n            value={this.state.settingsMode}\n            onChange={(event) =>\n              this.setState({ settingsMode: event.target.value })\n            }\n          >\n            <MenuItem value=\"size\">Size</MenuItem>\n            <MenuItem value=\"margins\">Margins</MenuItem>\n            <MenuItem value=\"grid\">Grid</MenuItem>\n            <MenuItem value=\"description\">Description</MenuItem>\n            <MenuItem value=\"solve\">Solve</MenuItem>\n          </Select>\n        </Box>\n        {this.state.settingsMode === \"size\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"cellSize\", \"Cell size\", 32, 96, 4, true)}\n            {this.sizeSlider(\"width\", \"Width\", 3, 30)}\n            {this.sizeSlider(\"height\", \"Height\", 3, 30)}\n          </Box>\n        )}\n        {this.state.settingsMode === \"margins\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"left\", \"Left\")}\n            {this.sizeSlider(\"right\", \"Right\")}\n            {this.sizeSlider(\"top\", \"Top\")}\n            {this.sizeSlider(\"bottom\", \"Bottom\")}\n          </Box>\n        )}\n        {this.state.settingsMode === \"grid\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"gridDivWidth\", \"Grid divider width\")}\n            {this.sizeSlider(\"gridDivHeight\", \"Grid divider height\")}\n            <FormControl fullWidth={true}>\n              <InputLabel id=\"gridstyle-label\">Style</InputLabel>\n              <Select\n                labelId=\"gridstyle-label\"\n                fullWidth={true}\n                value={this.state.gridStyle}\n                onChange={(event) =>\n                  this.setGridState(\"gridStyle\", event.target.value)\n                }\n              >\n                <MenuItem value=\"lines\">Lines</MenuItem>\n                <MenuItem value=\"dash\">Dashed</MenuItem>\n                <MenuItem value=\"dots\">Dots</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl fullWidth={true}>\n              <FormLabel>Diagonals</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  fullWidth={true}\n                  control={\n                    <Switch\n                      checked={this.state.gridLeftDiagonal}\n                      onChange={(e) => {\n                        this.setGridState(\"gridLeftDiagonal\", e.target.checked);\n                      }}\n                    />\n                  }\n                  label=\"Left\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      labelId=\"rightdiagonal-label\"\n                      fullWidth={true}\n                      checked={this.state.gridRightDiagonal}\n                      onChange={(e) => {\n                        this.setGridState(\n                          \"gridRightDiagonal\",\n                          e.target.checked\n                        );\n                      }}\n                    />\n                  }\n                  label=\"Right\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Box>\n        )}\n        {this.state.settingsMode === \"description\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            <TextField\n              multiline\n              rows={8}\n              value={this.state.description}\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n          </Box>\n        )}\n        {this.state.settingsMode === \"solve\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            <FormControl fullWidth={true}>\n              <FormLabel></FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  fullWidth={true}\n                  control={\n                    <Switch\n                      checked={this.state.solveSudoku}\n                      onChange={(e) => {\n                        this.setState({ solveSudoku: e.target.checked });\n                      }}\n                    />\n                  }\n                  label=\"Sudoku\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      fullWidth={true}\n                      checked={this.state.solveEdge}\n                      onChange={(e) => {\n                        this.setState({ solveEdge: e.target.checked });\n                      }}\n                    />\n                  }\n                  label=\"Edge\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      fullWidth={true}\n                      checked={this.state.solveCenterLine}\n                      onChange={(e) => {\n                        this.setState({ solveCenterLine: e.target.checked});\n                      }}\n                    />\n                  }\n                  label=\"Center line\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n\n  handleChange(newValue, type) {\n    this.setState({ [type]: newValue });\n  }\n\n  setGrid(type) {\n    if (\n      [\n        \"cellSize\",\n        \"gridDivWidth\",\n        \"gridDivHeight\",\n        \"gridStyle\",\n        \"gridLeftDiagonal\",\n        \"gridRightDiagonal\",\n      ].includes(type)\n    )\n      DrawUpdateGrid(this.canvasRef.current, this.state);\n    else DrawRender(code, this.canvasRef.current, this.state);\n  }\n\n  setGridState = (state, value) => {\n    this.setState({ [state]: value }, () => {\n      this.setGrid(state);\n    });\n  };\n\n  sizeSlider(type, label, min = 0, max = 10, step = 1, marks = false) {\n    return (\n      <Box>\n        <Typography>\n          {label}: {this.state[type]}\n        </Typography>\n        <Slider\n          value={this.state[type]}\n          min={min}\n          max={max}\n          step={step}\n          marks={marks}\n          id={type}\n          onChange={(e, newValue) => this.handleChange(newValue, type)}\n          onChangeCommitted={() => this.setGrid(type)}\n        />\n      </Box>\n    );\n  }\n\n  check = () => {\n    let r = DrawCheck();\n    let status = r[0];\n    let msg = r[1];\n    if (status) this.setState({ timeStatus: false });\n    alert(msg);\n  };\n\n  renderSolveMode() {\n    let buttons = [];\n    if (this.state.solveSudoku)\n      buttons.push(\n        [\"normal\", \"Normal\"],\n        [\"center\", \"Center\"],\n        [\"corner\", \"Corner\"]\n      );\n    if (this.state.solveEdge) buttons.push([\"edgecross\", \"Edge\"]);\n    if (this.state.solveCenterLine) buttons.push([\"centerline\", \"Center line\"]);\n    buttons.push([\"color\", \"Color\"]);\n\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        {this.timerBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              {buttons.map((b) => (\n                <Button\n                  id={\"button\" + b[0]}\n                  key={b[0]}\n                  color={this.state.mode === b[0] ? \"primary\" : \"default\"}\n                  onClick={() => this.setMode(b[0])}\n                >\n                  {b[1]}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawUndo}>Undo</Button>\n              <Button onClick={DrawRedo}>Redo</Button>\n              <Button onClick={DrawDelete}>Delete</Button>\n              <Button onClick={this.check}>Check</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <ResetButton />\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <Grid container>\n              {this.state.mode === \"color\" && <ColorGrid num={9} />}\n              {[\"normal\", \"center\", \"corner\"].includes(this.state.mode) &&\n                [...Array(9).keys()].map((index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => DrawSetNumber(index + 1)}\n                    >\n                      <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n                    </Button>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  settingRight() {\n    return (\n      <Grid container>\n        {this.state.mode !== \"color\" && <ColorSelect />}\n        {this.state.mode === \"color\" && <ColorGrid />}\n        {this.state.mode === \"number\" && <SymbolSelect />}\n      </Grid>\n    );\n  }\n\n  renderSetMode() {\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        <UrlDialog\n          text={this.state.dialogText}\n          open={this.state.dialogOpen}\n          onClose={() => this.setState({ dialogOpen: false })}\n        />\n        {this.settingLeftBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <ResetButton />\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawDelete}>Delete</Button>\n              <Button onClick={this.generateUrl}>Generate URL</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">{this.settingRight()}</Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  render() {\n    return (\n      <ConfirmProvider>\n        {solveMode ? this.renderSolveMode() : this.renderSetMode()}\n      </ConfirmProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}