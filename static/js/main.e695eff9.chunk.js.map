{"version":3,"sources":["cage.js","path.js","symbols.js","draw.js","App.js","serviceWorker.js","index.js"],"names":["draw_cage","ctx","cells","style","color","corner_offset","cs","cell_size","get_cage","x","y","find","e","DrawColorPremul","corner_ext_pos","lines","each_cell","m","up","down","left","right","ul","ur","dl","dr","l","add_line","start","end","push","Line","points","dash","strokeWidth","stroke","corner_pos","slice","length","cont","add","concat","draw_dash_cage","corner","lineCap","ocont","draw_edge_cage","center_px","p","draw_path","start_px","map","px","flat","objs","bulb","Circle","radius","fill","line","line1","lineJoin","line2","arrow","Arrow","join","underlay2","scene","draw","draw_symbol","container","str","_color","size","bg","sym","page","substr","symbol","cx","cy","Text","text","fontSize","listening","offset","offset2","aopt","pointerLength","pointerWidth","Star","innerRadius","outerRadius","numPoints","closed","Group","Rect","width","height","o","destroy","c","symboltext","symbolcolor","grid_w","grid_h","grid_left","grid_top","grid_bottom","grid_right","grid_div_width","grid_div_height","grid_style","grid_left_diagonal","grid_right_diagonal","hover_offset","symbol_page","multi_digit","number_bg","DrawColors","Util","colorToRGBA","r","a","g","b","current_color","current_mode","current_rmode","current_style","solve_mode","matrix","stuff","drag","drag_toggle","drag_button","undo_stack","current","outer","underlay","shift","cursor","boundary","grid_lines","TextHolder","this","_text","obj","t","undefined","meas","position","set_symbol","_size","normal","symcont","bsize","DrawSymbol","element","num","stage","Stage","layer","Layer","_set_cell","lock","pos","mode","newtext","get","undo_entry","old_normal","main_grid","lock_type","center","forEach","side","s","r_color","fillEnabled","r_color_set","rect","i","indexOf","set_cell","lock_cell","DrawSetNumber","number","count","each_mark","DrawSetColor","color_index","mark","last_toggle_state","edge_toggle","eo","edge","new_edge","x1","y1","btype2","last_toggle","unmark","boundary_mousedown","event","bwidth","bheight","mark_boundary","mousedown","evt","button","DrawSetMode","state","solveMode","numberBackground","multiDigit","cageStyle","pathStyle","numberStyle","btype","on","edge_mousemove","edge_mouseup","setBoundary","type","f","DrawDelete","findLastIndex","splice","DrawReset","DrawUndo","u","pop","DrawRender","code","wrapper","cellSize","top","bottom","gridDivWidth","gridDivHeight","gridStyle","gridLeftDiagonal","gridRightDiagonal","base64","pack","Uint8Array","from","atob","charCodeAt","unpack","pako","inflate","data","msgpack","decode","version","alert","grid","load_size","margin","stage_w","stage_h","gridlayer","overlay","xp","yp","r_hover","side_pos","bc","addBoundary","type2","w","h","Array","isArray","Math","min","qsize","qc","ew","eh","addBoundaries","last","mousemove","inner_hover","dots","thin","fat","frame_w","frame_h","diagonal","dsize","add_grid","_s","load","window","addEventListener","target","tagName","key","preventDefault","startsWith","keydown","keyup","contextmenu","query","location","search","url_params","URLSearchParams","UrlDialog","props","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","focus","App","handleKeyDown","cycle_modes","setMode","document","getElementById","setState","setStyle","value","generateUrl","url","description","out","desc","console","log","coded","encode","packed","deflate","btoa","String","fromCharCode","origin","encodeURIComponent","DrawGenerateUrl","dialogText","dialogOpen","handleChange","newValue","parentNode","id","setGrid","canvasRef","setSymbolPage","symbolPage","symbolRef","setGridState","check","range","rows","columns","boxes","missing","n","floor","isEqual","sort","DrawCheck","status","msg","timeStatus","React","createRef","settingsMode","seconds","DrawGetDescription","interval","setInterval","removeEventListener","clearInterval","Box","FormControl","fullWidth","InputLabel","shrink","Select","labelId","onChange","MenuItem","FormControlLabel","control","Switch","checked","label","minWidth","padding","boxShadow","Typography","align","variant","Date","toISOString","ButtonGroup","PlayArrow","Pause","SkipPrevious","TextField","multiline","InputProps","readOnly","numberStyleBox","cageStyleBox","pathStyleBox","orientation","sizeSlider","FormLabel","FormGroup","max","step","marks","Slider","onChangeCommitted","index","Grid","item","xs","border","background","display","flexDirection","timerBox","ref","maxWidth","colorGrid","keys","colorSelect","pageSelect","symbolGrid","settingLeftBox","settingRight","renderSolveMode","renderSetMode","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e695eff9.chunk.js","sourcesContent":["import { Line } from \"konva\";\r\nimport { DrawColorPremul } from \"./draw\";\r\n\r\nexport function draw_cage(ctx, cells, style, color) {\r\n  if (style === \"dash\") return draw_dash_cage(ctx, cells, color);\r\n  if (style === \"edge\") return draw_edge_cage(ctx, cells, color);\r\n}\r\n\r\nfunction draw_dash_cage(ctx, cells, color) {\r\n  let corner_offset = ctx.corner_offset;\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n  color = DrawColorPremul(color);\r\n\r\n  const corner_ext_pos = [\r\n    [0, corner_offset],\r\n    [corner_offset, 0],\r\n    [cs - corner_offset, 0],\r\n    [cs, corner_offset],\r\n    [cs, cs - corner_offset],\r\n    [cs - corner_offset, cs],\r\n    [corner_offset, cs],\r\n    [0, cs - corner_offset],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let ul = get_cage(x - 1, y - 1);\r\n    let ur = get_cage(x + 1, y - 1);\r\n    let dl = get_cage(x - 1, y + 1);\r\n    let dr = get_cage(x + 1, y + 1);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({points: [...start, ...end],\r\n          dash: [ctx.cell_size / 20],\r\n          strokeWidth: 2,\r\n          stroke: color,\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = m.corner_pos[0];\r\n      let end = m.corner_pos[3];\r\n      if (up) {\r\n        start = corner_ext_pos[1].slice(0);\r\n        start[1] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[6].slice(0);\r\n        end[1] += !dl ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = m.corner_pos[1];\r\n      let end = m.corner_pos[2];\r\n      if (up) {\r\n        start = corner_ext_pos[2].slice(0);\r\n        start[1] -= !ur ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[5].slice(0);\r\n        end[1] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = m.corner_pos[0];\r\n      let end = m.corner_pos[1];\r\n      if (left) {\r\n        start = corner_ext_pos[0].slice(0);\r\n        start[0] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[3].slice(0);\r\n        end[0] += !ur ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = m.corner_pos[3];\r\n      let end = m.corner_pos[2];\r\n      if (left) {\r\n        start = corner_ext_pos[7].slice(0);\r\n        start[0] -= !dl ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[4].slice(0);\r\n        end[0] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (l.length > 0)\r\n      m.cont.add(...l);\r\n    lines = lines.concat(l);\r\n  });\r\n  return lines;\r\n}\r\n\r\nfunction draw_edge_cage(ctx, cells, color) {\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n  color = DrawColorPremul(color);\r\n\r\n  const corner = [\r\n    [0, 0],\r\n    [cs, 0],\r\n    [cs, cs],\r\n    [0, cs],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({\r\n          points: [...start, ...end],\r\n          strokeWidth: 4,\r\n          stroke: color,\r\n          lineCap: \"round\"\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner[0];\r\n      let end = corner[3];\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner[1];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner[0];\r\n      let end = corner[1];\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner[3];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (l.length > 0)\r\n      m.ocont.add(...l);\r\n    lines.push(...l);\r\n  });\r\n  return lines;\r\n}\r\n","import { Circle, Line, Arrow } from \"konva\";\r\nimport {DrawColorPremul } from \"./draw\";\r\n\r\nfunction center_px(cell_size, p) {\r\n  return [p[0] * cell_size + cell_size / 2, p[1] * cell_size + cell_size / 2];\r\n}\r\n\r\nexport function draw_path(ctx, cells, style, color) {\r\n  let cell_size = ctx.cell_size;\r\n  color = DrawColorPremul(color);\r\n\r\n  let start_px = center_px(cell_size, cells[0]);\r\n  let points = cells\r\n    .map((p) => {\r\n      let px = center_px(cell_size, p);\r\n      return [px[0], px[1]];\r\n    })\r\n    .flat();\r\n  let objs = [];\r\n\r\n  if (style === \"thermo\") {\r\n    let strokeWidth = cell_size * 0.3;\r\n    let bulb = new Circle({\r\n      x: start_px[0],\r\n      y: start_px[1],\r\n      radius: cell_size * 0.4,\r\n      fill: color,\r\n    });\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      lineCap: \"round\"\r\n    });\r\n    objs.push(bulb, line);\r\n  } else if (style === \"thin\") {\r\n    let strokeWidth = cell_size * 0.05;\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      lineCap: \"square\"\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"fat\") {\r\n    let strokeWidth = cell_size * 0.3;\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      lineCap: \"square\"\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"roundborder\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"round\",\r\n      lineJoin: \"round\",\r\n    });\r\n    let line2 = new Line({\r\n      points: points,\r\n      stroke: \"white\",\r\n      strokeWidth: cell_size * 0.67,\r\n      lineCap: \"round\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"border\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"square\",\r\n      lineJoin: \"round\",\r\n    });\r\n    let line2 = new Line({\r\n      points: points,\r\n      stroke: \"white\",\r\n      strokeWidth: cell_size * 0.67,\r\n      lineCap: \"square\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"roundfill\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"round\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1);\r\n  } else if (style === \"squarefill\") {\r\n    let line1 = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      lineCap: \"square\",\r\n      lineJoin: \"round\",\r\n    });\r\n    objs.push(line1);\r\n  } else if (style === \"arrowcircle\" || style === \"arrow\") {\r\n    let strokeWidth = cell_size * 0.07;\r\n    if (points.length > 1) {\r\n      let arrow = new Arrow({\r\n        points: points,\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        arrow: cell_size * 0.3,\r\n      });\r\n      objs.push(arrow);\r\n    }\r\n    let line = new Line({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      join: \"miter\",\r\n    });\r\n    objs.push(line);\r\n    if (style === \"arrowcircle\") {\r\n      let bulb = new Circle({\r\n        x: start_px[0],\r\n        y: start_px[1],\r\n        radius: cell_size * 0.4,\r\n        fill: \"white\",\r\n        strokeWidth: strokeWidth,\r\n        stroke: color,\r\n      });\r\n      objs.push(bulb);\r\n    }\r\n  }\r\n\r\n  ctx.underlay2.add(...objs);\r\n  ctx.scene.draw();\r\n\r\n  return objs;\r\n}\r\n","//import Arrow from \"./arrow\";\r\nimport { Circle, Star, Rect, Group, Text, Line, Arrow } from \"konva\";\r\nimport { DrawColorPremul } from \"./draw\";\r\n\r\n/*\r\nclass Text2 extends Text\r\n{\r\n    makePath(ctx) {\r\n        const origin = this.getOrigin();\r\n        ctx.translate(origin.x, origin.y);\r\n\r\n        this.path = new window.Path2D();\r\n        this.path.rect(0, 0, this.width, this.height);\r\n\r\n        ctx.fillStyle = \"rgba(255,255,255,1)\";\r\n        ctx.fill(this.path);\r\n        ctx.fillStyle = this.options.fill.toString(ctx);\r\n\r\n        ctx.translate(-origin.x, -origin.y);\r\n\r\n        super.makePath(ctx);\r\n\r\n        return this;\r\n    }\r\n}\r\n*/\r\n\r\nexport function draw_symbol(container, str, _color, size, bg) {\r\n  let page = +str.substr(1, 1);\r\n  let symbol = +str.substr(2, 1);\r\n  let color = DrawColorPremul(_color);\r\n  let cx = size / 2;\r\n  let cy = size / 2;\r\n  let sym;\r\n\r\n  if (str[0] !== \"#\") page = 0;\r\n\r\n  if (page === 0) {\r\n    sym = new Text({\r\n      x: size * 0.5 - (0.25 * size * str.length),\r\n      y: size * 0.1,\r\n      text: str,\r\n      fontSize: size,\r\n      fill: color,\r\n      listening: false,\r\n    });\r\n    /*const meas = Text.measure(str, textOptions);*/\r\n    //const measure_width = 30;\r\n    //sym.position.x = (size - measure_width) / 2;\r\n  }\r\n  if (page === 1) {\r\n    if (symbol === 1) {\r\n      // circle fill\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      // circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // dash circle fill\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      // dash circle outline\r\n      sym = new Circle({\r\n        x: cx,\r\n        y: cy,\r\n        radius: (0.8 * size) / 2,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        dash: [4],\r\n      });\r\n    }\r\n  }\r\n  if (page === 2) {\r\n    // Little killer style arrows\r\n    let offset = size * 0.05;\r\n    let offset2 = size * 0.15;\r\n    let aopt = {\r\n      stroke: color,\r\n      strokeWidth: 3,\r\n      fill: color,\r\n      pointerLength: size * 0.3,\r\n      pointerWidth: size * 0.3,\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, size - cx - offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, size - cx - offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: offset2,\r\n        y: cy,\r\n        points: [0, 0, size - offset2 * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: size - offset2,\r\n        y: cy,\r\n        points: [0, 0, -(size - offset2 * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: offset2,\r\n        points: [0, 0, 0, size - offset2 * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: size - offset2,\r\n        points: [0, 0, 0, -(size - offset2 * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 3) {\r\n    // Yajilin style arrows\r\n    let offset = size * 0.15;\r\n    let aopt = {\r\n      stroke: color,\r\n      fill: color,\r\n      strokeWidth: 2,\r\n      pointerLength: size * 0.1,\r\n      pointerWidth: size * 0.1,\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 4) {\r\n    if (symbol === 1) {\r\n      sym = new Star({\r\n        x: cx,\r\n        y: cy,\r\n        innerRadius: size * 0.2,\r\n        outerRadius: size * 0.4,\r\n        numPoints: 5,\r\n        fill: color,\r\n        stroke: \"black\",\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      let offset = size * 0.1;\r\n      sym = new Line({\r\n        x: offset,\r\n        y: offset,\r\n        points: [\r\n          0,\r\n          0,\r\n          size - offset * 2,\r\n          cy - offset,\r\n          0,\r\n          size - offset * 2,\r\n          0,\r\n          0,\r\n        ],\r\n        fill: color,\r\n        closed: true,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Group();\r\n      sym.add(new Rect({ width: size, height: size, fill: color }));\r\n      sym.add(\r\n        new Line({\r\n          points: [0, 0, size, size],\r\n          stroke: \"white\",\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n    }\r\n    if (symbol === 4) {\r\n      let o = size * 0.1;\r\n      sym = new Group();\r\n      sym.add(\r\n        new Line({\r\n          points: [o, o, size - o, size - o],\r\n          stroke: color,\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n      sym.add(\r\n        new Line({\r\n          points: [o, size - o, size - o, o],\r\n          stroke: color,\r\n          strokeWidth: 3,\r\n        })\r\n      );\r\n    }\r\n  }\r\n  if (sym) {\r\n    if (container.symbol) {\r\n      container.symbol.destroy();\r\n    }\r\n    if (bg) {\r\n      let bg = new Rect({ width: size, height: size, fill: \"white\", listening: false });\r\n      let c = new Group();\r\n      c.add(bg, sym);\r\n      container.symbol = c;\r\n      container.add(c);\r\n    } else {\r\n      container.symbol = sym;\r\n      container.add(sym);\r\n    }\r\n    container.symboltext = str;\r\n    container.symbolcolor = _color;\r\n  }\r\n}\r\n","import { Stage, Layer, Text, Rect, Group, Line, Circle, Util } from \"konva\";\nimport { draw_cage } from \"./cage\";\nimport { draw_path } from \"./path\";\nimport { draw_symbol } from \"./symbols\";\nimport pako from \"pako\";\nimport msgpack from \"msgpack-lite\";\nimport { isEqual, range, findLastIndex, last } from \"lodash\";\n\nlet ctx = {};\nlet cell_size = 0;\nlet grid_w = null;\nlet grid_h = null;\nlet grid_left = 0;\nlet grid_top = 0;\nlet grid_bottom = 0;\nlet grid_right = 0;\nlet grid_div_width = 0;\nlet grid_div_height = 0;\nlet grid_style = \"normal\";\nlet grid_left_diagonal = false;\nlet grid_right_diagonal = false;\nlet corner_offset = 0;\nlet hover_offset = 0;\nlet symbol_page = 0;\nlet multi_digit = false;\nlet number_bg = false;\n\nconst type_path = 1;\nconst type_cage = 2;\n\nconst lock_normal = 1;\nconst lock_color = 2;\nconst lock_boundary = 3;\n\nconst b_corner = 1;\nconst b_side = 2;\nconst b_quarter = 3;\nconst b_boundary = 4;\nconst b_edge = 5;\n\nconst b_left = 1;\nconst b_top = 2;\nconst b_bottom = 3;\nconst b_right = 4;\n\nconst sol_text_color = \"rgb(29, 106, 229)\";\nconst mark_color = \"rgba(247, 208, 56, 0.5)\";\nexport const DrawColors = [\n  \"rgba(0, 0, 0, 1)\",\n  \"rgba(207, 207, 207, 0.5)\",\n  \"rgba(255, 255, 255, 1)\",\n  \"rgba(163, 224, 72, 0.5)\",\n  \"rgba(210, 59, 231, 0.5)\",\n  \"rgba(235, 117, 50, 0.5)\",\n  \"rgba(226, 38, 31, 0.5)\",\n  \"rgba(247, 208, 56, 0.5)\",\n  \"rgba(52, 187, 230, 0.5)\",\n  //\n  \"rgba(140, 140, 140, 0.5)\",\n  \"rgba(80, 80, 80, 0.5)\",\n  \"rgba(20, 20, 20, 0.5)\",\n];\n\nexport function DrawColorPremul(color) {\n  if (typeof color === \"number\") {\n    color = DrawColors[color];\n  }\n  // Premultiply for thermo\n  color = Util.colorToRGBA(color);\n  color.r = color.r * color.a + (1 - color.a) * 255;\n  color.g = color.g * color.a + (1 - color.a) * 255;\n  color.b = color.b * color.a + (1 - color.a) * 255;\n  color.a = 1;\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n}\n\nlet current_color = 0;\nlet current_mode = \"normal\";\nlet current_rmode = null;\nlet current_style = null;\nlet solve_mode = false;\nlet scene = null;\nlet matrix = [];\nlet stuff = [];\nlet drag = false;\nlet drag_toggle = null;\nlet drag_button = -1;\nlet undo_stack = [];\nlet current = null;\nlet outer = null;\nlet underlay = null;\nlet shift = false;\nlet cursor = null;\nlet boundary = null;\nlet grid_lines = [];\n\nfunction reset() {\n  matrix = [];\n  stuff = [];\n  undo_stack = [];\n  current = null;\n  outer = null;\n  underlay = null;\n  shift = false;\n  cursor = null;\n}\n\nexport function DrawSetSymbolPage(page) {\n  symbol_page = page;\n}\n\nclass TextHolder {\n  constructor(container, color, fontSize, size) {\n    this.container = container;\n    this._color = color;\n    this.fontSize = fontSize;\n    this.size = size;\n    this._text = \"\";\n    this.obj = null;\n  }\n\n  text(t) {\n    if (t === undefined) return this._text;\n\n    this._text = t;\n    if (this._text.length > 0) {\n      if (!this.obj) {\n        this.obj = new Text({\n          fill: this._color,\n          text: this._text,\n          fontSize: this.fontSize,\n        });\n        this.container.add(this.obj);\n      } else this.obj.text(this._text);\n\n      if (this.size === 1) {\n        let size = cell_size;\n        let meas = {\n          width: this.fontSize * this._text.length * 0.6,\n          height: this.fontSize,\n        };\n        this.obj.position({\n          x: (size - meas.width) / 2 - size * 0.2,\n          y: (size - meas.height) / 2 - size * 0.1,\n        });\n      } else {\n        let size = 64;\n        let meas = {\n          width: this.fontSize * this._text.length * 0.5,\n          height: this.fontSize,\n        };\n        this.obj.position({\n          x: (size - meas.width) / 2,\n          y: (size - meas.height) / 2,\n        });\n      }\n    } else if (this.obj) {\n      this.obj.destroy();\n      this.obj = null;\n    }\n  }\n\n  color(c) {\n    if (c === undefined) return this._color;\n\n    this._color = c;\n    if (this.obj) this.obj.fill(this._color);\n  }\n}\n\nfunction set_symbol(container, str, color, _size) {\n  let text;\n  let size = _size;\n  if (container.normal) {\n    if (typeof color === \"number\") color = DrawColors[color];\n    container.normal.text.color(color);\n    size = cell_size;\n    text = container.normal.text;\n    if (multi_digit) str = text.text() + str;\n    container = container.symcont;\n  } else if (size > 0) {\n    // Symbol page\n    color = \"gray\";\n  } else {\n    size = container.bsize;\n    if (multi_digit && str !== \"\") str = (container.symboltext || \"\") + str;\n  }\n  if (str[0] === \"#\" || !text) {\n    draw_symbol(container, str, color, size, number_bg);\n  } else {\n    text.text(str);\n  }\n}\n\nexport function DrawSymbol(element, page, num, size) {\n  let stage = new Stage({ container: element, width: size, height: size });\n  let layer = new Layer();\n  set_symbol(layer, \"#\" + page + num, current_color, size);\n  stage.add(layer);\n  stage.draw();\n}\n\nfunction _set_cell(lock, pos, mode, color, newtext) {\n  let x = pos[0];\n  let y = pos[1];\n  let b = null;\n  if (pos.length === 3) b = get(...pos);\n  let m = get(x, y);\n  let undo_entry = {\n    mode: mode,\n    x: x,\n    y: y,\n    newtext: newtext,\n    old_normal: m.normal.text.text(),\n  };\n\n  if (!m.main_grid && mode !== \"normal\" && !lock) {\n    return;\n  }\n  if (m.lock_type === lock_normal && !lock && mode !== \"color\") {\n    return;\n  }\n\n  if (mode === \"reset\") {\n    m.center.text.text(\"\");\n    m.normal.text.text(\"\");\n    m.corner.forEach((c) => c.text.text(\"\"));\n    m.side.forEach((s) => s.text.text(\"\"));\n    m.r_color.fill(null);\n    m.r_color.fillEnabled(false);\n    if (lock) {\n      m.r_color_set.fill(null);\n      m.r_color_set.fillEnabled(false);\n      m.fill = -1;\n      if (m.symcont.symbol) {\n        m.symcont.symbol.destroy();\n        m.symcont.symbol = null;\n        m.symcont.symboltext = \"\";\n      }\n      m.boundary.forEach((b) => {\n        if (b.symbol) {\n          b.symbol.destroy();\n          b.symbol = null;\n          b.symboltext = \"\";\n        }\n        if (b.rect) {\n          b.rect.destroy();\n          b.rect = null;\n        }\n      });\n    }\n  } else if (b) {\n    set_symbol(b, newtext, color);\n  } else if (mode === \"normal\") {\n    if (!lock) {\n      color = sol_text_color;\n    } else {\n      m.lock_type = newtext !== \"\" ? lock_normal : 0;\n      if (newtext[0] !== \"#\") {\n        m.color = color;\n      }\n    }\n    set_symbol(m, newtext, color);\n    if (newtext[0] !== \"#\") {\n      m.center.text.text(\"\");\n      m.corner.forEach((c) => c.text.text(\"\"));\n      m.side.forEach((s) => s.text.text(\"\"));\n    }\n  } else if (mode === \"center\" && m.normal.text.text() === \"\") {\n    let current = m.center.text.text();\n    let center = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          center += i;\n        }\n      }\n    }\n\n    m.center.text.text(center);\n  } else if (mode === \"corner\" && m.normal.text.text() === \"\") {\n    let current = \"\";\n    m.corner.forEach((t) => {\n      current += t.text.text();\n    });\n    m.side.forEach((t) => {\n      current += t.text.text();\n    });\n    let text = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          text += i;\n        }\n      }\n    }\n    let i = 0;\n    m.corner.forEach((c) => c.text.text(text[i++] || \"\"));\n    m.side.forEach((s) => s.text.text(text[i++] || \"\"));\n  } else if (mode === \"color\") {\n    if (!lock) {\n      m.r_color.fill(DrawColors[color]);\n      m.r_color.fillEnabled(true);\n    } else {\n      m.r_color_set.fill(DrawColors[color]);\n      m.r_color_set.fillEnabled(true);\n      m.fill = color;\n    }\n  }\n  undo_entry.normal = m.normal.text.text();\n  undo_stack.push(undo_entry);\n}\n\nfunction keyup(event) {\n  if (event.key === \"Shift\") {\n    shift = false;\n  }\n}\n\nfunction set_cell(pos, mode, color, newtext) {\n  let lock = !solve_mode;\n  _set_cell(lock, pos, mode, color, newtext);\n}\n\nfunction lock_cell(pos, mode, color, newtext) {\n  _set_cell(true, pos, mode, color, newtext);\n}\n\nexport function DrawSetNumber(number) {\n  let symbol = \"\" + number;\n  if (symbol_page > 0) symbol = \"#\" + symbol_page + number;\n  if (boundary) {\n    set_cell(boundary, \"boundary\", current_color, symbol);\n  } else {\n    let count = 0;\n    let mode = current_mode;\n    each_mark(m => ++count);\n    if (count > 1 && solve_mode && mode === \"normal\")\n      mode = \"center\";\n    each_mark(m => set_cell([m.x, m.y], mode, current_color, symbol));\n    if (count > 1) undo_stack.push({ mode: \"group\", count: count });\n  }\n  scene.draw();\n}\n\nexport function DrawSetColor(color_index) {\n  current_color = color_index;\n  if (current_mode === \"color\") {\n    each_mark((m) => {\n      set_cell([m.x, m.y], \"color\", color_index, null);\n    });\n    scene.draw();\n  }\n}\n\nfunction keydown(event) {\n  if (event.target.tagName === \"TEXTAREA\") {\n    return;\n  }\n\n  let newtext;\n  if (event.key === \"Shift\") {\n    shift = true;\n    return;\n  } else if (event.key === \"Delete\" || event.key === \"Backspace\") {\n    DrawDelete();\n    event.preventDefault();\n    return;\n  } else if (event.key >= \"0\" && event.key <= \"9\") {\n    newtext = event.key;\n    if (symbol_page > 0) newtext = \"#\" + symbol_page + newtext;\n  } else if (event.key === \"u\" && solve_mode) {\n    DrawUndo();\n    return;\n  } else if (\n    event.key.length === 1 &&\n    ((event.key >= \"a\" && event.key <= \"z\") ||\n      (event.key >= \"A\" && event.key <= \"Z\")) &&\n    !solve_mode\n  ) {\n    newtext = event.key;\n  } else if (event.key.startsWith(\"Arrow\") && cursor) {\n    let c = cursor.slice();\n    if (!shift) unmark();\n    cursor = c;\n    if (event.key === \"ArrowUp\" && cursor[1] > 0) cursor[1] -= 1;\n    if (event.key === \"ArrowDown\" && cursor[1] < grid_h - 1) cursor[1] += 1;\n    if (event.key === \"ArrowLeft\" && cursor[0] > 0) cursor[0] -= 1;\n    if (event.key === \"ArrowRight\" && cursor[0] < grid_w - 1) cursor[0] += 1;\n    mark(cursor[0], cursor[1]);\n    scene.draw();\n    return;\n  } else {\n    return;\n  }\n\n  if (boundary) {\n    set_cell(boundary, \"boundary\", current_color, newtext);\n  } else {\n    let count = 0;\n    each_mark((m) => ++count);\n\n    let mode = current_mode;\n    if (count > 1 && solve_mode && mode === \"normal\")\n      mode = \"center\";\n    each_mark((m) => {\n      if (current_mode === \"color\") {\n        let color = +newtext - 1;\n        if (color >= 0 && color <= 9)\n          set_cell([m.x, m.y], current_mode, color, null);\n      } else set_cell([m.x, m.y], mode, current_color, newtext);\n    });\n    if (count > 1) undo_stack.push({ mode: \"group\", count: count });\n  }\n  scene.draw();\n}\n\nfunction get(x, y, b) {\n  if (x < 0 || y < 0 || x >= grid_w || y >= grid_h) {\n    return null;\n  }\n  let m = matrix[y][x];\n  if (b >= 0) return m.boundary[b];\n  return m;\n}\n\nfunction mark(x, y) {\n  let m = get(x, y);\n  if (!m.mark) {\n    m.mark = true;\n    m.rect.fill(mark_color);\n    m.rect.fillEnabled(true);\n    return true;\n  }\n  return false;\n}\n\nfunction inner_hover(x, y) {\n  if (!drag) return;\n  if (drag_button !== 0) return;\n\n  if (current_mode === \"path\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = draw_path(ctx, current.cells, current_style, current_color);\n    scene.draw();\n  }\n}\n\nlet last_toggle_state = null;\n\nfunction edge_toggle(x, y, i) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let c = solve_mode ? \"black\" : DrawColors[current_color];\n  let eo = cell_size * 0.15;\n  let del;\n\n  if (last_toggle_state === null) {\n    if (b.edge) last_toggle_state = true;\n    else last_toggle_state = false;\n  }\n  del = last_toggle_state;\n\n  if (del) {\n    if (b.edge) {\n      b.edge.destroy();\n      b.edge = null;\n    }\n  } else if (!b.edge) {\n    let edge;\n    let new_edge = (x, y, x1, y1) => {\n      edge = new Line({\n        x: x,\n        y: y,\n        points: [0, 0, x1, y1],\n        strokeWidth: 3,\n        stroke: c,\n        listening: false,\n      });\n    };\n    switch (b.btype2) {\n      case b_left:\n      case b_right:\n        new_edge(eo, -eo, 0, cell_size);\n        break;\n      case b_top:\n      case b_bottom:\n        new_edge(-eo, eo, cell_size, 0);\n        break;\n      default:\n        break;\n    }\n    b.edge = edge;\n    b.add(edge);\n  }\n\n  scene.draw();\n}\n\nlet last_toggle = { x: -1, y: -1, i: -1 };\n\nfunction edge_mousemove(event, x, y, i) {\n  if (!drag) return;\n\n  if (last_toggle.x === x && last_toggle.y === y && last_toggle.i === i) return;\n  last_toggle = { x: x, y: y, i: i };\n  edge_toggle(x, y, i);\n}\n\nfunction mousemove(event, x, y) {\n  if (!drag) return;\n\n  if (drag_button === 2 && current_rmode === \"cross\") {\n    let m = get(x, y);\n    m.normal.text.text(\"\");\n    if (m.symcont.symbol) {\n      m.symcont.symbol.destroy();\n      m.symcont.symbol = null;\n      m.symcont.symboltext = \"\";\n    }\n    if (drag_toggle) draw_symbol(m.symcont, \"#44\", \"black\", cell_size);\n    scene.draw();\n    return;\n  }\n\n  if (current_mode === \"path\" || current_mode === \"edge\") {\n  } else if (current_mode === \"cage\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    if (current.objs) current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = draw_cage(ctx, current.cells, current_style, current_color);\n    scene.draw();\n  } else {\n    if (mark(x, y)) scene.draw();\n  }\n}\n\nfunction mark_boundary(x, y, i) {\n  unmark();\n\n  let b = get(x, y).boundary[i];\n  if (!b.rect) {\n    b.rect = new Rect({\n      width: b.bwidth,\n      height: b.bheight,\n      fillEnabled: false,\n    });\n    b.add(b.rect);\n  }\n  b.rect.stroke(\"red\");\n  b.rect.strokeWidth(1);\n  boundary = [x, y, i];\n}\n\nfunction unmark() {\n  if (boundary) {\n    let r = get(...boundary).rect;\n    if (r) r.strokeWidth(0);\n    boundary = null;\n  }\n  each_mark((m) => {\n    m.rect.fill(null);\n    m.mark = false;\n  });\n  cursor = null;\n}\n\nfunction boundary_mousedown(event, x, y, i) {\n  mark_boundary(x, y, i);\n  scene.draw();\n}\n\nfunction contextmenu(event) {\n  if (event.target.tagName === \"CANVAS\") event.preventDefault();\n}\n\nfunction mousedown(event, x, y, i) {\n  if (event.evt.button === 2 && current_rmode === \"edgecross\") {\n    if (i !== undefined) {\n      let b = get(x, y).boundary[i];\n      if (b.symbol) {\n        b.symbol.destroy();\n        b.symbol = null;\n        b.symboltext = \"\";\n        drag_toggle = false;\n      } else {\n        draw_symbol(b, \"#44\", \"black\", b.bsize);\n        drag_toggle = true;\n      }\n      scene.draw();\n    }\n    return;\n  }\n\n  if (event.evt.button === 2 && current_rmode === \"cross\") {\n    let m = get(x, y);\n    m.normal.text.text(\"\");\n    if (m.symcont.symbol) {\n      m.symcont.symbol.destroy();\n      m.symcont.symbol = null;\n      m.symcont.symboltext = \"\";\n      drag_toggle = false;\n    } else {\n      draw_symbol(m.symcont, \"#44\", \"black\", cell_size);\n      drag_toggle = true;\n    }\n    scene.draw();\n    return;\n  }\n\n  if (!shift) unmark();\n\n  cursor = [x, y];\n  drag = true;\n  drag_button = event.evt.button;\n\n  if (boundary) {\n    get(...boundary).strokeWidth(0);\n    boundary = null;\n  }\n\n  if (current_mode === \"path\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = draw_path(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"cage\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = draw_cage(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"edge\" && i !== undefined) {\n    edge_toggle(x, y, i);\n  } else {\n    mark(x, y);\n  }\n\n  scene.draw();\n}\n\nfunction edge_mouseup(event, x, y, i) {\n  if (event.evt.button === 2) return;\n  if (last_toggle_state === null) edge_toggle(x, y, i);\n  last_toggle_state = null;\n  drag = false;\n}\n\nfunction mouseup() {\n  drag = false;\n  if (current_mode === \"path\" && current) {\n    stuff.push({\n      type: type_path,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    current = null;\n  } else if (current_mode === \"cage\" && current) {\n    stuff.push({\n      type: type_cage,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    current = null;\n  }\n}\n\nexport function DrawSetMode(state) {\n  current_mode = state.mode;\n  solve_mode = state.solveMode;\n  number_bg = state.numberBackground;\n  multi_digit = state.multiDigit;\n\n  each_cell((m) =>\n    m.boundary.forEach((b) => {\n      if (b.rect) {\n        b.rect.destroy();\n        b.rect = null;\n      }\n    })\n  );\n\n  if (state.mode === \"cage\") current_style = state.cageStyle;\n  if (state.mode === \"path\") current_style = state.pathStyle;\n  if (state.mode === \"edgecross\") {\n    current_mode = \"edge\";\n    current_rmode = \"edgecross\";\n  }\n  if (state.mode === \"centerline\") {\n    current_mode = \"path\";\n    current_style = \"fat\";\n    current_color = sol_text_color;\n    current_rmode = \"edgecross\";\n  }\n  if (\n    (state.mode === \"normal\" || state.mode === \"number\") &&\n    state.numberStyle === \"normal\"\n  ) {\n    current_mode = \"normal\";\n  }\n\n  if (current_mode === \"edge\") {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === b_edge) {\n          if (!b.rect) {\n            b.rect = new Rect({\n              width: b.bwidth,\n              height: b.bheight,\n              fill: null,\n              fillEnabled: false,\n            });\n            b.add(b.rect);\n          }\n          b.rect.fillEnabled(true);\n          b.rect.on(\"mousemove touchmove\", (event) =>\n            edge_mousemove(event, m.x, m.y, i)\n          );\n          b.rect.on(\"mousedown tap touchstart\", (event) =>\n            mousedown(event, m.x, m.y, i)\n          );\n          b.rect.on(\"mouseup touchend\", (event) =>\n            edge_mouseup(event, m.x, m.y, i)\n          );\n        }\n      })\n    );\n  }\n\n  let setBoundary = (type) => {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === type) {\n          if (!b.rect) {\n            b.rect = new Rect({\n              width: b.bwidth,\n              height: b.bheight,\n              fill: null,\n              fillEnabled: true,\n            });\n            b.add(b.rect);\n          }\n          b.rect.on(\"mousedown touchstart tap\", (event) =>\n            boundary_mousedown(event, m.x, m.y, i)\n          );\n        }\n      })\n    );\n  };\n\n  if (state.mode === \"number\" && state.numberStyle === \"corner\") {\n    current_mode = \"boundary\";\n    setBoundary(b_corner);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"side\") {\n    current_mode = \"boundary\";\n    setBoundary(b_side);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"quarter\") {\n    current_mode = \"boundary\";\n    setBoundary(b_quarter);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"boundary\") {\n    current_mode = \"boundary\";\n    setBoundary(b_boundary);\n  }\n  scene.draw();\n}\n\nfunction each_cell(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      f(m);\n    }\n  }\n}\n\nfunction each_mark(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      if (m.mark) f(m);\n    }\n  }\n}\n\nfunction load_size(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  if (data.version !== 1) {\n    alert(\"Bad version\");\n  }\n\n  cell_size = data.grid[0];\n  grid_w = data.grid[1];\n  grid_h = data.grid[2];\n  grid_left = data.grid[3];\n  grid_right = data.grid[4];\n  grid_top = data.grid[5];\n  grid_bottom = data.grid[6];\n  grid_div_width = data.grid[7];\n  grid_div_height = data.grid[8];\n  grid_style = data.grid[9];\n  grid_left_diagonal = data.grid[10];\n  grid_right_diagonal = data.grid[11];\n}\n\nfunction load(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  stuff = [];\n  each_cell((m) => {\n    m.lock_type = 0;\n    m.normal.text.text(\"\");\n    m.center.text.text(\"\");\n  });\n\n  data.cells.forEach((c) => {\n    let [pos, type, text, color] = c;\n    if (type === lock_normal) {\n      lock_cell(pos, \"normal\", color, text);\n    } else if (type === lock_color) {\n      lock_cell(pos, \"color\", color, text);\n    } else if (type === lock_boundary) {\n      lock_cell(pos, \"boundary\", color, text);\n    }\n  });\n  data.stuff.forEach((_s) => {\n    let s = { type: _s[0], style: _s[1], color: _s[2], cells: _s[3] };\n    if (s.type === type_path) {\n      s.objs = draw_path(ctx, s.cells, s.style, s.color);\n    } else if (s.type === type_cage) {\n      s.objs = draw_cage(ctx, s.cells, s.style, s.color);\n    }\n    stuff.push(s);\n  });\n}\n\nexport function DrawGetDescription(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  return data.desc;\n}\n\nexport function DrawGenerateUrl(description) {\n  let out = {\n    version: 1,\n    grid: [\n      cell_size,\n      grid_w,\n      grid_h,\n      grid_left,\n      grid_right,\n      grid_top,\n      grid_bottom,\n      grid_div_width,\n      grid_div_height,\n      grid_style,\n      grid_left_diagonal,\n      grid_right_diagonal,\n    ],\n    cells: [],\n    stuff: stuff.map((e) => [e.type, e.style, e.color, e.cells]),\n    desc: description,\n  };\n\n  each_cell((m) => {\n    let pos = [m.x, m.y];\n    if (m.lock_type === lock_normal) {\n      if (m.normal.text.text() !== \"\")\n        out.cells.push([pos, m.lock_type, m.normal.text.text(), m.color]);\n      if (m.symcont.symboltext !== \"\" && m.symcont.symboltext !== undefined)\n        out.cells.push([\n          pos,\n          m.lock_type,\n          m.symcont.symboltext,\n          m.symcont.symbolcolor,\n        ]);\n    }\n    if (m.fill >= 0) {\n      out.cells.push([pos, lock_color, null, m.fill]);\n    }\n    m.boundary.forEach((b, i) => {\n      if (b.symboltext)\n        out.cells.push([\n          [m.x, m.y, i],\n          lock_boundary,\n          b.symboltext,\n          b.symbolcolor,\n        ]);\n    });\n  });\n\n  console.log(out);\n\n  let coded = msgpack.encode(out);\n  let packed = pako.deflate(coded);\n  let base64 = btoa(String.fromCharCode(...packed));\n  return window.location.origin + \"/?s=1&p=\" + encodeURIComponent(base64);\n}\n\nexport function DrawCheck() {\n  let r = range(1, 10);\n  let rows = Array.from({ length: 9 }, () => []);\n  let columns = Array.from({ length: 9 }, () => []);\n  let boxes = Array.from({ length: 9 }, () => []);\n  let missing = null;\n  each_cell((m) => {\n    let x = m.x - grid_left;\n    let y = m.y - grid_top;\n    let n = +m.normal.text.text();\n    if (n === 0 && missing === null) {\n      missing = `Missing entry at ${x + 1}, ${y + 1}`;\n    }\n    columns[x].push(n);\n    rows[y].push(n);\n    let b = Math.floor(x / 3) + Math.floor(y / 3) * 3;\n    boxes[b].push(n);\n  });\n  if (missing) {\n    return [false, missing];\n  }\n  for (let i = 0; i < 9; ++i) {\n    if (!isEqual(rows[i].sort(), r)) {\n      return [false, `Bad row ${i + 1}`];\n    }\n    if (!isEqual(columns[i].sort(), r)) {\n      return [false, `Bad column ${i + 1}`];\n    }\n    if (!isEqual(boxes[i].sort(), r)) {\n      return [false, `Bad box ${i + 1}`];\n    }\n  }\n  return [true, \"OK\"];\n}\n\nexport function DrawDelete() {\n  if (!solve_mode && cursor) {\n    let i = findLastIndex(stuff, (s) =>\n      s.cells.find((c) => c[0] === cursor[0] && c[1] === cursor[1])\n    );\n    if (i !== -1) {\n      stuff[i].objs.forEach((o) => o.destroy());\n      stuff.splice(i, 1);\n      scene.draw();\n      return;\n    }\n  }\n\n  let count = 0;\n\n  if (boundary) {\n    set_cell(boundary, \"boundary\", null, \"\");\n  } else {\n    each_mark((m) => {\n      set_cell([m.x, m.y], \"reset\", null, \"\");\n      ++count;\n    });\n  }\n\n  if (count > 1) {\n    undo_stack.push({ mode: \"group\", count: count });\n  }\n\n  scene.draw();\n}\n\nexport function DrawReset() {\n  each_cell((m) => {\n    set_cell([m.x, m.y], \"reset\", null, \"\");\n  });\n\n  if (!solve_mode) {\n    stuff.forEach((s) => s.objs.forEach((o) => o.destroy()));\n    stuff = [];\n  }\n  scene.draw();\n}\n\nexport function DrawUndo() {\n  if (undo_stack.length === 0) return;\n  let u = undo_stack.pop();\n  let count = 0;\n  if (u.mode === \"group\") {\n    count = u.count;\n    u = undo_stack.pop();\n  }\n  do {\n    if (u.mode === \"normal\") {\n      set_cell([u.x, u.y], u.mode, current_color, u.old_normal);\n    } else if (u.mode === \"center\" || u.mode === \"corner\") {\n      set_cell([u.x, u.y], u.mode, current_color, u.newtext);\n    }\n    undo_stack.pop();\n    --count;\n    if (count > 0) {\n      u = undo_stack.pop();\n    }\n  } while (count > 0);\n  scene.draw();\n}\n\nfunction add_grid(layer) {\n  let dash = grid_style === \"dash\" ? [4] : null;\n  let dots = grid_style === \"dots\";\n\n  let thin = {\n    stroke: \"black\",\n    strokeWidth: 1,\n    dash: dash,\n  };\n  let fat = {\n    stroke: \"black\",\n    strokeWidth: 4,\n  };\n\n  grid_lines.forEach((g) => g.destroy());\n\n  let frame_w = grid_w - grid_left - grid_right;\n  let frame_h = grid_h - grid_top - grid_bottom;\n\n  grid_lines = [];\n  if (grid_left_diagonal || grid_right_diagonal) {\n    let diagonal = {\n      stroke: DrawColors[1],\n      strokeWidth: 4,\n    };\n    if (grid_left_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            grid_left * cell_size,\n            grid_top * cell_size,\n            (grid_left + frame_w) * cell_size,\n            (grid_top + frame_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n    if (grid_right_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            (grid_w - grid_right) * cell_size,\n            grid_top * cell_size,\n            grid_left * cell_size,\n            (grid_top + frame_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n  }\n\n  if (dots) {\n    let dsize = cell_size * 0.07;\n    for (let y = 0; y <= frame_h; ++y) {\n      for (let x = 0; x <= frame_w; ++x) {\n        grid_lines.push(\n          new Circle({\n            x: (grid_left + x) * cell_size,\n            y: (grid_top + y) * cell_size,\n            radius: dsize,\n            fill: \"black\",\n          })\n        );\n      }\n    }\n  } else {\n    for (let x = 0; x <= frame_w; ++x) {\n      grid_lines.push(\n        new Line({\n          x: (grid_left + x) * cell_size,\n          y: grid_top * cell_size,\n          points: [0, 0, 0, frame_h * cell_size],\n          ...(x % grid_div_width === 0 ? fat : thin),\n        })\n      );\n    }\n    for (let y = 0; y <= frame_h; ++y) {\n      grid_lines.push(\n        new Line({\n          x: grid_left * cell_size,\n          y: (grid_top + y) * cell_size,\n          points: [0, 0, frame_w * cell_size, 0],\n          ...(y % grid_div_height === 0 ? fat : thin),\n        })\n      );\n    }\n\n    grid_lines.push(\n      new Rect({\n        x: grid_left * cell_size,\n        y: grid_top * cell_size,\n        width: frame_w * cell_size,\n        height: frame_h * cell_size,\n        stroke: \"black\",\n        strokeWidth: 4,\n        fillEnabled: false,\n      })\n    );\n  }\n\n  layer.add(...grid_lines);\n}\n\nfunction addBoundaries(x, y, boundary) {\n  const bc = cell_size * 0.03;\n  const cs = cell_size;\n  const bsize = cell_size * 0.3;\n\n  const addBoundary = (x, y, size, type, type2) => {\n    let b = new Group({ x: x, y: y });\n    let w = size;\n    let h = size;\n    let s = size;\n    if (Array.isArray(size)) {\n      w = size[0];\n      h = size[1];\n      s = Math.min(size[0], size[1]);\n    }\n    b.rect = null;\n    b.bsize = s;\n    b.bwidth = w;\n    b.bheight = h;\n    b.btype = type;\n    b.btype2 = type2;\n    boundary.push(b);\n  };\n\n  // Corners\n  addBoundary(bc, bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, bc, bsize, b_corner);\n  addBoundary(bc, cs - bsize - bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, cs - bsize - bc, bsize, b_corner);\n\n  // Sides\n  addBoundary(bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, bc, bsize, b_side);\n  addBoundary(cs - bsize - bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, cs - bsize - bc, bsize, b_side);\n\n  // Quarter\n  const qsize = cell_size * 0.4;\n  const qc = cell_size * 0.05;\n  addBoundary(qc, qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, qc, qsize, b_quarter);\n  addBoundary(qc, cs - qsize - qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, cs - qsize - qc, qsize, b_quarter);\n\n  // Edges\n  const ew = cell_size * 0.3;\n  const eh = cell_size * 0.7;\n  const eo = ew / 2;\n  addBoundary(-eo, eo, [ew, eh], b_edge, b_left);\n  addBoundary(eo, -eo, [eh, ew], b_edge, b_top);\n  if (x === grid_w - grid_right - 1)\n    addBoundary(cs - eo, eo, [ew, eh], b_edge, b_right);\n  if (y === grid_h - grid_bottom - 1)\n    addBoundary(eo, cs - eo, [eh, ew], b_edge, b_bottom);\n\n  // Boundaries\n  addBoundary(-bsize / 2, -bsize / 2, bsize, b_boundary);\n  addBoundary(-bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  addBoundary(cs / 2 - bsize / 2, -bsize / 2, bsize, b_boundary);\n  if (x === grid_w - grid_right - 1) {\n    addBoundary(cs - bsize / 2, -bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  }\n  if (y === grid_h - grid_bottom - 1) {\n    addBoundary(-bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs / 2 - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n  }\n}\n\nexport function DrawRender(code, wrapper, state) {\n  cell_size = state.cellSize;\n  grid_left = state.left;\n  grid_right = state.right;\n  grid_top = state.top;\n  grid_bottom = state.bottom;\n  grid_w = grid_left + state.width + grid_right;\n  grid_h = grid_top + state.height + grid_bottom;\n  grid_div_width = state.gridDivWidth;\n  grid_div_height = state.gridDivHeight;\n  grid_style = state.gridStyle;\n  grid_left_diagonal = state.gridLeftDiagonal;\n  grid_right_diagonal = state.gridRightDiagonal;\n\n  if (code) load_size(code);\n\n  corner_offset = cell_size * 0.08;\n  hover_offset = cell_size * 0.2;\n\n  const margin = cell_size * 0.2;\n  const stage_w = grid_w * cell_size + margin * 2;\n  const stage_h = grid_h * cell_size + margin * 2;\n  let stage = new Stage({\n    container: wrapper,\n    width: stage_w,\n    height: stage_h,\n  });\n  scene = new Layer();\n  stage.add(scene);\n\n  reset();\n\n  outer = new Group({ x: margin, y: margin });\n  scene.add(outer);\n\n  underlay = new Group();\n  let underlay2 = new Group();\n  let gridlayer = new Group();\n  let overlay = new Group();\n  outer.add(underlay2, underlay, gridlayer, overlay);\n\n  for (let y = 0; y < grid_h; ++y) {\n    matrix[y] = [];\n  }\n  let cs = cell_size;\n\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let xp = x * cs;\n      let yp = y * cs;\n      let main_grid =\n        x >= grid_left &&\n        y >= grid_top &&\n        x < grid_w - grid_right &&\n        y < grid_h - grid_bottom;\n      let ocont = new Group({ x: xp, y: yp });\n      let cont = new Group({ x: xp, y: yp });\n      let symcont = new Group();\n      let r = new Rect({\n        width: cs,\n        height: cs,\n        strokeWidth: 0,\n        fillEnabled: true,\n      });\n      let r_color = new Rect({\n        width: cs,\n        height: cs,\n        strokeWidth: 0,\n        fillEnabled: false,\n      });\n      let r_color_set = new Rect({\n        width: cs,\n        height: cs,\n        strokeWidth: 0,\n        fillEnabled: false,\n      });\n      let r_hover = new Rect({\n        x: hover_offset,\n        y: hover_offset,\n        width: cs - hover_offset * 2,\n        height: cs - hover_offset * 2,\n        fillEnabled: true,\n      });\n      let normal = new Group({ x: cell_size * 0.25, y: cell_size * 0.15 });\n      normal.text = new TextHolder(normal, sol_text_color, cell_size * 0.7, 1);\n      let center = new Group();\n      center.text = new TextHolder(center, sol_text_color, cell_size * 0.3, 2);\n      let corner_pos = [];\n      corner_pos[0] = [corner_offset, corner_offset];\n      corner_pos[1] = [cs - corner_offset, corner_offset];\n      corner_pos[2] = [cs - corner_offset, cs - corner_offset];\n      corner_pos[3] = [corner_offset, cs - corner_offset];\n      let side_pos = [];\n      side_pos[0] = [cs / 2, corner_offset];\n      side_pos[1] = [cs - corner_offset, cs / 2];\n      side_pos[2] = [cs / 2, cs - corner_offset];\n      side_pos[3] = [corner_offset, cs / 2];\n\n      let corner = [];\n      let side = [];\n      let boundary = [];\n      if (main_grid) {\n        corner_pos.forEach((p, i) => {\n          p = p.slice(0);\n          p[0] -= cs * 0.025;\n          p[1] -= cs * 0.025;\n          if (i === 2 || i === 3) p[1] -= cs * 0.15;\n          if (i === 1 || i === 2) p[0] -= cs * 0.1;\n          let g = new Group({ x: p[0], y: p[1] });\n          g.text = new TextHolder(g, sol_text_color, cs * 0.2, 1);\n          corner.push(g);\n        });\n        side_pos.forEach((p, i) => {\n          p = p.slice(0);\n          p[0] -= cs * 0.025;\n          p[1] -= cs * 0.025;\n          if (i === 2) p[1] -= cs * 0.15;\n          if (i === 1 || i === 3) p[1] -= cs * 0.05;\n          if (i === 0 || i === 2) p[0] -= cs * 0.025;\n          if (i === 1) p[0] -= cs * 0.1;\n          let g = new Group({ x: p[0], y: p[1] });\n          g.text = new TextHolder(g, sol_text_color, cs * 0.2, 1);\n          side.push(g);\n        });\n      }\n      addBoundaries(x, y, boundary);\n\n      cont.add(r_color_set, r_color, r, r_hover, symcont, normal, center);\n      cont.on(\"mousedown touchstart tap\", (event) => mousedown(event, x, y));\n      cont.on(\"mousemove touchmove\", (event) => mousemove(event, x, y));\n      r_hover.on(\"mousemove touchmove\", () => inner_hover(x, y));\n      matrix[y][x] = {\n        x: x,\n        y: y,\n        pos: [xp, yp],\n        symcont: symcont,\n        cont: cont,\n        ocont: ocont,\n        rect: r,\n        boundary: boundary,\n        fill: -1,\n        color: null,\n        normal: normal,\n        center: center,\n        corner: corner,\n        side: side,\n        corner_pos: corner_pos,\n        r_color_set: r_color_set,\n        r_color: r_color,\n        main_grid: main_grid,\n      };\n      underlay.add(cont);\n      if (main_grid) ocont.add(...corner, ...side);\n      ocont.add(...boundary);\n      overlay.add(ocont);\n    }\n  }\n\n  add_grid(gridlayer);\n\n  ctx.scene = scene;\n  ctx.underlay = underlay;\n  ctx.underlay2 = underlay2;\n  ctx.overlay = overlay;\n  ctx.cell_size = cell_size;\n  ctx.corner_offset = corner_offset;\n  ctx.each_cell = each_cell;\n  ctx.get = get;\n\n  if (code) load(code);\n\n  scene.draw();\n\n  return null;\n}\n\nwindow.addEventListener(\"keydown\", (event) => keydown(event));\nwindow.addEventListener(\"keyup\", (event) => keyup(event));\nwindow.addEventListener(\"mouseup\", (event) => mouseup(event));\nwindow.addEventListener(\"contextmenu\", (event) => contextmenu(event));\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  DrawRender,\n  DrawSymbol,\n  DrawSetMode,\n  DrawUndo,\n  DrawDelete,\n  DrawGenerateUrl,\n  DrawSetNumber,\n  DrawSetColor,\n  DrawColors,\n  DrawGetDescription,\n  DrawReset,\n  DrawCheck,\n  DrawSetSymbolPage,\n} from \"./draw\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Slider,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  InputLabel,\n  Grid,\n  TextField,\n  Switch,\n} from \"@material-ui/core\";\nimport { PlayArrow, Pause, SkipPrevious } from \"@material-ui/icons\";\n\nconst query = window.location.search;\nconst url_params = new URLSearchParams(query);\nconst code = url_params.get(\"p\");\nconst solve_mode = url_params.get(\"s\") === \"1\";\n\nfunction UrlDialog(props) {\n  let openInTab = () => {\n    props.onClose();\n    let w = window.open(props.text, \"_blank\");\n    w.focus();\n  };\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle>URL</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{props.text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={openInTab}>Open in tab</Button>\n        <Button color=\"primary\" onClick={props.onClose}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.symbolRef = [];\n    for (let i = 0; i < 9; ++i) this.symbolRef.push(React.createRef());\n\n    this.state = {\n      solveMode: solve_mode,\n      settingsMode: \"size\",\n      color: 0,\n      description: \"\",\n      cellSize: 64,\n      width: 9,\n      height: 9,\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      gridDivWidth: 3,\n      gridDivHeight: 3,\n      gridStyle: \"lines\",\n      gridLeftDiagonal: false,\n      gridRightDiagonal: false,\n      mode: solve_mode ? \"normal\" : \"number\",\n      numberStyle: \"normal\",\n      multiDigit: false,\n      numberBackground: false,\n      cageStyle: \"dash\",\n      pathStyle: \"arrow\",\n      dialogOpen: false,\n      dialogText: \"\",\n      seconds: 0,\n      timeStatus: true,\n      symbolPage: \"0\",\n    };\n  }\n\n  handleKeyDown = (event) => {\n    if (event.target.tagName === \"TEXTAREA\") return;\n\n    if (this.state.solveMode) {\n      const cycle_modes = [\"normal\", \"center\", \"corner\", \"color\"];\n      let i = \"qwer\".indexOf(event.key);\n      if (event.key.length === 1 && i !== -1) this.setMode(cycle_modes[i]);\n      else if (event.key === \" \") {\n        let i = cycle_modes.indexOf(this.state.mode);\n        i = (i + 1) % cycle_modes.length;\n        this.setMode(cycle_modes[i]);\n      }\n    }\n  };\n\n  componentDidMount() {\n    let desc = \"\";\n    if (code) {\n      desc = DrawGetDescription(code);\n    }\n    this.setState({ description: desc }, () => {\n      DrawRender(code, this.canvasRef.current, this.state);\n      DrawSetMode(this.state);\n    });\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n\n    this.interval = setInterval(() => {\n      if (this.state.timeStatus) {\n        this.setState({ seconds: this.state.seconds + 1 });\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    clearInterval(this.interval);\n  }\n\n  setMode = (mode) => {\n    let b = document.getElementById(\"button\" + mode);\n    if (b) b.focus();\n    this.setState({ mode: mode }, () => {\n      DrawSetMode(this.state);\n    });\n  };\n\n  setStyle = (style, value) => {\n    this.setState({ [style]: value }, () => DrawSetMode(this.state));\n  };\n\n  generateUrl = () => {\n    let url = DrawGenerateUrl(this.state.description);\n    this.setState({ dialogText: url, dialogOpen: true });\n  };\n\n  numberStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"numberstyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"numberstyle-label\"\n            fullWidth={true}\n            value={this.state.numberStyle}\n            onChange={(event) =>\n              this.setStyle(\"numberStyle\", event.target.value)\n            }\n          >\n            <MenuItem value=\"normal\">Normal</MenuItem>\n            <MenuItem value=\"corner\">Corner</MenuItem>\n            <MenuItem value=\"side\">Side</MenuItem>\n            <MenuItem value=\"quarter\">Quarter</MenuItem>\n            <MenuItem value=\"boundary\">Boundary</MenuItem>\n          </Select>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.numberBackground}\n                onChange={(e) => {\n                  this.setStyle(\"numberBackground\", e.target.checked);\n                }}\n              />\n            }\n            label=\"Background\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.multiDigit}\n                onChange={(e) => {\n                  this.setStyle(\"multiDigit\", e.target.checked);\n                }}\n              />\n            }\n            label=\"Multi digit\"\n          />\n        </FormControl>\n      </Box>\n    );\n  }\n\n  cageStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"cagestyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"cagestyle-label\"\n            fullWidth={true}\n            value={this.state.cageStyle}\n            onChange={(event) => this.setStyle(\"cageStyle\", event.target.value)}\n          >\n            <MenuItem value=\"dash\">Dashed</MenuItem>\n            <MenuItem value=\"edge\">Edge</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  pathStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"pathstyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"pathstyle-label\"\n            fullWidth={true}\n            value={this.state.pathStyle}\n            onChange={(event) => this.setStyle(\"pathStyle\", event.target.value)}\n          >\n            <MenuItem value=\"thin\">Line</MenuItem>\n            <MenuItem value=\"fat\">Fat Line</MenuItem>\n            <MenuItem value=\"thermo\">Thermo</MenuItem>\n            <MenuItem value=\"arrow\">Arrow</MenuItem>\n            <MenuItem value=\"arrowcircle\">Arrow with circle</MenuItem>\n            <MenuItem value=\"roundborder\">Round border</MenuItem>\n            <MenuItem value=\"border\">Border</MenuItem>\n            <MenuItem value=\"roundfill\">Round fill</MenuItem>\n            <MenuItem value=\"squarefill\">Square fill</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  timerBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Box margin=\"20px\" padding=\"10px\" boxShadow={3}>\n          <Typography align=\"center\" variant=\"h4\">\n            {new Date(this.state.seconds * 1000).toISOString().substr(11, 8)}\n          </Typography>\n          <ButtonGroup fullWidth={true} size=\"large\">\n            <Button onClick={() => this.setState({ timeStatus: true })}>\n              <PlayArrow />\n            </Button>\n            <Button onClick={() => this.setState({ timeStatus: false })}>\n              <Pause />\n            </Button>\n            <Button\n              onClick={() => this.setState({ seconds: 0, timeStatus: false })}\n            >\n              <SkipPrevious />\n            </Button>\n          </ButtonGroup>\n        </Box>\n        {this.state.description !== \"\" && (\n          <Box margin=\"20px\">\n            <TextField\n              multiline\n              variant=\"outlined\"\n              InputProps={{ readOnly: true }}\n              value={this.state.description}\n            />\n          </Box>\n        )}\n        <Box margin=\"20px\">\n          <TextField multiline variant=\"outlined\" />\n        </Box>\n      </Box>\n    );\n  }\n\n  settingLeftBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Box margin=\"30px\">\n          <Select\n            fullWidth={true}\n            value={this.state.mode}\n            onChange={(event) => this.setMode(event.target.value)}\n          >\n            <MenuItem value=\"number\">Number</MenuItem>\n            <MenuItem value=\"cage\">Cage</MenuItem>\n            <MenuItem value=\"path\">Path</MenuItem>\n            <MenuItem value=\"color\">Color</MenuItem>\n            <MenuItem value=\"edge\">Edge</MenuItem>\n          </Select>\n          {this.state.mode === \"number\" && this.numberStyleBox()}\n          {this.state.mode === \"cage\" && this.cageStyleBox()}\n          {this.state.mode === \"path\" && this.pathStyleBox()}\n        </Box>\n        <Box margin=\"30px\">\n          <ButtonGroup\n            fullWidth={true}\n            size=\"large\"\n            variant=\"contained\"\n            orientation=\"vertical\"\n          >\n            <Button onClick={this.generateUrl}>Generate URL</Button>\n          </ButtonGroup>\n        </Box>\n        <Box margin=\"30px\">\n          <Select\n            fullWidth={true}\n            value={this.state.settingsMode}\n            onChange={(event) =>\n              this.setState({ settingsMode: event.target.value })\n            }\n          >\n            <MenuItem value=\"size\">Size</MenuItem>\n            <MenuItem value=\"margins\">Margins</MenuItem>\n            <MenuItem value=\"grid\">Grid</MenuItem>\n            <MenuItem value=\"description\">Description</MenuItem>\n          </Select>\n        </Box>\n        {this.state.settingsMode === \"size\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"cellSize\", \"Cell size\", 32, 96, 5, true)}\n            {this.sizeSlider(\"width\", \"Width\", 3, 30)}\n            {this.sizeSlider(\"height\", \"Height\", 3, 30)}\n          </Box>\n        )}\n        {this.state.settingsMode === \"margins\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"left\", \"Left\")}\n            {this.sizeSlider(\"right\", \"Right\")}\n            {this.sizeSlider(\"top\", \"Top\")}\n            {this.sizeSlider(\"bottom\", \"Bottom\")}\n          </Box>\n        )}\n        {this.state.settingsMode === \"grid\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"gridDivWidth\", \"Grid divider width\")}\n            {this.sizeSlider(\"gridDivHeight\", \"Grid divider height\")}\n            <FormControl fullWidth={true}>\n              <InputLabel id=\"gridstyle-label\">Style</InputLabel>\n              <Select\n                labelId=\"gridstyle-label\"\n                fullWidth={true}\n                value={this.state.gridStyle}\n                onChange={(event) =>\n                  this.setGridState(\"gridStyle\", event.target.value)\n                }\n              >\n                <MenuItem value=\"lines\">Lines</MenuItem>\n                <MenuItem value=\"dash\">Dashed</MenuItem>\n                <MenuItem value=\"dots\">Dots</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl fullWidth={true}>\n              <FormLabel>Diagonals</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  fullWidth={true}\n                  control={\n                    <Switch\n                      checked={this.state.gridLeftDiagonal}\n                      onChange={(e) => {\n                        this.setGridState(\"gridLeftDiagonal\", e.target.checked);\n                      }}\n                    />\n                  }\n                  label=\"Left\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      labelId=\"rightdiagonal-label\"\n                      fullWidth={true}\n                      checked={this.state.gridRightDiagonal}\n                      onChange={(e) => {\n                        this.setGridState(\n                          \"gridRightDiagonal\",\n                          e.target.checked\n                        );\n                      }}\n                    />\n                  }\n                  label=\"Right\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Box>\n        )}\n        {this.state.settingsMode === \"description\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            <TextField\n              multiline\n              rows={8}\n              value={this.state.description}\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n          </Box>\n        )}\n      </Box>\n    );\n  }\n\n  handleChange = (event, newValue) => {\n    this.setState({ [event.target.parentNode.id]: newValue });\n  };\n\n  setGrid = () => {\n    DrawRender(code, this.canvasRef.current, this.state);\n    DrawSetMode(this.state);\n  };\n\n  setSymbolPage = (event) => {\n    this.setState({ symbolPage: event.target.value }, () => {\n      if (+this.state.symbolPage > 0)\n        for (let i = 0; i < 9; ++i) {\n          DrawSymbol(\n            this.symbolRef[i].current,\n            this.state.symbolPage,\n            i + 1,\n            30\n          );\n        }\n    });\n    DrawSetSymbolPage(+event.target.value);\n  };\n\n  setGridState = (state, value) => {\n    this.setState({ [state]: value }, () => {\n      DrawRender(code, this.canvasRef.current, this.state);\n      DrawSetMode(this.state);\n    });\n  };\n\n  sizeSlider(type, label, min = 0, max = 10, step = 1, marks = false) {\n    return (\n      <Box>\n        <Typography>\n          {label}: {this.state[type]}\n        </Typography>\n        <Slider\n          value={this.state[type]}\n          min={min}\n          max={max}\n          step={step}\n          marks={marks}\n          id={type}\n          onChange={this.handleChange}\n          onChangeCommitted={this.setGrid}\n        />\n      </Box>\n    );\n  }\n\n  colorGrid(num) {\n    return DrawColors.slice(0, num).map((color, index) => (\n      <Grid key={index} item xs={4}>\n        <Button variant=\"outlined\" onClick={() => DrawSetColor(index)}>\n          <div\n            style={{\n              border: \"1px solid black\",\n              background: color,\n              width: \"30px\",\n              height: \"30px\",\n            }}\n          />\n        </Button>\n      </Grid>\n    ));\n  }\n\n  check = () => {\n    let r = DrawCheck();\n    let status = r[0];\n    let msg = r[1];\n    if (status)\n      this.setState({ timeStatus: false });\n    alert(msg);\n  }\n\n  renderSolveMode() {\n    let buttons = [\n      [\"normal\", \"Normal\"],\n      /*\n      [\"edgecross\", \"Edge+cross\"],\n      [\"centerline\", \"Center line\"],\n      */\n      [\"center\", \"Center\"],\n      [\"corner\", \"Corner\"],\n      [\"color\", \"Color\"],\n    ];\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        {this.timerBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              {buttons.map((b) => (\n                <Button\n                  id={\"button\" + b[0]}\n                  key={b[0]}\n                  color={this.state.mode === b[0] ? \"primary\" : \"default\"}\n                  onClick={() => this.setMode(b[0])}\n                >\n                  {b[1]}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawReset}>Reset</Button>\n              <Button onClick={this.check}>Check</Button>\n              <Button onClick={DrawUndo}>Undo</Button>\n              <Button onClick={DrawDelete}>Delete</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <Grid container>\n              {this.state.mode === \"color\" && this.colorGrid(9)}\n              {this.state.mode !== \"color\" &&\n                [...Array(9).keys()].map((index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => DrawSetNumber(index + 1)}\n                    >\n                      <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n                    </Button>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  colorSelect() {\n    return DrawColors.map((color, index) => (\n      <Grid key={index} item xs={4}>\n        <Button\n          variant={this.state.color === index ? \"contained\" : \"outlined\"}\n          onClick={() => {\n            this.setState({ color: index });\n            DrawSetColor(index);\n          }}\n        >\n          <div\n            style={{\n              border: \"1px solid black\",\n              background: color,\n              width: \"30px\",\n              height: \"30px\",\n            }}\n          />\n        </Button>\n      </Grid>\n    ));\n  }\n\n  pageSelect() {\n    const pages = [\"Numbers\", \"Circles\", \"Arrows\", \"Arrows 2\", \"Misc\"];\n\n    return (\n      <FormControl fullWidth={true}>\n        <Select\n          fullWidth={true}\n          value={this.state.symbolPage}\n          onChange={this.setSymbolPage}\n        >\n          {pages.map((p, i) => (\n            <MenuItem key={p} value={i}>\n              {p}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n\n  symbolGrid() {\n    return [...Array(9).keys()].map((index) => (\n      <Grid key={index} item xs={4}>\n        <Button variant=\"outlined\" onClick={() => DrawSetNumber(index + 1)}>\n          {+this.state.symbolPage === 0 && (\n            <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n          )}\n          {+this.state.symbolPage > 0 && <div ref={this.symbolRef[index]} />}\n        </Button>\n      </Grid>\n    ));\n  }\n\n  settingRight() {\n    return (\n      <Grid container>\n        {this.state.mode !== \"color\" && this.colorSelect()}\n        {this.state.mode === \"color\" && this.colorGrid()}\n        {this.state.mode === \"number\" && this.pageSelect()}\n        {this.state.mode === \"number\" && this.symbolGrid()}\n      </Grid>\n    );\n  }\n\n  renderSetMode() {\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        <UrlDialog\n          text={this.state.dialogText}\n          open={this.state.dialogOpen}\n          onClose={() => this.setState({ dialogOpen: false })}\n        />\n        {this.settingLeftBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawReset}>Reset</Button>\n              <Button onClick={DrawUndo}>Undo</Button>\n              <Button onClick={DrawDelete}>Delete</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">{this.settingRight()}</Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  render() {\n    return this.state.solveMode ? this.renderSolveMode() : this.renderSetMode();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}