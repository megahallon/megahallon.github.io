{"version":3,"sources":["cage.js","arrow.js","path.js","symbols.js","draw.js","App.js","serviceWorker.js","index.js"],"names":["DrawCage","ctx","cells","_style","color","split","style","size","width","getLineWidth","_size","corner_offset","cell_size","cs","get_cage","x","y","find","e","DrawColorPremul","corner_pos","corner_ext_pos","lines","each_cell","m","up","down","left","right","ul","ur","dl","dr","l","add_line","start","end","push","Line","points","dash","strokeWidth","stroke","slice","length","cont","add","concat","drawDashCage","corner","lineCap","ocont","drawEdgeCage","Arrow","config","arrowLength","context","this","beginPath","moveTo","n","lineTo","p0x","p0y","dx","dy","Math","sqrt","a","atan2","a1","PI","a2","al","cos","sin","strokeShape","Thermo","arc","center","p","DrawPath","radius","DrawColors","start_px","map","px","objs","roundLine","flat","lineJoin","squareLine","newLine","thermo","line","closed","fill","w","line1","line2","arrow","bulb","Circle","underlay2","scene","draw","DrawSymbol","container","str","_color","bg","cx","cy","page","substr","symbol","text","destroy","symboltext","min","sym","obj","meas","Text","fontSize","listening","measureSize","position","height","copt","offset","offset2","aopt","pointerLength","pointerWidth","Star","innerRadius","outerRadius","numPoints","o","Group","Rect","rect","bgrect","c","symbolcolor","symbolbg","grid_w","grid_h","main_w","main_h","grid_left","grid_top","grid_bottom","grid_right","grid_div_width","grid_div_height","grid_style","grid_left_diagonal","grid_right_diagonal","hover_offset","symbol_page","multi_digit","number_bg","cursor_visible","sol_text_color","Util","colorToRGBA","r","g","b","current_color","current_mode","current_rmode","current_style","solve_mode","matrix","stuff","edges","drag","drag_toggle","drag_button","undo_stack","redo_stack","current","outer","underlay","shift","cursor","boundary","grid_lines","RectHolder","undefined","TextHolder","_text","t","setSymbol","normal","symcont","bsize","DrawSymbolElement","element","num","stage","Stage","layer","Layer","saveState","state","s","r_color","cross","edge","centerline","edgecross","forEach","i","lock","saveUndo","loadState","get","setCell","drawCross","drawEdge","drawEdgeCross","drawCenterLine","_setCell","pos","mode","newtext","main_grid","lock_type","bindex","r_color_set","console","log","indexOf","lock_cell","DrawSetNumber","number","count","each_mark","DrawSetColor","color_index","mark","fillEnabled","last_toggle_state","set","eo","new_edge","x1","y1","btype2","edgeToggle","cp","bw","bwidth","bh","bheight","cline","centerLineToggle","last_toggle","last_move","unmark","boundary_mousedown","event","mark_boundary","mousedown","evt","stopPropagation","type","button","hasCross","hasEdgeCross","mouseup","last","DrawSetMode","numberBackground","multiDigit","cageStyle","pathStyle","edgeStyle","numberStyle","btype","on","edgeMousemove","edgeMouseup","setBoundary","f","load_grid","base64","pack","Uint8Array","from","atob","charCodeAt","unpack","pako","inflate","data","msgpack","decode","version","alert","unserialize_grid","grid","unserialize","k","_s","serialize","meta","out","desc","DrawDelete","findLastIndex","splice","DrawUndo","pop","DrawRedo","render","wrapper","margin","stage_w","stage_h","gridlayer","overlay","xp","yp","r_inner","corner_size","co","bc","addBoundary","type2","h","Array","isArray","textcont","qsize","qc","ew","eh","bsize2","addBoundaries","mousemove","inner_mousemove","dots","thin","fat","diagonal","dsize","addGrid","DrawRender","code","solveMode","cellSize","top","bottom","gridDivWidth","gridDivHeight","gridStyle","gridLeftDiagonal","gridRightDiagonal","load","window","addEventListener","target","tagName","key","preventDefault","includes","startsWith","keydown","keyup","window_mousedown","contextmenu","query","location","search","urlParams","URLSearchParams","ColorGrid","props","index","Grid","item","xs","Button","variant","onClick","border","background","Timer","useState","seconds","setSeconds","useEffect","id","setInterval","active","clearInterval","Box","padding","boxShadow","Typography","align","Date","toISOString","ButtonGroup","fullWidth","onStart","PlayArrow","onStop","Pause","SkipPrevious","ResetButton","confirm","useConfirm","description","then","setState","timeStatus","catch","SymbolSelect","setPage","symbolRef","useRef","DrawSetSymbolPage","FormControl","Select","value","onChange","MenuItem","keys","ref","ColorSelect","setColor","UrlDialog","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","focus","App","handleKeyDown","cycle_modes","setMode","document","getElementById","setStyle","generateUrl","url","coded","encode","packed","deflate","btoa","String","fromCharCode","origin","encodeURIComponent","DrawGenerateUrl","solveSudoku","solveEdge","solveCenterLine","dialogText","dialogOpen","setGridState","setGrid","check","range","rows","columns","boxes","missing","floor","isEqual","sort","DrawCheck","status","msg","canvasRef","React","createRef","settingsMode","symbolPage","DrawGetMetaData","removeEventListener","interval","InputLabel","shrink","labelId","FormControlLabel","control","Switch","checked","label","minWidth","TextField","multiline","InputProps","readOnly","numberStyleBox","cageStyleBox","pathStyleBox","edgeStyleBox","sizeSlider","FormLabel","FormGroup","newValue","DrawUpdateGrid","max","step","marks","Slider","handleChange","onChangeCommitted","buttons","display","flexDirection","timerBox","maxWidth","orientation","settingLeftBox","settingRight","renderSolveMode","renderSetMode","Component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f44a71aa.chunk.js","sourcesContent":["import { Line } from \"konva\";\r\nimport { DrawColorPremul } from \"./draw\";\r\n\r\nexport function DrawCage(ctx, cells, _style, color) {\r\n  let [style, size] = _style.split(\":\");\r\n  let width = ctx.getLineWidth(size);\r\n  if (style === \"dash\") return drawDashCage(ctx, cells, width, color);\r\n  if (style === \"edge\") return drawEdgeCage(ctx, cells, width, color);\r\n}\r\n\r\nfunction drawDashCage(ctx, cells, _size, color) {\r\n  let size = 2; //ctx.cell_size / 32;\r\n  let corner_offset = ctx.cell_size * 0.08;\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n  color = DrawColorPremul(color);\r\n\r\n  const corner_pos = [\r\n    [corner_offset, corner_offset],\r\n    [cs - corner_offset, corner_offset],\r\n    [cs - corner_offset, cs - corner_offset],\r\n    [corner_offset, cs - corner_offset],\r\n  ];\r\n\r\n  const corner_ext_pos = [\r\n    [0, corner_offset],\r\n    [corner_offset, 0],\r\n    [cs - corner_offset, 0],\r\n    [cs, corner_offset],\r\n    [cs, cs - corner_offset],\r\n    [cs - corner_offset, cs],\r\n    [corner_offset, cs],\r\n    [0, cs - corner_offset],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let ul = get_cage(x - 1, y - 1);\r\n    let ur = get_cage(x + 1, y - 1);\r\n    let dl = get_cage(x - 1, y + 1);\r\n    let dr = get_cage(x + 1, y + 1);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({\r\n          points: [...start, ...end],\r\n          dash: [ctx.cell_size / 20],\r\n          strokeWidth: size,\r\n          stroke: color,\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner_pos[0];\r\n      let end = corner_pos[3];\r\n      if (up) {\r\n        start = corner_ext_pos[1].slice(0);\r\n        start[1] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[6].slice(0);\r\n        end[1] += !dl ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner_pos[1];\r\n      let end = corner_pos[2];\r\n      if (up) {\r\n        start = corner_ext_pos[2].slice(0);\r\n        start[1] -= !ur ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[5].slice(0);\r\n        end[1] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner_pos[0];\r\n      let end = corner_pos[1];\r\n      if (left) {\r\n        start = corner_ext_pos[0].slice(0);\r\n        start[0] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[3].slice(0);\r\n        end[0] += !ur ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner_pos[3];\r\n      let end = corner_pos[2];\r\n      if (left) {\r\n        start = corner_ext_pos[7].slice(0);\r\n        start[0] -= !dl ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[4].slice(0);\r\n        end[0] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (l.length > 0) m.cont.add(...l);\r\n    lines = lines.concat(l);\r\n  });\r\n  return lines;\r\n}\r\n\r\nfunction drawEdgeCage(ctx, cells, size, color) {\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n  color = DrawColorPremul(color);\r\n\r\n  const corner = [\r\n    [0, 0],\r\n    [cs, 0],\r\n    [cs, cs],\r\n    [0, cs],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line({\r\n          points: [...start, ...end],\r\n          strokeWidth: size,\r\n          stroke: color,\r\n          lineCap: \"round\",\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner[0];\r\n      let end = corner[3];\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner[1];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner[0];\r\n      let end = corner[1];\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner[3];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (l.length > 0) m.ocont.add(...l);\r\n    lines.push(...l);\r\n  });\r\n  return lines;\r\n}\r\n","import { Line } from \"konva\";\r\n\r\nexport default class Arrow extends Line {\r\n  constructor(config) {\r\n    super(config);\r\n    this.arrowLength = config.arrowLength;\r\n  }\r\n\r\n  _sceneFunc(context) {\r\n    let points = this.points();\r\n    let length = points.length;\r\n    context.beginPath();\r\n    context.moveTo(points[0], points[1]);\r\n    for (let n = 2; n < length; n += 2) {\r\n      context.lineTo(points[n], points[n + 1]);\r\n    }\r\n    let p0x = points[points.length - 2];\r\n    let p0y = points[points.length - 1];\r\n    let p1x = points[points.length - 4];\r\n    let p1y = points[points.length - 3];\r\n    let dx = p1x - p0x;\r\n    let dy = p1y - p0y;\r\n    let dl = Math.sqrt(dx ** 2 + dy ** 2);\r\n    if (dl > 0) {\r\n      let a = Math.atan2(dy, dx);\r\n      let a1 = a + Math.PI / 4;\r\n      let a2 = a - Math.PI / 4;\r\n      let al = this.arrowLength;\r\n      context.moveTo(p0x + al * Math.cos(a1), p0y + al * Math.sin(a1));\r\n      context.lineTo(p0x, p0y);\r\n      context.lineTo(p0x + al * Math.cos(a2), p0y + al * Math.sin(a2));\r\n    }\r\n    context.strokeShape(this);\r\n  }\r\n}\r\n","import { Circle, Line } from \"konva\";\r\nimport { DrawColors } from \"./draw\";\r\nimport Arrow from \"./arrow\";\r\n\r\nclass Thermo extends Line {\r\n  _sceneFunc(context) {\r\n    let points = this.points();\r\n    let length = points.length;\r\n    context.beginPath();\r\n    context.moveTo(points[0], points[1]);\r\n    context.arc(points[0], points[1], this.strokeWidth() * 0.8, 0, 2 * Math.PI, true);\r\n    context.moveTo(points[0], points[1]);\r\n    for (let n = 2; n < length; n += 2) {\r\n      context.lineTo(points[n], points[n + 1]);\r\n    }\r\n    context.strokeShape(this);\r\n  }\r\n}\r\n\r\nfunction center(cell_size, p) {\r\n  return [p[0] * cell_size + cell_size / 2, p[1] * cell_size + cell_size / 2];\r\n}\r\n\r\nexport function DrawPath(ctx, cells, style, color) {\r\n  let cell_size = ctx.cell_size;\r\n  let radius = ctx.radius * cell_size;\r\n  let strokeWidth = ctx.getLineWidth(\"medium\");\r\n\r\n  color = DrawColors[color];\r\n\r\n  let start_px = center(cell_size, cells[0]);\r\n  let points = cells.map((p) => {\r\n    let px = center(cell_size, p);\r\n    return [px[0], px[1]];\r\n  });\r\n  if (points.length === 1) points.push(points[points.length - 1]);\r\n  points = points.flat();\r\n  let objs = [];\r\n  let roundLine = {\r\n    points: points,\r\n    stroke: color,\r\n    lineCap: \"round\",\r\n    lineJoin: \"round\",\r\n  };\r\n  let squareLine = {\r\n    points: points,\r\n    stroke: color,\r\n    lineCap: \"square\",\r\n    lineJoin: \"miter\",\r\n  };\r\n  let newLine = (width) => new Line({\r\n    ...roundLine,\r\n    strokeWidth: width,\r\n  });\r\n\r\n  if (style === \"thermo\") {\r\n    let thermo = new Thermo({\r\n      ...roundLine,\r\n      strokeWidth: cell_size * 0.3,\r\n    });\r\n    objs.push(thermo);\r\n  } else if (style === \"polygon\") {\r\n    let line = new Line({\r\n      ...roundLine,\r\n      strokeWidth: strokeWidth,\r\n      stroke: color,\r\n      closed: true,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"polygonfill\") {\r\n    let line = new Line({\r\n      ...roundLine,\r\n      strokeWidth: strokeWidth,\r\n      fill: color,\r\n      closed: true,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"thin\") {\r\n    let line = newLine(ctx.getLineWidth(\"thin\"));\r\n    objs.push(line);\r\n  } else if (style === \"medium\") {\r\n    let line = newLine(ctx.getLineWidth(\"medium\"));\r\n    objs.push(line);\r\n  } else if (style === \"fat\") {\r\n    let line = newLine(ctx.getLineWidth(\"fat\"));\r\n    objs.push(line);\r\n  } else if (style === \"roundborder\") {\r\n    let w = cell_size * ctx.radius * 2 + ctx.getLineWidth(\"medium\");\r\n    let line1 = newLine(w);\r\n    let line2 = new Line({\r\n      ...roundLine,\r\n      strokeWidth: w - ctx.getLineWidth(\"medium\") * 2,\r\n      stroke: \"white\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"border\") {\r\n    // TODO only allow 90 degree angles\r\n    let line1 = new Line({\r\n      ...squareLine,\r\n      strokeWidth: cell_size * 0.8,\r\n    });\r\n    let line2 = new Line({\r\n      ...squareLine,\r\n      strokeWidth: cell_size * 0.67,\r\n      stroke: \"white\",\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"roundfill\") {\r\n    let line = newLine(cell_size * ctx.radius * 2);\r\n    objs.push(line);\r\n  } else if (style === \"squarefill\") {\r\n    let line = new Line({\r\n      ...squareLine,\r\n      strokeWidth: cell_size * 0.8,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"arrowcircle\" || style === \"arrow\") {\r\n    let arrow = new Arrow({\r\n      points: points,\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      lineCap: \"butt\",\r\n      lineJoin: \"miter\",\r\n      arrowLength: cell_size * 0.3\r\n    });\r\n    objs.push(arrow);\r\n    if (style === \"arrowcircle\") {\r\n      let bulb = new Circle({\r\n        x: start_px[0],\r\n        y: start_px[1],\r\n        radius: radius,\r\n        fill: \"white\",\r\n        strokeWidth: strokeWidth,\r\n        stroke: color,\r\n      });\r\n      objs.push(bulb);\r\n    }\r\n  }\r\n\r\n  ctx.underlay2.add(...objs);\r\n  ctx.scene.draw();\r\n\r\n  return objs;\r\n}\r\n","//import Arrow from \"./arrow\";\r\nimport { Circle, Star, Rect, Group, Text, Line } from \"konva\";\r\nimport { DrawColorPremul } from \"./draw\";\r\n\r\nimport Arrow from \"./arrow\";\r\n\r\nexport function DrawSymbol(ctx, container, str, _color, _size, bg) {\r\n  let page = +str.substr(1, 1);\r\n  let symbol = +str.substr(2, 1);\r\n  let color = DrawColorPremul(_color);\r\n  let cx;\r\n  let cy;\r\n  let size;\r\n\r\n  if (str === \"\") {\r\n    if (container.text) {\r\n      container.text.text(str);\r\n    }\r\n    if (container.symbol) {\r\n      container.symbol.destroy();\r\n      container.symbol = null;\r\n      container.symboltext = \"\";\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (typeof _size === \"object\") {\r\n    cx = _size[0] / 2;\r\n    cy = _size[1] / 2;\r\n    size = Math.min(..._size);\r\n  } else {\r\n    size = _size;\r\n    cx = size / 2;\r\n    cy = size / 2;\r\n  }\r\n\r\n  let radius = ctx.radius * size;\r\n  let strokeWidth = ctx.getLineWidth(\"medium\", size);\r\n  let sym;\r\n\r\n  if (str[0] !== \"#\") page = 0;\r\n\r\n  if (page === 0) {\r\n    if (container.text) {\r\n      container.text.text(str);\r\n      container.text.obj.fill(color);\r\n      return;\r\n    }\r\n    else {\r\n      sym = new Text({\r\n        text: str,\r\n        fontSize: size,\r\n        fill: color,\r\n        listening: false,\r\n      });\r\n      let meas = sym.measureSize(str);\r\n      sym.position({\r\n        x: cx - meas.width / 2,\r\n        y: cy - meas.height / 2,\r\n      });\r\n    }\r\n  }\r\n  if (page === 1) {\r\n    let copt = {\r\n      x: cx,\r\n      y: cy,\r\n      radius: radius,\r\n      strokeWidth: strokeWidth,\r\n      listening: false,\r\n    };\r\n    if (symbol === 1) {\r\n      // circle fill\r\n      sym = new Circle({\r\n        ...copt,\r\n        fill: color,\r\n        stroke: \"black\",\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      // circle outline\r\n      sym = new Circle({\r\n        ...copt,\r\n        fill: \"white\",\r\n        stroke: color,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // dash circle fill\r\n      sym = new Circle({\r\n        ...copt,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      // dash circle outline\r\n      sym = new Circle({\r\n        ...copt,\r\n        fill: \"white\",\r\n        stroke: color,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      // dash circle outline\r\n      sym = new Circle({\r\n        ...copt,\r\n        fill: color,\r\n        strokeWidth: 0,\r\n      });\r\n    }\r\n  }\r\n  if (page === 2) {\r\n    // Little killer style arrows\r\n    let offset = size * 0.05;\r\n    let offset2 = size * 0.15;\r\n    let aopt = {\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      fill: color,\r\n      pointerLength: size * 0.3,\r\n      pointerWidth: size * 0.3,\r\n      arrowLength: size * 0.3,\r\n      listening: false\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [offset, offset, size - cx - offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, size - cx - offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, -cy + offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: cy,\r\n        points: [0, 0, -cx + offset, size - cy - offset],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: offset2,\r\n        y: cy,\r\n        points: [0, 0, size - offset2 * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: size - offset2,\r\n        y: cy,\r\n        points: [0, 0, -(size - offset2 * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: offset2,\r\n        points: [0, 0, 0, size - offset2 * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: cx,\r\n        y: size - offset2,\r\n        points: [0, 0, 0, -(size - offset2 * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 3) {\r\n    // Yajilin style arrows\r\n    let offset = size * 0.2;\r\n    let aopt = {\r\n      stroke: color,\r\n      fill: color,\r\n      strokeWidth: size * 0.03,\r\n      pointerLength: size * 0.1,\r\n      pointerWidth: size * 0.1,\r\n      arrowLength: size * 0.1,\r\n      listening: false,\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow({\r\n        x: size - offset,\r\n        y: size - offset,\r\n        points: [0, 0, -(size - offset * 2), 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, size - offset * 2, 0],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: size - offset,\r\n        points: [0, 0, 0, -(size - offset * 2)],\r\n        ...aopt,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow({\r\n        x: offset,\r\n        y: offset,\r\n        points: [0, 0, 0, size - offset * 2],\r\n        ...aopt,\r\n      });\r\n    }\r\n  }\r\n  if (page === 4) {\r\n    if (symbol === 1) {\r\n      sym = new Star({\r\n        x: cx,\r\n        y: cy,\r\n        innerRadius: size * 0.2,\r\n        outerRadius: size * 0.4,\r\n        numPoints: 5,\r\n        fill: color,\r\n        stroke: \"black\",\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        points: [o, o, size - o, size / 2, o, size - o, o, o],\r\n        fill: color,\r\n        closed: true,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // Kakuro box\r\n      sym = new Group();\r\n      sym.add(new Rect({ width: size, height: size, fill: color }));\r\n      sym.add(\r\n        new Line({\r\n          points: [0, 0, size, size],\r\n          stroke: \"white\",\r\n          strokeWidth: strokeWidth,\r\n        })\r\n      );\r\n    }\r\n    if (symbol === 4) {\r\n      // Cross\r\n      let o = size * 0.1;\r\n      sym = new Group();\r\n      sym.add(\r\n        new Line({\r\n          x: cx - size / 2,\r\n          y: cy - size / 2,\r\n          points: [o, o, size - o, size - o],\r\n          stroke: color,\r\n          strokeWidth: strokeWidth,\r\n          listening: false,\r\n        })\r\n      );\r\n      sym.add(\r\n        new Line({\r\n          x: cx - size / 2,\r\n          y: cy - size / 2,\r\n          points: [o, size - o, size - o, o],\r\n          stroke: color,\r\n          strokeWidth: strokeWidth,\r\n          listening: false,\r\n        })\r\n      );\r\n    }\r\n    if (symbol === 5) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [o, o, size - o, size / 2, o, size - o],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [size - o, o, o, size / 2, size - o, size - o],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [o, o, size / 2, size - o, size - o, o],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      let o = size * 0.1;\r\n      sym = new Line({\r\n        x: cx - size / 2,\r\n        y: cy - size / 2,\r\n        points: [o, size - o, size / 2, o, size - o, size - o],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      });\r\n    }\r\n  }\r\n  if (page === 5) {\r\n    let o = size * 0.1;\r\n    let rect = {\r\n      x: o,\r\n      y: o,\r\n      width: size - o * 2,\r\n      height: size - o * 2,\r\n      listening: false\r\n    };\r\n    if (symbol === 1) {\r\n      sym = new Rect({...rect,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: strokeWidth,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Rect({...rect,\r\n        fill: null,\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Rect({...rect,\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: strokeWidth,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Rect({...rect,\r\n        fill: null,\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        dash: [4],\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Rect({...rect,\r\n        fill: color,\r\n        strokeWidth: 0,\r\n      });\r\n    }\r\n  }\r\n  if (page === 6) {\r\n    let o = size * 0.1;\r\n    if (symbol === 1) {\r\n      sym = new Line({\r\n        x: cx,\r\n        y: o,\r\n        points: [0, 0, 0, size - o * 2],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Line({\r\n        x: o,\r\n        y: cy,\r\n        points: [0, 0, size - o * 2, 0],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Group();\r\n      sym.add(new Line({\r\n        x: o,\r\n        y: cy,\r\n        points: [0, 0, size - o * 2, 0],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      }));\r\n      sym.add(new Line({\r\n        x: cx,\r\n        y: o,\r\n        points: [0, 0, 0, size - o * 2],\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        listening: false,\r\n      }));\r\n    }\r\n  }\r\n  if (sym) {\r\n    if (container.symbol) {\r\n      container.symbol.destroy();\r\n    }\r\n    if (bg) {\r\n      let bgrect = new Rect({\r\n        width: size,\r\n        height: size,\r\n        fill: \"white\",\r\n        listening: false,\r\n      });\r\n      let c = new Group();\r\n      c.add(bgrect, sym);\r\n      container.symbol = c;\r\n      container.add(c);\r\n    } else {\r\n      container.symbol = sym;\r\n      container.add(sym);\r\n    }\r\n    container.symboltext = str;\r\n    container.symbolcolor = _color;\r\n    container.symbolbg = bg;\r\n  }\r\n}\r\n","import { Stage, Layer, Text, Rect, Group, Line, Circle, Util } from \"konva\";\nimport { DrawCage } from \"./cage\";\nimport { DrawPath } from \"./path\";\nimport { DrawSymbol } from \"./symbols\";\nimport pako from \"pako\";\nimport msgpack from \"msgpack-lite\";\nimport { isEqual, range, findLastIndex, last } from \"lodash\";\n\nlet ctx = {};\nlet cell_size = 0;\nlet grid_w = null;\nlet grid_h = null;\nlet main_w = null;\nlet main_h = null;\nlet grid_left = 0;\nlet grid_top = 0;\nlet grid_bottom = 0;\nlet grid_right = 0;\nlet grid_div_width = 0;\nlet grid_div_height = 0;\nlet grid_style = \"normal\";\nlet grid_left_diagonal = false;\nlet grid_right_diagonal = false;\nlet hover_offset = 0;\nlet symbol_page = 0;\nlet multi_digit = false;\nlet number_bg = false;\nlet cursor_visible = true;\n\n// Factors for line and circle radius on commoon elements\nconst thin_grid_line = 0.01;\nconst medium_grid_line = 0.07;\nconst fat_grid_line = 0.2;\nconst radius = 0.4;\n\nconst type_path = 1;\nconst type_cage = 2;\n\nconst lock_normal = 1;\nconst lock_color = 2;\nconst lock_boundary = 3;\n\nconst b_corner = 1;\nconst b_side = 2;\nconst b_quarter = 3;\nconst b_boundary = 4;\nconst b_edge = 5;\nconst b_bigboundary = 6;\n\nconst b_left = 1;\nconst b_top = 2;\nconst b_bottom = 3;\nconst b_right = 4;\n\nconst sol_text_color = \"rgb(29, 106, 229)\";\nconst mark_color = \"rgba(247, 208, 56, 0.5)\";\nexport const DrawColors = [\n  \"rgba(0, 0, 0, 1)\",\n  \"rgba(207, 207, 207, 0.5)\",\n  \"rgba(255, 255, 255, 1)\",\n  \"rgba(163, 224, 72, 0.5)\",\n  \"rgba(210, 59, 231, 0.5)\",\n  \"rgba(235, 117, 50, 0.5)\",\n  \"rgba(226, 38, 31, 0.5)\",\n  \"rgba(247, 208, 56, 0.5)\",\n  \"rgba(52, 187, 230, 0.5)\",\n  //\n  \"rgba(140, 140, 140, 0.5)\",\n  \"rgba(80, 80, 80, 0.5)\",\n  \"rgba(20, 20, 20, 0.5)\",\n];\n\nexport function DrawColorPremul(color) {\n  if (typeof color === \"number\") {\n    color = DrawColors[color];\n  }\n  // Premultiply for thermo\n  color = Util.colorToRGBA(color);\n  color.r = color.r * color.a + (1 - color.a) * 255;\n  color.g = color.g * color.a + (1 - color.a) * 255;\n  color.b = color.b * color.a + (1 - color.a) * 255;\n  color.a = 1;\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n}\n\nlet current_color = 0;\nlet current_mode = \"normal\";\nlet current_rmode = null;\nlet current_style = null;\nlet solve_mode = false;\nlet scene = null;\nlet matrix = [];\nlet stuff = [];\nlet edges = {};\nlet drag = false;\nlet drag_toggle = null;\nlet drag_button = -1;\nlet undo_stack = [];\nlet redo_stack = [];\nlet current = null;\nlet outer = null;\nlet underlay = null;\nlet shift = false;\nlet cursor = null;\nlet boundary = null;\nlet grid_lines = [];\n\nfunction reset() {\n  matrix = [];\n  stuff = [];\n  edges = {};\n  undo_stack = [];\n  redo_stack = [];\n  current = null;\n  outer = null;\n  underlay = null;\n  shift = false;\n  cursor = null;\n}\n\nexport function DrawSetSymbolPage(page) {\n  symbol_page = page;\n}\n\nclass RectHolder {\n  constructor(container, width, height) {\n    this.container = container;\n    this.width = width;\n    this.height = height;\n    this.color = null;\n    this.obj = null;\n  }\n\n  fill(color) {\n    if (color === undefined) return this.color;\n\n    this.color = color;\n    if (color === null) {\n      if (this.obj) {\n        this.obj.destroy();\n        this.obj = null;\n      }\n    } else {\n      if (this.obj === null) {\n        this.obj = new Rect({ width: this.width, height: this.height });\n        this.container.add(this.obj);\n      }\n      this.obj.fill(this.color);\n    }\n  }\n}\n\nclass TextHolder {\n  constructor(container, color, fontSize, size) {\n    this.container = container;\n    this._color = color;\n    this.fontSize = fontSize;\n    this.size = size;\n    this._text = \"\";\n    this.obj = null;\n  }\n\n  text(t) {\n    if (t === undefined) return this._text;\n\n    this._text = t;\n    if (this._text.length > 0) {\n      if (!this.obj) {\n        this.obj = new Text({\n          fill: this._color,\n          text: this._text,\n          fontSize: this.fontSize,\n          listening: false\n        });\n        this.container.add(this.obj);\n      } else this.obj.text(this._text);\n      let meas = this.obj.measureSize(this._text);\n      this.obj.position({\n        x: (this.size - meas.width) / 2,\n        y: (this.size - meas.height) / 2,\n      });\n    } else if (this.obj) {\n      this.obj.destroy();\n      this.obj = null;\n    }\n  }\n\n  color(c) {\n    if (c === undefined) return this._color;\n\n    this._color = c;\n    if (this.obj) this.obj.fill(this._color);\n  }\n}\n\nfunction setSymbol(container, str, color, _size, bg) {\n  let text;\n  let size = _size;\n  if (container.normal) {\n    if (typeof color === \"number\") color = DrawColors[color];\n    size = cell_size;\n    text = container.normal.text;\n    if (multi_digit) str = text.text() + str;\n    container = container.symcont;\n  } else if (size > 0) {\n    // Symbol page\n    color = \"gray\";\n  } else {\n    size = container.bsize;\n    if (multi_digit && str !== \"\") str = (container.symboltext || \"\") + str;\n  }\n  if (str[0] === \"#\" || !text) {\n    DrawSymbol(ctx, container, str, color, size, bg);\n  } else {\n    text.text(str);\n    text.color(color);\n  }\n}\n\nexport function DrawSymbolElement(element, page, num, size) {\n  let stage = new Stage({ container: element, width: size, height: size, listening: false });\n  let layer = new Layer({ listening: false});\n  setSymbol(layer, \"#\" + page + num, current_color, size);\n  stage.add(layer);\n  stage.draw();\n}\n\nfunction saveState() {\n  let state = [];\n  each_cell((m) => {\n    let s = { x: m.x, y: m.y };\n    if (m.normal.text.text() !== \"\") s.normal = m.normal.text.text();\n    else {\n      if (m.center.text.text() !== \"\") s.center = m.center.text.text();\n      s.corner = m.corner.map((c) => c.text.text());\n    }\n    if (m.r_color.rect.fill()) {\n      s.color = m.r_color.rect.fill();\n    }\n    if (m.cross) s.cross = true;\n    s.edge = [];\n    s.centerline = [];\n    s.edgecross = [];\n    m.boundary.forEach((b, i) => {\n      if (b.edge && !b.lock) s.edge.push(i);\n      if (b.cross) s.edgecross.push(i);\n      if (b.centerline) s.centerline.push(i);\n    });\n    state.push(s);\n  });\n  return state;\n}\n\nfunction saveUndo() {\n  let state = saveState();\n  undo_stack.push(state);\n}\n\nfunction loadState(state) {\n  state.forEach((s) => {\n    let m = get(s.x, s.y);\n    setCell([s.x, s.y], \"reset\", null, \"\", false);\n    if (s.normal) m.normal.text.text(s.normal);\n    else {\n      if (s.center) m.center.text.text(s.center);\n      if (s.corner) s.corner.forEach((c, i) => m.corner[i].text.text(c));\n    }\n    if (s.color) m.r_color.rect.fill(s.color);\n    else m.r_color.rect.fill(null);\n    if (s.cross) drawCross(s.x, s.y, true);\n    s.edge.forEach(i => drawEdge(s.x, s.y, i, true));\n    s.edgecross.forEach(i => drawEdgeCross(s.x, s.y, i, true));\n    s.centerline.forEach(i => drawCenterLine(s.x, s.y, i, true));\n  });\n}\n\nfunction _setCell(lock, pos, mode, color, newtext, bg) {\n  let x = pos[0];\n  let y = pos[1];\n  let b = null;\n  if (pos.length === 3) b = get(...pos);\n  let m = get(x, y);\n\n  if (!m.main_grid && mode !== \"normal\" && !lock && mode !== \"reset\") {\n    return;\n  }\n  if (m.lock_type === lock_normal && !lock && mode !== \"color\" && mode !== \"reset\") {\n    return;\n  }\n\n  if (mode === \"reset\") {\n    m.center.text.text(\"\");\n    if (m.lock_type !== lock_normal || lock)\n      m.normal.text.text(\"\");\n    m.corner.forEach((c) => c.text.text(\"\"));\n    m.r_color.rect.fill(null);\n    if (m.cross) {\n      m.cross.destroy();\n      m.cross = null;\n    }\n    m.boundary.forEach((b) => {\n      if (b.edge && !b.lock) {\n        b.edge.destroy();\n        b.edge = null;\n        delete edges[[x, y, b.bindex]];\n      }\n      if (b.centerline) {\n        b.centerline.destroy();\n        b.centerline = null;\n      }\n      if (b.cross) {\n        b.cross.destroy();\n        b.cross = null;\n      }\n    });\n    if (lock) {\n      m.r_color_set.rect.fill(null);\n      m.fill = -1;\n      if (m.symcont.symbol) {\n        m.symcont.symbol.destroy();\n        m.symcont.symbol = null;\n        m.symcont.symboltext = \"\";\n      }\n      m.boundary.forEach((b) => {\n        if (b.symbol) {\n          b.symbol.destroy();\n          b.symbol = null;\n          b.symboltext = \"\";\n          console.log(\"reset boundary\");\n        }\n        if (b.rect) {\n          b.rect.destroy();\n          b.rect = null;\n        }\n        if (b.edge) {\n          b.edge.destroy();\n          b.edge = null;\n          delete edges[[x, y, b.bindex]];\n        }\n        b.text.text(\"\");\n      });\n    }\n  } else if (b) {\n    setSymbol(b, newtext, color, 0, bg);\n  } else if (mode === \"normal\") {\n    if (!lock) {\n      color = sol_text_color;\n    } else {\n      m.lock_type = newtext !== \"\" ? lock_normal : 0;\n      if (newtext[0] !== \"#\") {\n        m.color = color;\n      }\n    }\n    setSymbol(m, newtext, color);\n    if (newtext[0] !== \"#\") {\n      m.center.text.text(\"\");\n      m.corner.forEach((c) => c.text.text(\"\"));\n    }\n  } else if (mode === \"center\" && m.normal.text.text() === \"\") {\n    let current = m.center.text.text();\n    let center = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          center += i;\n        }\n      }\n    }\n\n    m.center.text.text(center);\n  } else if (mode === \"corner\" && m.normal.text.text() === \"\") {\n    let current = \"\";\n    m.corner.forEach((t) => (current += t.text.text()));\n    let text = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          text += i;\n        }\n      }\n    }\n    let i = 0;\n    m.corner.forEach((c) => c.text.text(text[i++] || \"\"));\n  } else if (mode === \"color\") {\n    // white == clear\n    if (!lock) {\n      if (color === 2) {\n        m.r_color.rect.fill(null);\n      } else {\n        m.r_color.rect.fill(DrawColors[color]);\n      }\n    } else {\n      if (color === 2) {\n        m.r_color_set.rect.fill(null);\n        m.fill = null;\n      } else {\n        m.r_color_set.rect.fill(DrawColors[color]);\n        m.fill = color;\n      }\n    }\n  }\n}\n\nfunction keyup(event) {\n  if (event.key === \"Shift\") {\n    shift = false;\n  }\n}\n\nfunction setCell(pos, mode, color, newtext, bg) {\n  let lock = !solve_mode;\n  _setCell(lock, pos, mode, color, newtext, bg);\n}\n\nfunction lock_cell(pos, mode, color, newtext, bg) {\n  _setCell(true, pos, mode, color, newtext, bg);\n}\n\nexport function DrawSetNumber(number) {\n  saveUndo();\n\n  let symbol = \"\" + number;\n  if (symbol_page > 0) symbol = \"#\" + symbol_page + number;\n  if (boundary) {\n    setCell(boundary, \"boundary\", current_color, symbol, number_bg);\n  } else {\n    let count = 0;\n    let mode = current_mode;\n    each_mark((m) => ++count);\n    if (count > 1 && solve_mode && mode === \"normal\") mode = \"center\";\n    each_mark((m) => setCell([m.x, m.y], mode, current_color, symbol, false));\n  }\n  scene.draw();\n}\n\nexport function DrawSetColor(color_index) {\n  saveUndo();\n\n  current_color = color_index;\n  if (current_mode === \"color\") {\n    each_mark((m) => {\n      setCell([m.x, m.y], \"color\", color_index, null, false);\n    });\n    scene.draw();\n  }\n}\n\nfunction keydown(event) {\n  if (event.target.tagName === \"TEXTAREA\") {\n    return;\n  }\n\n  let newtext;\n  if (event.key === \"Shift\") {\n    shift = true;\n    return;\n  } else if (event.key === \"Delete\" || event.key === \"Backspace\") {\n    DrawDelete();\n    event.preventDefault();\n    return;\n  } else if (event.key >= \"0\" && event.key <= \"9\") {\n    newtext = event.key;\n    if (symbol_page > 0) newtext = \"#\" + symbol_page + newtext;\n  } else if (event.key === \"u\" && solve_mode) {\n    DrawUndo();\n    return;\n  } else if (\n    event.key.length === 1 &&\n    (\"?!()+-*%&/:-\".includes(event.key) ||\n      (event.key >= \"a\" && event.key <= \"z\") ||\n      (event.key >= \"A\" && event.key <= \"Z\")) &&\n    !solve_mode\n  ) {\n    newtext = event.key;\n  } else if (event.key.startsWith(\"Arrow\") && cursor) {\n    let c = cursor.slice();\n    if (!shift) unmark();\n    cursor = c;\n    if (event.key === \"ArrowUp\") cursor[1] -= 1;\n    if (cursor[1] < 0) cursor[1] = grid_h - 1;\n    if (event.key === \"ArrowDown\") cursor[1] += 1;\n    if (cursor[1] >= grid_h) cursor[1] = 0;\n    if (event.key === \"ArrowLeft\") cursor[0] -= 1;\n    if (cursor[0] < 0) cursor[0] = grid_w - 1;\n    if (event.key === \"ArrowRight\") cursor[0] += 1;\n    if (cursor[0] >= grid_w) cursor[0] = 0;\n    mark(cursor[0], cursor[1]);\n    scene.draw();\n    return;\n  } else {\n    return;\n  }\n\n  saveUndo();\n\n  if (boundary) {\n    setCell(boundary, \"boundary\", current_color, newtext, number_bg);\n  } else {\n    let count = 0;\n    each_mark((m) => ++count);\n\n    let mode = current_mode;\n    if (count > 1 && solve_mode && mode === \"normal\") mode = \"center\";\n    each_mark((m) => {\n      if (current_mode === \"color\") {\n        let color = +newtext - 1;\n        if (color >= 0 && color <= 9)\n          setCell([m.x, m.y], current_mode, color, null, false);\n      } else setCell([m.x, m.y], mode, current_color, newtext, false);\n    });\n  }\n  scene.draw();\n}\n\nfunction get(x, y, b) {\n  if (x < 0 || y < 0 || x >= grid_w || y >= grid_h) {\n    return null;\n  }\n  let m = matrix[y][x];\n  if (b >= 0) return m.boundary[b];\n  return m;\n}\n\nfunction mark(x, y) {\n  let m = get(x, y);\n  cursor = [x, y];\n  if (!m.mark) {\n    m.mark = true;\n    m.rect.fill(mark_color);\n    m.rect.fillEnabled(cursor_visible);\n    return true;\n  }\n  return false;\n}\n\nfunction inner_mousemove(event, x, y) {\n  if (!drag) return;\n  if (drag_button !== 0) return;\n\n  if (current_mode === \"path\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = DrawPath(ctx, current.cells, current_style, current_color);\n    scene.draw();\n  }\n}\n\nlet last_toggle_state = null;\n\nfunction getLineWidth(style, size) {\n  if (size === undefined)\n    size = cell_size;\n  switch (style) {\n    case \"thin\":\n      return size * thin_grid_line;\n    case \"medium\":\n      return size * medium_grid_line;\n    default:\n      return size * fat_grid_line;\n  }\n}\n\nfunction drawEdge(x, y, i, set, style, color, lock = false) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let c = solve_mode ? sol_text_color : DrawColors[current_color];\n  let width = solve_mode ? getLineWidth(\"fat\") : getLineWidth(style);\n  let eo = cell_size * 0.15;\n\n  if (!set) {\n    if (b.edge) {\n      b.edge.destroy();\n      b.edge = null;\n      delete edges[[x, y, i]];\n    }\n  }\n  else if (!b.edge) {\n    let edge;\n    let new_edge = (x, y, x1, y1) => {\n      edge = new Line({\n        x: x,\n        y: y,\n        points: [0, 0, x1, y1],\n        strokeWidth: width,\n        stroke: c,\n        lineCap: \"round\",\n        listening: false,\n      });\n    };\n    switch (b.btype2) {\n      case b_left:\n      case b_right:\n        new_edge(eo, -eo, 0, cell_size);\n        break;\n      case b_top:\n      case b_bottom:\n        new_edge(-eo, eo, cell_size, 0);\n        break;\n      default:\n        break;\n    }\n    edges[[x, y, i]] = [style, color];\n    b.edge = edge;\n    b.lock = lock;\n    b.add(edge);\n  }\n}\n\nfunction edgeToggle(x, y, i, style, color, lock) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let set;\n\n  if (b.lock && solve_mode) return;\n\n  if (last_toggle_state === null) {\n    if (b.edge) last_toggle_state = true;\n    else last_toggle_state = false;\n  }\n  set = !last_toggle_state;\n\n  drawEdge(x, y, i, set, style, color, lock);\n}\n\nfunction drawCenterLine(x, y, i, set, style, color) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let c = solve_mode ? sol_text_color : DrawColors[current_color];\n  if (color !== undefined) c = DrawColors[color];\n  let width = getLineWidth(style);\n\n  if (!set) {\n    if (b.centerline) {\n      b.centerline.destroy();\n      b.centerline = null;\n    }\n  } else if (!b.centerline) {\n    let points;\n    let cp = cell_size / 2;\n    let bw = b.bwidth / 2;\n    let bh = b.bheight / 2;\n    if (b.btype2 === b_top || b.btype2 === b_bottom) {\n      if (b.btype2 === b_top && m.y <= grid_top) return;\n      if (b.btype2 === b_bottom && m.y >= grid_top + grid_h - 1) return;\n      points = [0, -cp, 0, cp];\n    } else {\n      if (b.btype2 === b_left && m.x <= grid_left) return;\n      if (b.btype2 === b_right && m.x >= grid_left + grid_w - 1) return;\n      points = [-cp, 0, cp, 0];\n    }\n\n    let cline = new Line({\n      x: bw,\n      y: bh,\n      points: points,\n      strokeWidth: width,\n      stroke: c,\n      lineCap: \"round\",\n      listening: false,\n    });\n    b.centerline = cline;\n    b.add(cline);\n  }\n}\n\nfunction centerLineToggle(x, y, i, style, color) {\n  let m = get(x, y);\n  let b = m.boundary[i];\n  let set;\n\n  if (last_toggle_state === null) {\n    if (b.centerline) last_toggle_state = true;\n    else last_toggle_state = false;\n  }\n  set = !last_toggle_state;\n\n  drawCenterLine(x, y, i, set, style, color);\n}\n\nlet last_toggle = { x: -1, y: -1, i: -1 };\n\nfunction hasCross(x, y) {\n  let m = get(x, y);\n  return !!m.cross;\n}\n\nfunction drawCross(x, y, set) {\n  let m = get(x, y);\n  if (set) {\n    if (!m.cross) {\n      m.cross = new Group();\n      m.add(m.cross);\n      DrawSymbol(ctx, m.cross, \"#44\", sol_text_color, cell_size);\n    }\n  } else {\n    if (m.cross) {\n      m.cross.destroy();\n      m.cross = null;\n    }\n  }\n}\n\nfunction hasEdgeCross(x, y, i) {\n  let b = get(x, y).boundary[i];\n  return !!b.cross;\n}\n\nfunction drawEdgeCross(x, y, i, set) {\n  let b = get(x, y).boundary[i];\n  if (set) {\n    if (!b.cross) {\n      b.cross = new Group();\n      b.add(b.cross);\n      DrawSymbol(ctx, b.cross, \"#44\", sol_text_color, [b.bwidth, b.bheight]);\n    }\n  } else if (b.cross) {\n    b.cross.destroy();\n    b.cross = null;\n  }\n}\n\nfunction edgeMousemove(event, x, y, i) {\n  if (!drag) return;\n  if (last_toggle.x === x && last_toggle.y === y && last_toggle.i === i) return;\n  last_toggle = { x: x, y: y, i: i };\n\n  saveUndo();\n\n  if (drag_button === 2 && current_rmode === \"edgecross\") {\n    if (i !== undefined) {\n      drawEdgeCross(x, y, i, drag_toggle);\n      scene.draw();\n    }\n    return;\n  }\n\n  unmark();\n\n  if (current_mode === \"edge\") {\n    edgeToggle(x, y, i, current_style, current_color);\n  } else {\n    centerLineToggle(x, y, i, current_style, current_color);\n  }\n  scene.draw();\n}\n\nlet last_move = [-1, -1];\n\nfunction mousemove(event, x, y) {\n  if (x === last_move[0] && y === last_move[1]) return;\n\n  last_move[0] = x;\n  last_move[1] = y;\n\n  if (!drag) return;\n\n  if (drag_button === 2 && current_rmode === \"edgecross\") return;\n\n  if (drag_button === 2 && current_rmode === \"cross\") {\n    drawCross(x, y, drag_toggle);\n    scene.draw();\n    return;\n  }\n\n  if (\n    current_mode === \"path\" ||\n    current_mode === \"edge\" ||\n    current_mode === \"centerline\"\n  ) {\n  } else if (current_mode === \"cage\") {\n    if (current.cells.length > 0) {\n      let l = last(current.cells);\n      if (l[0] === x && l[1] === y) return;\n    }\n    if (current.objs) current.objs.forEach((o) => o.destroy());\n    current.cells.push([x, y]);\n    current.objs = DrawCage(ctx, current.cells, current_style, current_color);\n  } else {\n    mark(x, y);\n  }\n\n  scene.draw();\n}\n\nfunction mark_boundary(x, y, i) {\n  unmark();\n\n  let b = get(x, y).boundary[i];\n  if (!b.rect) {\n    b.rect = new Rect({\n      width: b.bwidth,\n      height: b.bheight,\n      fillEnabled: false,\n    });\n    b.add(b.rect);\n  }\n  b.rect.stroke(\"red\");\n  b.rect.strokeWidth(1);\n  boundary = [x, y, i];\n}\n\nfunction unmark() {\n  if (boundary) {\n    let r = get(...boundary).rect;\n    if (r) r.strokeWidth(0);\n    boundary = null;\n  }\n  each_mark((m) => {\n    m.rect.fill(null);\n    m.mark = false;\n  });\n  cursor = null;\n}\n\nfunction boundary_mousedown(event, x, y, i) {\n  mark_boundary(x, y, i);\n  scene.draw();\n}\n\nfunction contextmenu(event) {\n  if (event.target.tagName === \"CANVAS\") event.preventDefault();\n}\n\nfunction window_mousedown(event) {\n  if (event.target.tagName === \"HTML\") {\n    unmark();\n    scene.draw();\n  }\n  last_move = [-1, -1];\n}\n\nfunction mousedown(event, x, y, i) {\n  event.evt.stopPropagation();\n\n  drag = true;\n  if (event.evt.type === \"touchstart\") drag_button = 0;\n  else drag_button = event.evt.button;\n\n  if (event.evt.button === 2 && current_rmode === \"edgecross\") {\n    if (i !== undefined) {\n      drag_toggle = !hasEdgeCross(x, y, i);\n      saveUndo();\n      drawEdgeCross(x, y, i, drag_toggle);\n      scene.draw();\n    }\n    return;\n  }\n\n  if (event.evt.button === 2 && current_rmode === \"cross\") {\n    drag_toggle = !hasCross(x, y);\n    saveUndo();\n    drawCross(x, y, drag_toggle);\n    scene.draw();\n    return;\n  }\n\n  if (!shift) {\n    unmark();\n  }\n\n  if (boundary) {\n    get(...boundary).strokeWidth(0);\n    boundary = null;\n  }\n\n  if (current_mode === \"path\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = DrawPath(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"cage\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = DrawCage(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"edge\" && i !== undefined) {\n    saveUndo();\n    edgeToggle(x, y, i, current_style, current_color);\n  } else if (current_mode === \"centerline\" && i !== undefined) {\n    saveUndo();\n    centerLineToggle(x, y, i, current_style, current_color);\n  } else {\n    mark(x, y);\n  }\n\n  scene.draw();\n}\n\nfunction edgeMouseup(event, x, y, i) {\n  if (event.evt.button === 2) return;\n  if (last_toggle_state === null && current_mode === \"edge\") {\n    edgeToggle(x, y, i, current_style, current_color);\n  }\n}\n\nfunction mouseup() {\n  drag = false;\n  last_toggle_state = null;\n\n  if (current_mode === \"path\" && current) {\n    stuff.push({\n      type: type_path,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    cursor = last(current.cells);\n    current = null;\n  } else if (current_mode === \"cage\" && current) {\n    stuff.push({\n      type: type_cage,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    cursor = last(current.cells);\n    current = null;\n  }\n}\n\nexport function DrawSetMode(state) {\n  current_mode = state.mode;\n  number_bg = state.numberBackground;\n  multi_digit = state.multiDigit;\n\n  each_cell((m) =>\n    m.boundary.forEach((b) => {\n      if (b.rect) {\n        b.rect.destroy();\n        b.rect = null;\n      }\n    })\n  );\n\n  cursor_visible = false;\n\n  if (state.mode === \"cage\") current_style = state.cageStyle;\n  else if (state.mode === \"path\") current_style = state.pathStyle;\n  else if (state.mode === \"edge\") current_style = state.edgeStyle;\n  else if (state.mode === \"edgecross\") {\n    current_mode = \"edge\";\n    current_style = \"fat\";\n    current_color = undefined;\n    current_rmode = \"edgecross\";\n  } else if (state.mode === \"centerline\") {\n    current_mode = \"centerline\";\n    current_style = \"fat\";\n    current_color = undefined;\n    current_rmode = \"edgecross\";\n  } else if (\n    (state.mode === \"normal\" || state.mode === \"number\") &&\n    state.numberStyle === \"normal\"\n  ) {\n    current_mode = \"normal\";\n    cursor_visible = true;\n  } else cursor_visible = true;\n\n  if (!cursor_visible) unmark();\n\n  if (current_mode === \"edge\" || current_mode === \"centerline\") {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === b_edge) {\n          if (!b.rect) {\n            b.rect = new Rect({\n              width: b.bwidth,\n              height: b.bheight,\n              fill: null,\n              fillEnabled: false,\n            });\n            b.add(b.rect);\n          }\n          b.rect.fillEnabled(true);\n          b.rect.on(\"mousemove touchmove\", (event) =>\n            edgeMousemove(event, m.x, m.y, i)\n          );\n          b.rect.on(\"mousedown tap touchstart\", (event) =>\n            mousedown(event, m.x, m.y, i)\n          );\n          b.rect.on(\"mouseup touchend\", (event) =>\n            edgeMouseup(event, m.x, m.y, i)\n          );\n        }\n      })\n    );\n  }\n\n  let setBoundary = (type) => {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        if (b.btype === type) {\n          if (!b.rect) {\n            b.rect = new Rect({\n              width: b.bwidth,\n              height: b.bheight,\n              fill: null,\n              fillEnabled: true,\n            });\n            b.add(b.rect);\n          }\n          b.rect.on(\"mousedown touchstart tap\", (event) =>\n            boundary_mousedown(event, m.x, m.y, i)\n          );\n        }\n      })\n    );\n  };\n\n  if (state.mode === \"number\" && state.numberStyle === \"corner\") {\n    current_mode = \"boundary\";\n    setBoundary(b_corner);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"side\") {\n    current_mode = \"boundary\";\n    setBoundary(b_side);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"quarter\") {\n    current_mode = \"boundary\";\n    setBoundary(b_quarter);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"boundary\") {\n    current_mode = \"boundary\";\n    setBoundary(b_boundary);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"bigboundary\") {\n    current_mode = \"boundary\";\n    setBoundary(b_bigboundary);\n  }\n  scene.draw();\n}\n\nfunction each_cell(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      f(m);\n    }\n  }\n}\n\nfunction each_mark(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      if (m.mark) f(m);\n    }\n  }\n}\n\nfunction unserialize_grid(s) {\n  [\n    cell_size,\n    grid_w,\n    grid_h,\n    grid_left,\n    grid_right,\n    grid_top,\n    grid_bottom,\n    grid_div_width,\n    grid_div_height,\n    grid_style,\n    grid_left_diagonal,\n    grid_right_diagonal,\n  ] = s;\n}\n\nfunction load_grid(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  if (data.version !== 1) {\n    alert(\"Bad version\");\n  }\n\n  unserialize_grid(data.grid);\n}\n\nfunction unserialize(data) {\n  stuff = [];\n  each_cell((m) => {\n    m.lock_type = 0;\n    m.normal.text.text(\"\");\n    m.center.text.text(\"\");\n  });\n\n  if (data.edges) {\n    for (const k in data.edges) {\n      let pos = k.split(\",\").map((x) => +x);\n      let [style, color] = data.edges[k];\n      edgeToggle(...pos, style, color, true);\n    }\n  }\n\n  data.cells.forEach((c) => {\n    let [pos, type, text, color, bg] = c;\n    if (type === lock_normal) {\n      lock_cell(pos, \"normal\", color, text, false);\n    } else if (type === lock_color) {\n      lock_cell(pos, \"color\", color, text, false);\n    } else if (type === lock_boundary) {\n      lock_cell(pos, \"boundary\", color, text, bg);\n    }\n  });\n  data.stuff.forEach((_s) => {\n    let s = { type: _s[0], style: _s[1], color: _s[2], cells: _s[3] };\n    if (s.type === type_path) {\n      s.objs = DrawPath(ctx, s.cells, s.style, s.color);\n    } else if (s.type === type_cage) {\n      s.objs = DrawCage(ctx, s.cells, s.style, s.color);\n    }\n    stuff.push(s);\n  });\n}\n\nfunction load(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  unserialize(data);\n}\n\nexport function DrawGetMetaData(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  return data.desc;\n}\n\nfunction serialize(meta) {\n  let out = {\n    version: 1,\n    grid: [\n      cell_size,\n      grid_w,\n      grid_h,\n      grid_left,\n      grid_right,\n      grid_top,\n      grid_bottom,\n      grid_div_width,\n      grid_div_height,\n      grid_style,\n      grid_left_diagonal,\n      grid_right_diagonal,\n    ],\n    cells: [],\n    stuff: stuff.map((e) => [e.type, e.style, e.color, e.cells]),\n    edges: edges,\n    desc: meta,\n  };\n\n  each_cell((m) => {\n    let pos = [m.x, m.y];\n    if (m.lock_type === lock_normal) {\n      if (m.normal.text.text() !== \"\")\n        out.cells.push([pos, m.lock_type, m.normal.text.text(), m.color]);\n      if (m.symcont.symboltext !== \"\" && m.symcont.symboltext !== undefined)\n        out.cells.push([\n          pos,\n          m.lock_type,\n          m.symcont.symboltext,\n          m.symcont.symbolcolor,\n          m.symcont.symbolbg\n        ]);\n    }\n    if (m.fill >= 0) {\n      out.cells.push([pos, lock_color, null, m.fill]);\n    }\n    m.boundary.forEach((b, i) => {\n      if (b.symboltext)\n        out.cells.push([\n          [m.x, m.y, i],\n          lock_boundary,\n          b.symboltext,\n          b.symbolcolor,\n          b.symbolbg,\n        ]);\n        if (b.text.text())\n          out.cells.push([\n            [m.x, m.y, i],\n            lock_boundary,\n            b.text.text(),\n            b.text.obj.fill(),\n          ]);\n    });\n  });\n\n  console.log(out);\n  return out;\n}\n\nexport function DrawGenerateUrl(meta) {\n  let out = serialize(meta);\n  let coded = msgpack.encode(out);\n  let packed = pako.deflate(coded);\n  let base64 = btoa(String.fromCharCode(...packed));\n  return window.location.origin + \"/?s=1&p=\" + encodeURIComponent(base64);\n}\n\nexport function DrawCheck() {\n  if (main_w !== 9 || main_h !== 9) return [false, \"Not sudoku\"];\n  let r = range(1, 10);\n  let rows = Array.from({ length: 9 }, () => []);\n  let columns = Array.from({ length: 9 }, () => []);\n  let boxes = Array.from({ length: 9 }, () => []);\n  let missing = null;\n  each_cell((m) => {\n    let x = m.x - grid_left;\n    let y = m.y - grid_top;\n    let n = +m.normal.text.text();\n    if (x < 0 || y < 0) return;\n    if (n === 0 && missing === null) {\n      missing = `Missing entry at ${x + 1}, ${y + 1}`;\n    }\n    columns[x].push(n);\n    rows[y].push(n);\n    let b = Math.floor(x / 3) + Math.floor(y / 3) * 3;\n    boxes[b].push(n);\n  });\n  if (missing) {\n    return [false, missing];\n  }\n  for (let i = 0; i < 9; ++i) {\n    if (!isEqual(rows[i].sort(), r)) {\n      return [false, `Bad row ${i + 1}`];\n    }\n    if (!isEqual(columns[i].sort(), r)) {\n      return [false, `Bad column ${i + 1}`];\n    }\n    if (!isEqual(boxes[i].sort(), r)) {\n      return [false, `Bad box ${i + 1}`];\n    }\n  }\n  return [true, \"OK\"];\n}\n\nexport function DrawDelete() {\n  if (!solve_mode && cursor) {\n    let i = findLastIndex(stuff, (s) =>\n      s.cells.find((c) => c[0] === cursor[0] && c[1] === cursor[1])\n    );\n    if (i === -1) {\n      each_mark((m) => {\n        if (i !== -1) return;\n        i = findLastIndex(stuff, (s) =>\n          s.cells.find((c) => c[0] === m.x && c[1] === m.y)\n        );\n      });\n    }\n    if (i !== -1) {\n      stuff[i].objs.forEach((o) => o.destroy());\n      stuff.splice(i, 1);\n      scene.draw();\n      return;\n    }\n  }\n\n  saveUndo();\n\n  if (boundary) {\n    setCell(boundary, \"boundary\", null, \"\", false);\n  } else {\n    each_mark((m) => {\n      setCell([m.x, m.y], \"reset\", null, \"\", false);\n    });\n  }\n\n  scene.draw();\n}\n\nexport function DrawReset() {\n  each_cell((m) => {\n    setCell([m.x, m.y], \"reset\", null, \"\", false);\n  });\n\n  if (!solve_mode) {\n    stuff.forEach((s) => s.objs.forEach((o) => o.destroy()));\n    stuff = [];\n  }\n\n  undo_stack = [];\n  redo_stack = [];\n\n  scene.draw();\n}\n\nexport function DrawUndo() {\n  if (undo_stack.length === 0) return;\n  let state = saveState();\n  redo_stack.push(state);\n  state = undo_stack.pop();\n  loadState(state);\n  scene.draw();\n}\n\nexport function DrawRedo() {\n  if (redo_stack.length === 0) return;\n  let state = saveState();\n  undo_stack.push(state);\n  state = redo_stack.pop();\n  loadState(state);\n  scene.draw();\n}\n\nfunction addGrid(layer) {\n  let dash = grid_style === \"dash\" ? [4] : null;\n  let dots = grid_style === \"dots\";\n\n  let thin = {\n    stroke: \"black\",\n    strokeWidth: cell_size * thin_grid_line,\n    dash: dash,\n  };\n  let fat = {\n    stroke: \"black\",\n    strokeWidth: cell_size * medium_grid_line,\n  };\n\n  grid_lines.forEach((g) => g.destroy());\n\n  main_w = grid_w - grid_left - grid_right;\n  main_h = grid_h - grid_top - grid_bottom;\n\n  grid_lines = [];\n  if (grid_left_diagonal || grid_right_diagonal) {\n    let diagonal = {\n      stroke: DrawColors[1],\n      strokeWidth: cell_size * medium_grid_line,\n    };\n    if (grid_left_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            grid_left * cell_size,\n            grid_top * cell_size,\n            (grid_left + main_w) * cell_size,\n            (grid_top + main_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n    if (grid_right_diagonal)\n      grid_lines.push(\n        new Line({\n          points: [\n            (grid_w - grid_right) * cell_size,\n            grid_top * cell_size,\n            grid_left * cell_size,\n            (grid_top + main_h) * cell_size,\n          ],\n          ...diagonal,\n        })\n      );\n  }\n\n  if (dots) {\n    let dsize = cell_size * 0.07;\n    for (let y = 0; y <= main_h; ++y) {\n      for (let x = 0; x <= main_w; ++x) {\n        grid_lines.push(\n          new Circle({\n            x: (grid_left + x) * cell_size,\n            y: (grid_top + y) * cell_size,\n            radius: dsize,\n            fill: \"black\",\n          })\n        );\n      }\n    }\n  } else {\n    for (let x = 0; x <= main_w; ++x) {\n      grid_lines.push(\n        new Line({\n          x: (grid_left + x) * cell_size,\n          y: grid_top * cell_size,\n          points: [0, 0, 0, main_h * cell_size],\n          ...(x % grid_div_width === 0 ? fat : thin),\n        })\n      );\n    }\n    for (let y = 0; y <= main_h; ++y) {\n      grid_lines.push(\n        new Line({\n          x: grid_left * cell_size,\n          y: (grid_top + y) * cell_size,\n          points: [0, 0, main_w * cell_size, 0],\n          ...(y % grid_div_height === 0 ? fat : thin),\n        })\n      );\n    }\n\n    grid_lines.push(\n      new Rect({\n        x: grid_left * cell_size,\n        y: grid_top * cell_size,\n        width: main_w * cell_size,\n        height: main_h * cell_size,\n        stroke: \"black\",\n        strokeWidth: cell_size * medium_grid_line,\n        fillEnabled: false,\n      })\n    );\n  }\n\n  layer.add(...grid_lines);\n}\n\nfunction addBoundaries(x, y, boundary) {\n  const bc = cell_size * 0.04;\n  const cs = cell_size;\n  const bsize = cell_size * 0.4;\n\n  const addBoundary = (x, y, size, type, type2) => {\n    let b = new Group({ x: x, y: y });\n    let w = size;\n    let h = size;\n    let s = size;\n    if (Array.isArray(size)) {\n      w = size[0];\n      h = size[1];\n      s = Math.min(size[0], size[1]);\n    }\n    b.rect = null;\n    b.bindex = boundary.length;\n    b.bsize = s;\n    b.bwidth = w;\n    b.bheight = h;\n    b.btype = type;\n    b.btype2 = type2;\n\n    b.textcont = new Group({x: x, y: y});\n    b.text = new TextHolder(b.textcont, \"black\", s * 0.7, s);\n    boundary.push(b);\n  };\n\n  // Corners\n  addBoundary(bc, bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, bc, bsize, b_corner);\n  addBoundary(bc, cs - bsize - bc, bsize, b_corner);\n  addBoundary(cs - bsize - bc, cs - bsize - bc, bsize, b_corner);\n\n  // Sides\n  addBoundary(bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, bc, bsize, b_side);\n  addBoundary(cs - bsize - bc, cs / 2 - bsize / 2, bsize, b_side);\n  addBoundary(cs / 2 - bsize / 2, cs - bsize - bc, bsize, b_side);\n\n  // Quarter\n  const qsize = cell_size * 0.4;\n  const qc = cell_size * 0.05;\n  addBoundary(qc, qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, qc, qsize, b_quarter);\n  addBoundary(qc, cs - qsize - qc, qsize, b_quarter);\n  addBoundary(cs - qsize - qc, cs - qsize - qc, qsize, b_quarter);\n\n  // Edges\n  const ew = cell_size * 0.3;\n  const eh = cell_size * 0.7;\n  const eo = ew / 2;\n  addBoundary(-eo, eo, [ew, eh], b_edge, b_left);\n  addBoundary(eo, -eo, [eh, ew], b_edge, b_top);\n  if (x === grid_w - grid_right - 1)\n    addBoundary(cs - eo, eo, [ew, eh], b_edge, b_right);\n  if (y === grid_h - grid_bottom - 1)\n    addBoundary(eo, cs - eo, [eh, ew], b_edge, b_bottom);\n\n  // Boundaries\n  addBoundary(-bsize / 2, -bsize / 2, bsize, b_boundary);\n  addBoundary(-bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  addBoundary(cs / 2 - bsize / 2, -bsize / 2, bsize, b_boundary);\n  if (x === grid_w - grid_right - 1) {\n    addBoundary(cs - bsize / 2, -bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs / 2 - bsize / 2, bsize, b_boundary);\n  }\n  if (y === grid_h - grid_bottom - 1) {\n    addBoundary(-bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs / 2 - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n    addBoundary(cs - bsize / 2, cs - bsize / 2, bsize, b_boundary);\n  }\n\n  const bsize2 = cs * 0.8;\n  addBoundary(-bsize2 / 2, -bsize2 / 2, bsize2, b_bigboundary);\n  addBoundary(-bsize2 / 2, cs / 2 - bsize2 / 2, bsize2, b_bigboundary);\n  addBoundary(cs / 2 - bsize2 / 2, -bsize2 / 2, bsize2, b_bigboundary);\n  if (x === grid_w - grid_right - 1) {\n    addBoundary(cs - bsize2 / 2, -bsize2 / 2, bsize2, b_bigboundary);\n    addBoundary(cs - bsize2 / 2, cs / 2 - bsize2 / 2, bsize2, b_bigboundary);\n  }\n  if (y === grid_h - grid_bottom - 1) {\n    addBoundary(-bsize / 2, cs - bsize / 2, bsize, b_bigboundary);\n    addBoundary(cs / 2 - bsize / 2, cs - bsize / 2, bsize, b_bigboundary);\n    addBoundary(cs - bsize / 2, cs - bsize / 2, bsize, b_bigboundary);\n  }\n}\n\nfunction render(wrapper) {\n  hover_offset = cell_size * 0.2;\n\n  const margin = cell_size * 0.2;\n  const stage_w = grid_w * cell_size + margin * 2;\n  const stage_h = grid_h * cell_size + margin * 2;\n  let stage = new Stage({\n    container: wrapper,\n    width: stage_w,\n    height: stage_h,\n  });\n  scene = new Layer();\n  stage.add(scene);\n\n  reset();\n\n  outer = new Group({ x: margin, y: margin });\n  scene.add(outer);\n\n  underlay = new Group();\n  let underlay2 = new Group();\n  let gridlayer = new Group();\n  let overlay = new Group();\n  outer.add(underlay2, underlay, gridlayer, overlay);\n\n  for (let y = 0; y < grid_h; ++y) {\n    matrix[y] = [];\n  }\n  let cs = cell_size;\n\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let xp = x * cs;\n      let yp = y * cs;\n      let main_grid =\n        x >= grid_left &&\n        y >= grid_top &&\n        x < grid_w - grid_right &&\n        y < grid_h - grid_bottom;\n      let ocont = new Group({ x: xp, y: yp });\n      let cont = new Group({ x: xp, y: yp });\n      let symcont = new Group();\n      let r = new Rect({\n        width: cs,\n        height: cs,\n        strokeWidth: 0,\n        fillEnabled: true,\n      });\n      let r_color = new Group();\n      r_color.rect = new RectHolder(r_color, cs, cs);\n      let r_color_set = new Group();\n      r_color_set.rect = new RectHolder(r_color_set, cs, cs);\n      let r_inner = new Rect({\n        x: hover_offset,\n        y: hover_offset,\n        width: cs - hover_offset * 2,\n        height: cs - hover_offset * 2,\n        fillEnabled: true,\n      });\n      let normal = new Group();\n      normal.text = new TextHolder(normal, sol_text_color, cs * 0.7, cs);\n      let center = new Group();\n      center.text = new TextHolder(center, sol_text_color, cs * 0.3, cs);\n      let corner_pos = [];\n      let corner_size = cell_size * 0.25;\n      let co = cell_size * 0.03;\n      corner_pos[0] = [co, co];\n      corner_pos[1] = [cs - corner_size - co, co];\n      corner_pos[2] = [cs - corner_size - co, cs - corner_size - co];\n      corner_pos[3] = [co, cs - corner_size - co];\n      corner_pos[4] = [(cs - corner_size) / 2, co];\n      corner_pos[5] = [cs - corner_size - co, (cs - corner_size) / 2];\n      corner_pos[6] = [(cs - corner_size) / 2, cs - corner_size - co];\n      corner_pos[7] = [co, (cs - corner_size) / 2];\n\n      let corner = [];\n      let boundary = [];\n      if (main_grid) {\n        corner_pos.forEach((p, i) => {\n          let g = new Group({ x: p[0], y: p[1] });\n          g.text = new TextHolder(g, sol_text_color, corner_size, corner_size);\n          corner.push(g);\n        });\n      }\n      addBoundaries(x, y, boundary);\n\n      cont.add(r_color_set, r_color, r, r_inner, symcont, normal, center);\n      cont.on(\"mousedown touchstart tap\", (event) => mousedown(event, x, y));\n      cont.on(\"mousemove touchmove\", (event) => mousemove(event, x, y));\n      r_inner.on(\"mousemove touchmove\", (event) =>\n        inner_mousemove(event, x, y)\n      );\n      matrix[y][x] = {\n        x: x,\n        y: y,\n        pos: [xp, yp],\n        symcont: symcont,\n        cont: cont,\n        ocont: ocont,\n        rect: r,\n        boundary: boundary,\n        fill: -1,\n        color: null,\n        normal: normal,\n        center: center,\n        corner: corner,\n        corner_pos: corner_pos,\n        r_color_set: r_color_set,\n        r_color: r_color,\n        main_grid: main_grid,\n      };\n      underlay.add(cont);\n      if (main_grid) ocont.add(...corner);\n      ocont.add(...boundary);\n      ocont.add(...boundary.map(b => b.textcont));\n      overlay.add(ocont);\n    }\n  }\n\n  addGrid(gridlayer);\n\n  ctx.scene = scene;\n  ctx.underlay = underlay;\n  ctx.underlay2 = underlay2;\n  ctx.overlay = overlay;\n  ctx.cell_size = cell_size;\n  ctx.each_cell = each_cell;\n  ctx.getLineWidth = getLineWidth;\n  ctx.get = get;\n  ctx.radius = radius;\n}\n\nexport function DrawUpdateGrid(wrapper, state) {\n  let s = serialize();\n  if (\"cellSize\" in state) cell_size = state.cellSize;\n  if (\"gridDivWidth\" in state) grid_div_width = state.gridDivWidth;\n  if (\"gridDivHeight\" in state) grid_div_height = state.gridDivHeight;\n  if (\"gridStyle\" in state) grid_style = state.gridStyle;\n  if (\"gridLeftDiagonal\" in state) grid_left_diagonal = state.gridLeftDiagonal;\n  if (\"gridRightDiagonal\" in state)\n    grid_right_diagonal = state.gridRightDiagonal;\n  render(wrapper);\n  unserialize(s);\n  scene.draw();\n}\n\nexport function DrawRender(code, wrapper, state) {\n  solve_mode = state.solveMode;\n  cell_size = state.cellSize;\n  grid_left = state.left;\n  grid_right = state.right;\n  grid_top = state.top;\n  grid_bottom = state.bottom;\n  grid_w = grid_left + state.width + grid_right;\n  grid_h = grid_top + state.height + grid_bottom;\n  grid_div_width = state.gridDivWidth;\n  grid_div_height = state.gridDivHeight;\n  grid_style = state.gridStyle;\n  grid_left_diagonal = state.gridLeftDiagonal;\n  grid_right_diagonal = state.gridRightDiagonal;\n\n  if (code) load_grid(code);\n\n  render(wrapper);\n\n  if (code) load(code);\n\n  scene.draw();\n\n  DrawSetMode(state);\n}\n\nwindow.addEventListener(\"keydown\", (event) => keydown(event));\nwindow.addEventListener(\"keyup\", (event) => keyup(event));\nwindow.addEventListener(\"mousedown\", (event) => window_mousedown(event));\nwindow.addEventListener(\"mouseup\", (event) => mouseup(event));\nwindow.addEventListener(\"touchend\", (event) => mouseup(event));\nwindow.addEventListener(\"contextmenu\", (event) => contextmenu(event));\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  DrawRender,\n  DrawSymbolElement,\n  DrawSetMode,\n  DrawUndo,\n  DrawRedo,\n  DrawDelete,\n  DrawGenerateUrl,\n  DrawSetNumber,\n  DrawSetColor,\n  DrawColors,\n  DrawGetMetaData,\n  DrawReset,\n  DrawCheck,\n  DrawSetSymbolPage,\n  DrawUpdateGrid,\n} from \"./draw\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Slider,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  InputLabel,\n  Grid,\n  TextField,\n  Switch,\n} from \"@material-ui/core\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { PlayArrow, Pause, SkipPrevious } from \"@material-ui/icons\";\n\nconst query = window.location.search;\nconst urlParams = new URLSearchParams(query);\nconst code = urlParams.get(\"p\");\nconst solveMode = urlParams.get(\"s\") === \"1\";\n\nfunction ColorGrid(props) {\n  return DrawColors.slice(0, props.num).map((color, index) => (\n    <Grid key={index} item xs={4}>\n      <Button variant=\"outlined\" onClick={() => DrawSetColor(index)}>\n        <div\n          style={{\n            border: \"1px solid black\",\n            background: color,\n            width: \"30px\",\n            height: \"30px\",\n          }}\n        />\n      </Button>\n    </Grid>\n  ));\n}\n\nfunction Timer(props) {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (props.active) {\n        setSeconds((s) => s + 1);\n      }\n    }, 1000);\n    return () => clearInterval(id);\n  }, [props.active]);\n\n  const restart = () => {\n    props.onStop();\n    setSeconds(0);\n  };\n\n  return (\n    <Box margin=\"20px\" padding=\"10px\" boxShadow={3}>\n      <Typography align=\"center\" variant=\"h4\">\n        {new Date(seconds * 1000).toISOString().substr(11, 8)}\n      </Typography>\n      <ButtonGroup fullWidth={true} size=\"large\">\n        <Button onClick={props.onStart}>\n          <PlayArrow />\n        </Button>\n        <Button onClick={props.onStop}>\n          <Pause />\n        </Button>\n        <Button onClick={restart}>\n          <SkipPrevious />\n        </Button>\n      </ButtonGroup>\n    </Box>\n  );\n}\n\nfunction ResetButton() {\n  const confirm = useConfirm();\n\n  const onClick = () => {\n    confirm({ description: \"Remove all changes in grid?\" }).then(() => {\n      DrawReset();\n      this.setState({ timeStatus: true });\n    }).catch(() => undefined);\n  };\n\n  return (\n    <Button fullWidth={true} variant=\"contained\" size=\"large\" onClick={onClick}>\n      Reset\n    </Button>\n  );\n}\n\nfunction SymbolSelect() {\n  let [page, setPage] = useState(\"0\");\n  let symbolRef = [];\n  symbolRef[0] = useRef(null);\n  symbolRef[1] = useRef(null);\n  symbolRef[2] = useRef(null);\n  symbolRef[3] = useRef(null);\n  symbolRef[4] = useRef(null);\n  symbolRef[5] = useRef(null);\n  symbolRef[6] = useRef(null);\n  symbolRef[7] = useRef(null);\n  symbolRef[8] = useRef(null);\n  symbolRef[9] = useRef(null);\n\n  const pages = [\n    \"Numbers\",\n    \"Circles\",\n    \"Arrows\",\n    \"Arrows 2\",\n    \"Misc\",\n    \"Squares\",\n    \"Lines\",\n  ];\n  const setSymbolPage = (e) => setPage(e.target.value);\n\n  useEffect(() => {\n    if (+page > 0) {\n      for (let i = 0; i < 9; ++i) {\n        DrawSymbolElement(symbolRef[i].current, page, i + 1, 30);\n      }\n    }\n    DrawSetSymbolPage(+page);\n  });\n\n  return (\n    <Box>\n      <FormControl fullWidth={true}>\n        <Select fullWidth={true} value={page} onChange={setSymbolPage}>\n          {pages.map((p, i) => (\n            <MenuItem key={p} value={i}>\n              {p}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Grid container>\n        {[...Array(9).keys()].map((index) => (\n          <Grid key={index} item xs={4}>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                DrawSetNumber(index + 1);\n              }}\n            >\n              {+page === 0 && (\n                <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n              )}\n              {+page > 0 && <div ref={symbolRef[index]} />}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nfunction ColorSelect() {\n  let [color, setColor] = useState(0);\n\n  return DrawColors.map((c, index) => (\n    <Grid key={index} item xs={4}>\n      <Button\n        variant={color === index ? \"contained\" : \"outlined\"}\n        onClick={() => {\n          setColor(index);\n          DrawSetColor(index);\n        }}\n      >\n        <div\n          style={{\n            border: \"1px solid black\",\n            background: c,\n            width: \"30px\",\n            height: \"30px\",\n          }}\n        />\n      </Button>\n    </Grid>\n  ));\n}\n\nfunction UrlDialog(props) {\n  let openInTab = () => {\n    props.onClose();\n    let w = window.open(props.text, \"_blank\");\n    w.focus();\n  };\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle>URL</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{props.text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={openInTab}>Open in tab</Button>\n        <Button color=\"primary\" onClick={props.onClose}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n\n    this.state = {\n      solveMode: solveMode,\n      settingsMode: \"size\",\n      color: 0,\n      description: \"\",\n      cellSize: 64,\n      width: 9,\n      height: 9,\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      gridDivWidth: 3,\n      gridDivHeight: 3,\n      gridStyle: \"lines\",\n      gridLeftDiagonal: false,\n      gridRightDiagonal: false,\n      mode: solveMode ? \"normal\" : \"number\",\n      numberStyle: \"normal\",\n      multiDigit: false,\n      numberBackground: false,\n      edgeStyle: \"fat\",\n      cageStyle: \"dash\",\n      pathStyle: \"arrow\",\n      dialogOpen: false,\n      dialogText: \"\",\n      timeStatus: true,\n      symbolPage: \"0\",\n      solveSudoku: true,\n      solveEdge: false,\n      solveCenterLine: false,\n    };\n  }\n\n  handleKeyDown = (event) => {\n    if (event.target.tagName === \"TEXTAREA\") return;\n\n    if (solveMode) {\n      const cycle_modes = [\"normal\", \"center\", \"corner\", \"color\"];\n      let i = \"qwer\".indexOf(event.key);\n      if (event.key.length === 1 && i !== -1) this.setMode(cycle_modes[i]);\n      else if (event.key === \" \") {\n        let i = cycle_modes.indexOf(this.state.mode);\n        i = (i + 1) % cycle_modes.length;\n        this.setMode(cycle_modes[i]);\n      }\n    }\n  };\n\n  componentDidMount() {\n    let meta = {};\n    if (code) {\n      meta = DrawGetMetaData(code);\n      if (typeof meta !== \"object\") meta = { description: meta };\n    }\n    this.setState(meta, () => {\n      DrawRender(code, this.canvasRef.current, this.state);\n    });\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    clearInterval(this.interval);\n  }\n\n  setMode = (mode) => {\n    let b = document.getElementById(\"button\" + mode);\n    if (b) b.focus();\n    this.setState({ mode: mode }, () => {\n      DrawSetMode(this.state);\n    });\n  };\n\n  setStyle = (style, value) => {\n    this.setState({ [style]: value }, () => DrawSetMode(this.state));\n  };\n\n  generateUrl = () => {\n    let meta = {\n      description: this.state.description,\n      solveSudoku: this.state.solveSudoku,\n      solveEdge: this.state.solveEdge,\n      solveCenterLine: this.state.solveCenterLine,\n    };\n    let url = DrawGenerateUrl(meta);\n    this.setState({ dialogText: url, dialogOpen: true });\n  };\n\n  numberStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"numberstyle-label\">\n            Position\n          </InputLabel>\n          <Select\n            labelId=\"numberstyle-label\"\n            fullWidth={true}\n            value={this.state.numberStyle}\n            onChange={(event) =>\n              this.setStyle(\"numberStyle\", event.target.value)\n            }\n          >\n            <MenuItem value=\"normal\">Normal</MenuItem>\n            <MenuItem value=\"corner\">Corner</MenuItem>\n            <MenuItem value=\"side\">Side</MenuItem>\n            <MenuItem value=\"quarter\">Quarter</MenuItem>\n            <MenuItem value=\"boundary\">Boundary</MenuItem>\n            <MenuItem value=\"bigboundary\">Big boundary</MenuItem>\n          </Select>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.numberBackground}\n                onChange={(e) => {\n                  this.setStyle(\"numberBackground\", e.target.checked);\n                }}\n              />\n            }\n            label=\"Background\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.multiDigit}\n                onChange={(e) => {\n                  this.setStyle(\"multiDigit\", e.target.checked);\n                }}\n              />\n            }\n            label=\"Multi digit\"\n          />\n        </FormControl>\n      </Box>\n    );\n  }\n\n  cageStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"cagestyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"cagestyle-label\"\n            fullWidth={true}\n            value={this.state.cageStyle}\n            onChange={(event) => this.setStyle(\"cageStyle\", event.target.value)}\n          >\n            <MenuItem value=\"dash\">Dashed</MenuItem>\n            <MenuItem value=\"edge:thin\">Edge thin</MenuItem>\n            <MenuItem value=\"edge:medium\">Edge medium </MenuItem>\n            <MenuItem value=\"edge:fat\">Edge fat</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  edgeStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"edgestyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"cagestyle-label\"\n            fullWidth={true}\n            value={this.state.edgeStyle}\n            onChange={(event) => this.setStyle(\"edgeStyle\", event.target.value)}\n          >\n            <MenuItem value=\"thin\">Thin</MenuItem>\n            <MenuItem value=\"medium\">Medium</MenuItem>\n            <MenuItem value=\"fat\">Fat</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  pathStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"pathstyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"pathstyle-label\"\n            fullWidth={true}\n            value={this.state.pathStyle}\n            onChange={(event) => this.setStyle(\"pathStyle\", event.target.value)}\n          >\n            <MenuItem value=\"thin\">Line</MenuItem>\n            <MenuItem value=\"medium\">Medium line</MenuItem>\n            <MenuItem value=\"fat\">Fat Line</MenuItem>\n            <MenuItem value=\"thermo\">Thermo</MenuItem>\n            <MenuItem value=\"arrow\">Arrow</MenuItem>\n            <MenuItem value=\"arrowcircle\">Arrow with circle</MenuItem>\n            <MenuItem value=\"roundborder\">Round border</MenuItem>\n            <MenuItem value=\"border\">Border</MenuItem>\n            <MenuItem value=\"roundfill\">Round fill</MenuItem>\n            <MenuItem value=\"squarefill\">Square fill</MenuItem>\n            <MenuItem value=\"polygon\">Polygon</MenuItem>\n            <MenuItem value=\"polygonfill\">Polygon fill</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  timerBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Timer\n          active={this.state.timeStatus}\n          onStart={() => this.setState({ timeStatus: true })}\n          onStop={() => this.setState({ timeStatus: false })}\n        />\n        {this.state.description !== \"\" && (\n          <Box margin=\"20px\">\n            <TextField\n              multiline\n              variant=\"outlined\"\n              InputProps={{ readOnly: true }}\n              value={this.state.description}\n            />\n          </Box>\n        )}\n        <Box margin=\"20px\">\n          <TextField multiline variant=\"outlined\" />\n        </Box>\n      </Box>\n    );\n  }\n\n  settingLeftBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Box margin=\"30px\">\n          <Typography>\n            Draw\n          </Typography>\n          <Select\n            fullWidth={true}\n            value={this.state.mode}\n            onChange={(event) => this.setMode(event.target.value)}\n          >\n            <MenuItem value=\"number\">Symbol</MenuItem>\n            <MenuItem value=\"cage\">Cage</MenuItem>\n            <MenuItem value=\"path\">Path</MenuItem>\n            <MenuItem value=\"color\">Color</MenuItem>\n            <MenuItem value=\"edge\">Edge</MenuItem>\n          </Select>\n          {this.state.mode === \"number\" && this.numberStyleBox()}\n          {this.state.mode === \"cage\" && this.cageStyleBox()}\n          {this.state.mode === \"path\" && this.pathStyleBox()}\n          {this.state.mode === \"edge\" && this.edgeStyleBox()}\n        </Box>\n        <Box margin=\"30px\">\n          <Typography>\n            Settings\n          </Typography>\n          <Select\n            fullWidth={true}\n            value={this.state.settingsMode}\n            onChange={(event) =>\n              this.setState({ settingsMode: event.target.value })\n            }\n          >\n            <MenuItem value=\"size\">Size</MenuItem>\n            <MenuItem value=\"margins\">Margins</MenuItem>\n            <MenuItem value=\"grid\">Grid</MenuItem>\n            <MenuItem value=\"description\">Description</MenuItem>\n            <MenuItem value=\"solve\">Solve</MenuItem>\n          </Select>\n        </Box>\n        {this.state.settingsMode === \"size\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"cellSize\", \"Cell size\", 32, 96, 4, true)}\n            {this.sizeSlider(\"width\", \"Width\", 3, 30)}\n            {this.sizeSlider(\"height\", \"Height\", 3, 30)}\n          </Box>\n        )}\n        {this.state.settingsMode === \"margins\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"left\", \"Left\")}\n            {this.sizeSlider(\"right\", \"Right\")}\n            {this.sizeSlider(\"top\", \"Top\")}\n            {this.sizeSlider(\"bottom\", \"Bottom\")}\n          </Box>\n        )}\n        {this.state.settingsMode === \"grid\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"gridDivWidth\", \"Grid divider width\")}\n            {this.sizeSlider(\"gridDivHeight\", \"Grid divider height\")}\n            <FormControl fullWidth={true}>\n              <InputLabel id=\"gridstyle-label\">Style</InputLabel>\n              <Select\n                labelId=\"gridstyle-label\"\n                fullWidth={true}\n                value={this.state.gridStyle}\n                onChange={(event) =>\n                  this.setGridState(\"gridStyle\", event.target.value)\n                }\n              >\n                <MenuItem value=\"lines\">Lines</MenuItem>\n                <MenuItem value=\"dash\">Dashed</MenuItem>\n                <MenuItem value=\"dots\">Dots</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl fullWidth={true}>\n              <FormLabel>Diagonals</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  fullWidth={true}\n                  control={\n                    <Switch\n                      checked={this.state.gridLeftDiagonal}\n                      onChange={(e) => {\n                        this.setGridState(\"gridLeftDiagonal\", e.target.checked);\n                      }}\n                    />\n                  }\n                  label=\"Left\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      labelId=\"rightdiagonal-label\"\n                      fullWidth={true}\n                      checked={this.state.gridRightDiagonal}\n                      onChange={(e) => {\n                        this.setGridState(\n                          \"gridRightDiagonal\",\n                          e.target.checked\n                        );\n                      }}\n                    />\n                  }\n                  label=\"Right\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Box>\n        )}\n        {this.state.settingsMode === \"description\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            <TextField\n              multiline\n              rows={8}\n              value={this.state.description}\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n          </Box>\n        )}\n        {this.state.settingsMode === \"solve\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            <FormControl fullWidth={true}>\n              <FormLabel></FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  fullWidth={true}\n                  control={\n                    <Switch\n                      checked={this.state.solveSudoku}\n                      onChange={(e) => {\n                        this.setState({ solveSudoku: e.target.checked });\n                      }}\n                    />\n                  }\n                  label=\"Sudoku\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      fullWidth={true}\n                      checked={this.state.solveEdge}\n                      onChange={(e) => {\n                        this.setState({ solveEdge: e.target.checked });\n                      }}\n                    />\n                  }\n                  label=\"Edge\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      fullWidth={true}\n                      checked={this.state.solveCenterLine}\n                      onChange={(e) => {\n                        this.setState({ solveCenterLine: e.target.checked });\n                      }}\n                    />\n                  }\n                  label=\"Center line\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n\n  handleChange(newValue, type) {\n    this.setState({ [type]: newValue });\n  }\n\n  setGrid(type) {\n    if (\n      [\n        \"cellSize\",\n        \"gridDivWidth\",\n        \"gridDivHeight\",\n        \"gridStyle\",\n        \"gridLeftDiagonal\",\n        \"gridRightDiagonal\",\n      ].includes(type)\n    )\n      DrawUpdateGrid(this.canvasRef.current, this.state);\n    else DrawRender(code, this.canvasRef.current, this.state);\n  }\n\n  setGridState = (state, value) => {\n    this.setState({ [state]: value }, () => {\n      this.setGrid(state);\n    });\n  };\n\n  sizeSlider(type, label, min = 0, max = 10, step = 1, marks = false) {\n    return (\n      <Box>\n        <Typography>\n          {label}: {this.state[type]}\n        </Typography>\n        <Slider\n          value={this.state[type]}\n          min={min}\n          max={max}\n          step={step}\n          marks={marks}\n          id={type}\n          onChange={(e, newValue) => this.handleChange(newValue, type)}\n          onChangeCommitted={() => this.setGrid(type)}\n        />\n      </Box>\n    );\n  }\n\n  check = () => {\n    let r = DrawCheck();\n    let status = r[0];\n    let msg = r[1];\n    if (status) this.setState({ timeStatus: false });\n    alert(msg);\n  };\n\n  renderSolveMode() {\n    let buttons = [];\n    if (this.state.solveSudoku)\n      buttons.push(\n        [\"normal\", \"Normal\"],\n        [\"center\", \"Center\"],\n        [\"corner\", \"Corner\"]\n      );\n    if (this.state.solveEdge) buttons.push([\"edgecross\", \"Edge\"]);\n    if (this.state.solveCenterLine) buttons.push([\"centerline\", \"Center line\"]);\n    buttons.push([\"color\", \"Color\"]);\n\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        {this.timerBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              {buttons.map((b) => (\n                <Button\n                  id={\"button\" + b[0]}\n                  key={b[0]}\n                  color={this.state.mode === b[0] ? \"primary\" : \"default\"}\n                  onClick={() => this.setMode(b[0])}\n                >\n                  {b[1]}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawUndo}>Undo</Button>\n              <Button onClick={DrawRedo}>Redo</Button>\n              <Button onClick={DrawDelete}>Delete</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={this.check}>Check</Button>\n              <ResetButton />\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <Grid container>\n              {this.state.mode === \"color\" && <ColorGrid num={9} />}\n              {[\"normal\", \"center\", \"corner\"].includes(this.state.mode) &&\n                [...Array(9).keys()].map((index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => DrawSetNumber(index + 1)}\n                    >\n                      <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n                    </Button>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  settingRight() {\n    return (\n      <Grid container>\n        {this.state.mode !== \"color\" && <ColorSelect />}\n        {this.state.mode === \"color\" && <ColorGrid />}\n        {this.state.mode === \"number\" && <SymbolSelect />}\n      </Grid>\n    );\n  }\n\n  renderSetMode() {\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        <UrlDialog\n          text={this.state.dialogText}\n          open={this.state.dialogOpen}\n          onClose={() => this.setState({ dialogOpen: false })}\n        />\n        {this.settingLeftBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawDelete}>Delete</Button>\n              <Button onClick={this.generateUrl}>Generate URL</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <ResetButton />\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">{this.settingRight()}</Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  render() {\n    return (\n      <ConfirmProvider>\n        {solveMode ? this.renderSolveMode() : this.renderSetMode()}\n      </ConfirmProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}