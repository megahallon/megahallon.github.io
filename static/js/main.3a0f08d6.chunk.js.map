{"version":3,"sources":["cage.js","arrow.js","path.js","symbols.js","draw.js","App.js","serviceWorker.js","index.js"],"names":["DashLine","ctx","setLineDash","this","options","dash","Line","draw_cage","cells","style","corner_offset","cs","cell_size","get_cage","x","y","find","e","corner_ext_pos","lines","each_cell","m","up","down","left","right","ul","ur","dl","dr","l","add_line","start","end","push","strokeWidth","stroke","corner_pos","slice","forEach","r","add","concat","draw_dash_cage","corner","draw_edge_cage","Arrow","path","p","points","last","length","last1","dx","dy","a","Math","atan2","a2","arrowAngle","PI","ax","arrow","cos","ay","sin","ax2","ay2","moveTo","lineTo","center_px","draw_path","color_index","_color","DrawColors","match","map","c","color","Color","red","alpha","green","blue","start_px","px","objs","bulb","Circle","fill","line","join","joins","miter","line1","round","line2","cap","caps","square","underlay2","scene","render","DashCircle","boundary_size","grid_w","grid_h","grid_left","grid_top","grid_bottom","grid_right","grid_div_width","grid_div_height","grid_style","grid_diagonals","hover_offset","symbol_page","current_color","current_mode","current_style","solve_mode","matrix","stuff","drag","undo_stack","current","outer","underlay","shift","cursor","boundary","grid_lines","textOptions","font","Component","cursors","pointer","centerTextOptions","cornerTextOptions","set_symbol","container","str","_size","text","size","normal","symcont","bsize","bg","sym","page","substr","symbol","cx","cy","fontSize","Text","meas","measure","position","width","offset","offset2","Star","Polygon","remove","Rectangle","Container","symboltext","symbolcolor","draw_symbol","DrawSymbol","element","num","sc","Scene","_set_cell","lock","pos","mode","newtext","b","get","undo_entry","old_normal","main_grid","lock_type","center","t","side","r_color","r_color_set","removeAllListener","i","indexOf","height","set_cell","lock_cell","DrawSetNumber","number","count","each_mark","DrawSetColor","mark","rect","unmark","boundary_mousedown","event","mark_boundary","DrawSetMode","state","solveMode","cageStyle","pathStyle","numberStyle","setBoundary","type","btype","on","f","DrawCheck","range","rows","Array","from","columns","boxes","missing","n","floor","alert","isEqual","sort","DrawDelete","findLastIndex","s","parent","splice","DrawReset","DrawUndo","u","pop","DrawRender","code","wrapper","cellSize","top","bottom","gridDivWidth","gridDivHeight","gridDashed","gridDiagonals","base64","pack","Uint8Array","atob","charCodeAt","unpack","pako","inflate","data","msgpack","decode","version","grid","load_size","wrapper_clone","cloneNode","parentNode","replaceChild","key","keyup","outer_w","outer_x","boptions","options_inner","gridlayer","overlay","xp","yp","ocont","cont","edge_right","edge_bottom","r_hover","side_pos","bc","mousedown","hover","edge","move","o","inner_hover","layer","thin","fat","frame_w","frame_h","diagonal","add_grid","_s","load","window","addEventListener","target","tagName","preventDefault","startsWith","keydown","query","location","search","url_params","URLSearchParams","UrlDialog","props","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","focus","App","handleKeyDown","cycle_modes","setMode","document","getElementById","setState","setStyle","value","generateUrl","url","description","out","desc","undefined","console","log","coded","encode","packed","deflate","btoa","String","fromCharCode","origin","encodeURIComponent","DrawGenerateUrl","dialogText","dialogOpen","handleChange","newValue","id","setGrid","setSymbolPage","symbolPage","symbolRef","children","innerHTML","setGridState","canvasRef","React","createRef","settingsMode","seconds","timeStatus","DrawGetDescription","interval","setInterval","removeEventListener","clearInterval","Box","margin","FormControl","fullWidth","InputLabel","shrink","Select","labelId","onChange","MenuItem","minWidth","padding","boxShadow","Typography","align","variant","Date","toISOString","ButtonGroup","PlayArrow","Pause","SkipPrevious","TextField","multiline","InputProps","readOnly","numberStyleBox","cageStyleBox","pathStyleBox","orientation","sizeSlider","Switch","checked","label","min","max","step","marks","Slider","onChangeCommitted","index","Grid","item","xs","border","background","display","flexDirection","timerBox","ref","maxWidth","colorGrid","keys","settingLeftBox","renderSolveMode","renderSetMode","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3a0f08d6.chunk.js","sourcesContent":["import { Line } from \"pencil.js\";\r\n\r\nclass DashLine extends Line {\r\n  setContext(ctx) {\r\n    super.setContext(ctx);\r\n    ctx.setLineDash([this.options.dash, this.options.dash]);\r\n  }\r\n}\r\n\r\nexport function draw_cage(ctx, cells, style) {\r\n  if (style === \"dash\") return draw_dash_cage(ctx, cells);\r\n  if (style === \"edge\") return draw_edge_cage(ctx, cells);\r\n}\r\n\r\nfunction draw_dash_cage(ctx, cells) {\r\n  let corner_offset = ctx.corner_offset;\r\n  let cs = ctx.cell_size;\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n\r\n  const corner_ext_pos = [\r\n    [0, corner_offset],\r\n    [corner_offset, 0],\r\n    [cs - corner_offset, 0],\r\n    [cs, corner_offset],\r\n    [cs, cs - corner_offset],\r\n    [cs - corner_offset, cs],\r\n    [corner_offset, cs],\r\n    [0, cs - corner_offset],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let ul = get_cage(x - 1, y - 1);\r\n    let ur = get_cage(x + 1, y - 1);\r\n    let dl = get_cage(x - 1, y + 1);\r\n    let dr = get_cage(x + 1, y + 1);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new DashLine(start, [[end[0] - start[0], end[1] - start[1]]], {\r\n          dash: 4,\r\n          strokeWidth: 2,\r\n          stroke: \"black\",\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = m.corner_pos[0];\r\n      let end = m.corner_pos[3];\r\n      if (up) {\r\n        start = corner_ext_pos[1].slice(0);\r\n        start[1] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[6].slice(0);\r\n        end[1] += !dl ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = m.corner_pos[1];\r\n      let end = m.corner_pos[2];\r\n      if (up) {\r\n        start = corner_ext_pos[2].slice(0);\r\n        start[1] -= !ur ? 0 : corner_offset;\r\n      }\r\n      if (down) {\r\n        end = corner_ext_pos[5].slice(0);\r\n        end[1] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = m.corner_pos[0];\r\n      let end = m.corner_pos[1];\r\n      if (left) {\r\n        start = corner_ext_pos[0].slice(0);\r\n        start[0] -= !ul ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[3].slice(0);\r\n        end[0] += !ur ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = m.corner_pos[3];\r\n      let end = m.corner_pos[2];\r\n      if (left) {\r\n        start = corner_ext_pos[7].slice(0);\r\n        start[0] -= !dl ? 0 : corner_offset;\r\n      }\r\n      if (right) {\r\n        end = corner_ext_pos[4].slice(0);\r\n        end[0] += !dr ? 0 : corner_offset;\r\n      }\r\n      add_line(start, end);\r\n    }\r\n    l.forEach((e) => m.r.add(e));\r\n    lines = lines.concat(l);\r\n  });\r\n  return lines;\r\n}\r\n\r\nfunction draw_edge_cage(ctx, cells) {\r\n  let get_cage = (x, y) => {\r\n    return cells.find((e) => e[0] === x && e[1] === y);\r\n  };\r\n\r\n  const corner = [\r\n    [0, 0],\r\n    [ctx.cell_size, 0],\r\n    [ctx.cell_size, ctx.cell_size],\r\n    [0, ctx.cell_size],\r\n  ];\r\n\r\n  let lines = [];\r\n  ctx.each_cell((m) => {\r\n    let x = m.x;\r\n    let y = m.y;\r\n    if (!get_cage(x, y)) return;\r\n    let up = get_cage(x, y - 1);\r\n    let down = get_cage(x, y + 1);\r\n    let left = get_cage(x - 1, y);\r\n    let right = get_cage(x + 1, y);\r\n    let l = [];\r\n    let add_line = (start, end) => {\r\n      l.push(\r\n        new Line(start, [[end[0] - start[0], end[1] - start[1]]], {\r\n          strokeWidth: 4,\r\n          stroke: \"black\",\r\n        })\r\n      );\r\n    };\r\n    if (!left) {\r\n      let start = corner[0];\r\n      let end = corner[3];\r\n      add_line(start, end);\r\n    }\r\n    if (!right) {\r\n      let start = corner[1];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    if (!up) {\r\n      let start = corner[0];\r\n      let end = corner[1];\r\n      add_line(start, end);\r\n    }\r\n    if (!down) {\r\n      let start = corner[3];\r\n      let end = corner[2];\r\n      add_line(start, end);\r\n    }\r\n    l.forEach((e) => m.r.add(e));\r\n    lines.push(...l);\r\n  });\r\n  return lines;\r\n}\r\n","import { Line } from \"pencil.js\";\r\n\r\nexport default class Arrow extends Line {\r\n    trace (path) {\r\n        super.trace(path);\r\n        let p = [{x: 0, y: 0}].concat(this.points);\r\n        let last = p[p.length - 1];\r\n        let last1 = p[p.length - 2];\r\n        let dx = last.x - last1.x;\r\n        let dy = last1.y - last.y;\r\n        let a = Math.atan2(dy, dx);\r\n        let a2 = this.options.arrowAngle * Math.PI / 180;\r\n        let ax = this.options.arrow * Math.cos(a + a2);\r\n        let ay = this.options.arrow * Math.sin(a + a2);\r\n        let ax2 = this.options.arrow * Math.cos(a - a2);\r\n        let ay2 = this.options.arrow * Math.sin(a - a2);\r\n        path.moveTo(last.x, last.y);\r\n        path.lineTo(last.x - ax, last.y + ay);\r\n        path.moveTo(last.x, last.y);\r\n        path.lineTo(last.x - ax2, last.y + ay2);\r\n        return this;\r\n    }\r\n\r\n    static get defaultOptions() {\r\n      return {\r\n          ...super.defaultOptions,\r\n          arrow: 10,\r\n          arrowAngle: 45\r\n      };\r\n    }\r\n}\r\n","import { Circle, Color, Line } from \"pencil.js\";\r\nimport { DrawColors } from \"./draw\";\r\nimport Arrow from \"./arrow\";\r\n\r\nfunction center_px(cell_size, p) {\r\n  return [p[0] * cell_size + cell_size / 2, p[1] * cell_size + cell_size / 2];\r\n}\r\n\r\nexport function draw_path(ctx, cells, style, color_index) {\r\n  let cell_size = ctx.cell_size;\r\n\r\n  let _color = DrawColors[color_index]\r\n    .match(/[.\\d]+/g)\r\n    .map((c) => (c > 1 ? c / 255 : +c));\r\n  let color = new Color(..._color);\r\n  color.red = color.red * color.alpha + (1 - color.alpha) * 1;\r\n  color.green = color.green * color.alpha + (1 - color.alpha) * 1;\r\n  color.blue = color.blue * color.alpha + (1 - color.alpha) * 1;\r\n  color.alpha = 1;\r\n  let start_px = center_px(cell_size, cells[0]);\r\n  let points = cells.map((p) => {\r\n    let px = center_px(cell_size, p);\r\n    return { x: px[0] - start_px[0], y: px[1] - start_px[1] };\r\n  });\r\n  let objs = [];\r\n\r\n  if (style === \"thermo\") {\r\n    let strokeWidth = cell_size * 0.3;\r\n    let bulb = new Circle(start_px, cell_size * 0.4, { fill: color });\r\n    let line = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      join: Line.joins.miter,\r\n    });\r\n    objs.push(bulb, line);\r\n  } else if (style === \"thin\") {\r\n    let strokeWidth = cell_size * 0.05;\r\n    let line = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      join: Line.joins.miter,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"fat\") {\r\n    let strokeWidth = cell_size * 0.3;\r\n    let line = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      join: Line.joins.miter,\r\n    });\r\n    objs.push(line);\r\n  } else if (style === \"roundborder\") {\r\n    let line1 = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      join: Line.joins.round,\r\n    });\r\n    let line2 = new Line(start_px, points.slice(1), {\r\n      stroke: \"white\",\r\n      strokeWidth: cell_size * 0.67,\r\n      join: Line.joins.round,\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"border\") {\r\n    let line1 = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      cap: Line.caps.square,\r\n      join: Line.joins.round,\r\n    });\r\n    let line2 = new Line(start_px, points.slice(1), {\r\n      stroke: \"white\",\r\n      strokeWidth: cell_size * 0.67,\r\n      cap: Line.caps.square,\r\n      join: Line.joins.round,\r\n    });\r\n    objs.push(line1, line2);\r\n  } else if (style === \"roundfill\") {\r\n    let line1 = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      join: Line.joins.round,\r\n    });\r\n    objs.push(line1);\r\n  } else if (style === \"squarefill\") {\r\n    let line1 = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: cell_size * 0.8,\r\n      cap: Line.caps.square,\r\n      join: Line.joins.round,\r\n    });\r\n    objs.push(line1);\r\n  } else if (style === \"arrowcircle\" || style === \"arrow\") {\r\n    let strokeWidth = cell_size * 0.07;\r\n    if (points.length > 1) {\r\n      let arrow = new Arrow(start_px, points.slice(1), {\r\n        stroke: color,\r\n        strokeWidth: strokeWidth,\r\n        arrow: cell_size * 0.3,\r\n      });\r\n      objs.push(arrow);\r\n    }\r\n    let line = new Line(start_px, points.slice(1), {\r\n      stroke: color,\r\n      strokeWidth: strokeWidth,\r\n      join: Line.joins.miter,\r\n    });\r\n    objs.push(line);\r\n    if (style === \"arrowcircle\") {\r\n      let bulb = new Circle(start_px, cell_size * 0.4, {\r\n        fill: \"white\",\r\n        strokeWidth: strokeWidth,\r\n        stroke: color,\r\n      });\r\n      objs.push(bulb);\r\n    }\r\n  }\r\n\r\n  ctx.underlay2.add(...objs);\r\n  ctx.scene.render();\r\n\r\n  return objs;\r\n}\r\n","import Arrow from \"./arrow\";\r\nimport { Circle, Star, Polygon, Rectangle, Container, Text } from \"pencil.js\";\r\nimport { DrawColors } from \"./draw\";\r\n\r\n/*\r\nclass Text2 extends Text\r\n{\r\n    makePath(ctx) {\r\n        const origin = this.getOrigin();\r\n        ctx.translate(origin.x, origin.y);\r\n\r\n        this.path = new window.Path2D();\r\n        this.path.rect(0, 0, this.width, this.height);\r\n\r\n        ctx.fillStyle = \"rgba(255,255,255,1)\";\r\n        ctx.fill(this.path);\r\n        ctx.fillStyle = this.options.fill.toString(ctx);\r\n\r\n        ctx.translate(-origin.x, -origin.y);\r\n\r\n        super.makePath(ctx);\r\n\r\n        return this;\r\n    }\r\n}\r\n*/\r\n\r\nclass DashCircle extends Circle {\r\n  setContext(ctx) {\r\n    super.setContext(ctx);\r\n    ctx.setLineDash([this.options.dash, this.options.dash]);\r\n  }\r\n}\r\n\r\nexport function draw_symbol(container, str, _color, size, bg) {\r\n  let page = +str.substr(1, 1);\r\n  let symbol = +str.substr(2, 1);\r\n  let color = typeof _color === \"string\" ? _color : DrawColors[_color];\r\n  let cx = size / 2;\r\n  let cy = size / 2;\r\n  let sym;\r\n\r\n  if (str[0] !== \"#\") page = 0;\r\n\r\n  if (page === 0) {\r\n    let textOptions = {\r\n      font: \"sans-serif\",\r\n      fontSize: size,\r\n    };\r\n    sym = new Text([0, 0], str, textOptions);\r\n    const meas = Text.measure(str, textOptions);\r\n    sym.position.x = (size - meas.width) / 2;\r\n    bg = true;\r\n  }\r\n  if (page === 1) {\r\n    if (symbol === 1) {\r\n      // circle fill\r\n      sym = new Circle([cx, cy], (0.8 * size) / 2, {\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      // circle outline\r\n      sym = new Circle([cx, cy], (0.8 * size) / 2, {\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      // dash circle fill\r\n      sym = new DashCircle([cx, cy], (0.8 * size) / 2, {\r\n        fill: color,\r\n        stroke: \"black\",\r\n        strokeWidth: 2,\r\n        dash: 4,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      // dash circle outline\r\n      sym = new DashCircle([cx, cy], (0.8 * size) / 2, {\r\n        fill: \"white\",\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        dash: 4,\r\n      });\r\n    }\r\n  }\r\n  if (page === 2) {\r\n    let offset = size * 0.05;\r\n    let offset2 = size * 0.15;\r\n    if (symbol === 1) {\r\n      sym = new Arrow([cx, cy], [[size - cx - offset, size - cy - offset]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.3,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow([cx, cy], [[size - cx - offset, -cy + offset]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.3,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow([cx, cy], [[-cx + offset, -cy + offset]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.3,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow([cx, cy], [[-cx + offset, size - cy - offset]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.3,\r\n      });\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow([offset2, cy], [[size - offset2 * 2, 0]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.2,\r\n      });\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow([size - offset2, cy], [[-(size - offset2 * 2), 0]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.2,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow([cx, offset2], [[0, size - offset2 * 2]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.2,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow([cx, size - offset2], [[0, -(size - offset2 * 2)]], {\r\n        stroke: color,\r\n        strokeWidth: 3,\r\n        arrow: size * 0.2,\r\n      });\r\n    }\r\n  }\r\n  if (page === 3) {\r\n    // Yajilin style arrows\r\n    let offset = size * 0.15;\r\n    if (symbol === 1) {\r\n      sym = new Arrow([offset, offset], [[size - offset * 2, 0]], {\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        arrow: size * 0.1,\r\n        arrowAngle: 45,\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      sym = new Arrow([size - offset, offset], [[-(size - offset * 2), 0]], {\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        arrow: size * 0.1,\r\n        arrowAngle: 45,\r\n      });\r\n    }\r\n    if (symbol === 3) {\r\n      sym = new Arrow([size - offset, offset], [[0, size - offset * 2]], {\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        arrow: size * 0.1,\r\n      });\r\n    }\r\n    if (symbol === 4) {\r\n      sym = new Arrow(\r\n        [size - offset, size - offset],\r\n        [[0, -(size - offset * 2)]],\r\n        { stroke: color, strokeWidth: 2, arrow: size * 0.1 }\r\n      );\r\n    }\r\n    if (symbol === 5) {\r\n      sym = new Arrow(\r\n        [size - offset, size - offset],\r\n        [[-(size - offset * 2), 0]],\r\n        { stroke: color, strokeWidth: 2, arrow: size * 0.1 }\r\n      );\r\n    }\r\n    if (symbol === 6) {\r\n      sym = new Arrow([offset, size - offset], [[size - offset * 2, 0]], {\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        arrow: size * 0.1,\r\n      });\r\n    }\r\n    if (symbol === 7) {\r\n      sym = new Arrow([offset, size - offset], [[0, -(size - offset * 2)]], {\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        arrow: size * 0.1,\r\n      });\r\n    }\r\n    if (symbol === 8) {\r\n      sym = new Arrow([offset, offset], [[0, size - offset * 2]], {\r\n        stroke: color,\r\n        strokeWidth: 2,\r\n        arrow: size * 0.1,\r\n      });\r\n    }\r\n  }\r\n  if (page === 4) {\r\n    if (symbol === 1) {\r\n      sym = new Star([cx, cy], size * 0.4, 5, 0.4, {\r\n        fill: color,\r\n        stroke: \"black\",\r\n      });\r\n    }\r\n    if (symbol === 2) {\r\n      let offset = size * 0.1;\r\n      sym = new Polygon(\r\n        [offset, offset],\r\n        [\r\n          [size - offset * 2, cy - offset],\r\n          [0, size - offset * 2],\r\n          [0, 0],\r\n        ],\r\n        { fill: color }\r\n      );\r\n    }\r\n  }\r\n  if (sym) {\r\n    if (container.symbol) {\r\n      container.remove(container.symbol);\r\n    }\r\n    if (bg) {\r\n      let bg = new Rectangle([0, 0], size, size, { fill: \"white\" });\r\n      let c = new Container([0, 0]);\r\n      c.add(bg, sym);\r\n      container.symbol = c;\r\n      container.add(c);\r\n    } else {\r\n      container.symbol = sym;\r\n      container.add(sym);\r\n    }\r\n    container.symboltext = str;\r\n    container.symbolcolor = _color;\r\n  }\r\n}\r\n","import { Scene, Text, Rectangle, Component, Container, Line } from \"pencil.js\";\nimport { draw_cage } from \"./cage\";\nimport { draw_path } from \"./path\";\nimport { draw_symbol } from \"./symbols\";\nimport pako from \"pako\";\nimport msgpack from \"msgpack-lite\";\nimport { isEqual, range, findLastIndex } from \"lodash\";\n\nlet ctx = {};\nlet cell_size = 0;\nlet boundary_size = null;\nlet grid_w = null;\nlet grid_h = null;\nlet grid_left = 0;\nlet grid_top = 0;\nlet grid_bottom = 0;\nlet grid_right = 0;\nlet grid_div_width = 0;\nlet grid_div_height = 0;\nlet grid_style = \"normal\";\nlet grid_diagonals = false;\nlet corner_offset = 0;\nlet hover_offset = 0;\nlet symbol_page = 0;\n\nconst type_path = 1;\nconst type_cage = 2;\n\nconst lock_normal = 1;\nconst lock_color = 2;\nconst lock_boundary = 3;\n\nconst b_corner = 1;\nconst b_side = 2;\nconst b_boundary = 3;\n\nconst transparent = \"rgb(0, 0, 0, 0)\";\nconst sol_text_color = \"rgb(29, 106, 229)\";\nconst mark_color = \"rgba(247, 208, 56, 0.5)\";\nexport const DrawColors = [\n  \"rgba(0, 0, 0, 1)\",\n  \"rgba(207, 207, 207, 0.5)\",\n  \"rgba(255, 255, 255, 1)\",\n  \"rgba(163, 224, 72, 0.5)\",\n  \"rgba(210, 59, 231, 0.5)\",\n  \"rgba(235, 117, 50, 0.5)\",\n  \"rgba(226, 38, 31, 0.5)\",\n  \"rgba(247, 208, 56, 0.5)\",\n  \"rgba(52, 187, 230, 0.5)\",\n  //\n  \"rgba(140, 140, 140, 0.5)\",\n  \"rgba(80, 80, 80, 0.5)\",\n  \"rgba(20, 20, 20, 0.5)\",\n];\n\nlet current_color = 0;\nlet current_mode = \"normal\";\nlet current_style = null;\nlet solve_mode = false;\nlet scene = null;\nlet matrix = [];\nlet stuff = [];\nlet drag = false;\nlet undo_stack = [];\nlet current = null;\nlet outer = null;\nlet underlay = null;\nlet shift = false;\nlet cursor = null;\nlet boundary = null;\nlet grid_lines = [];\n\nfunction reset() {\n  matrix = [];\n  stuff = [];\n  undo_stack = [];\n  current = null;\n  outer = null;\n  underlay = null;\n  shift = false;\n  cursor = null;\n}\n\nconst textOptions = {\n  font: \"sans-serif\",\n  cursor: Component.cursors.pointer,\n};\nconst centerTextOptions = {\n  font: \"sans-serif\",\n  fill: sol_text_color,\n  cursor: Component.cursors.pointer,\n};\nconst cornerTextOptions = {\n  font: \"sans-serif\",\n  fill: sol_text_color,\n  cursor: Component.cursors.pointer,\n};\n\nexport function DrawSetSymbolPage(page) {\n  symbol_page = page;\n}\n\nfunction set_symbol(container, str, color, _size) {\n  let text;\n  let size = _size;\n  if (container.normal) {\n    size = cell_size;\n    text = container.normal;\n    container = container.symcont;\n  } else if (size > 0) {\n    // Symbol page\n    color = \"gray\";\n  } else {\n    size = container.bsize;\n  }\n  if (str[0] === \"#\" || !text) {\n    draw_symbol(container, str, color, size);\n  } else {\n    text.text = str;\n  }\n}\n\nexport function DrawSymbol(element, page, num, size) {\n  let sc = new Scene(element);\n  set_symbol(sc, \"#\" + page + num, current_color, size);\n  sc.render();\n}\n\nfunction _set_cell(lock, pos, mode, color, newtext) {\n  let x = pos[0];\n  let y = pos[1];\n  let b = null;\n  if (pos.length === 3) b = get(...pos);\n  let m = get(x, y);\n  let undo_entry = {\n    mode: mode,\n    x: x,\n    y: y,\n    newtext: newtext,\n    old_normal: m.normal.text,\n  };\n\n  if (!m.main_grid && mode !== \"normal\" && !lock) {\n    return;\n  }\n  if (m.lock_type === lock_normal && !lock && mode !== \"color\") {\n    return;\n  }\n\n  if (mode === \"reset\") {\n    m.center.text = \"\";\n    m.normal.text = \"\";\n    m.corner.forEach((t) => (t.text = \"\"));\n    m.side.forEach((t) => (t.text = \"\"));\n    m.r_color.options.fill = null;\n    if (lock) {\n      m.r_color_set.options.fill = null;\n      m.fill = -1;\n      if (m.symcont.symbol) {\n        m.symcont.remove(m.symcont.symbol);\n        m.symcont.symbol = null;\n        m.symcont.symboltext = \"\";\n      }\n      m.boundary.forEach((b) => {\n        if (b.symbol) {\n          b.remove(b.symbol);\n          b.symbol = null;\n          b.symboltext = \"\";\n        }\n        b.options.fill = null;\n        b.removeAllListener();\n      });\n    }\n  } else if (b) {\n    set_symbol(b, newtext, color);\n  } else if (mode === \"normal\") {\n    if (!lock) {\n      m.normal.options.fill = sol_text_color;\n    } else {\n      m.lock_type = newtext !== \"\" ? lock_normal : 0;\n      if (newtext[0] !== \"#\") {\n        m.normal.options.fill = DrawColors[color];\n        m.color = color;\n        if (m.normal.text !== \"\" && newtext[0] !== \"#\")\n          newtext = m.normal.text + newtext;\n      }\n    }\n    set_symbol(m, newtext, color);\n    if (newtext[0] !== \"#\") {\n      const meas = Text.measure(m.normal.text, m.normal.text.options);\n      m.normal.position.x = (cell_size - 2.5 * meas.width) / 2;\n      m.normal.position.y = cell_size * 0.15;\n      m.center.text = \"\";\n      m.corner.forEach((t) => {\n        t.text = \"\";\n      });\n      m.side.forEach((t) => {\n        t.text = \"\";\n      });\n    }\n  } else if (mode === \"center\" && m.normal.text === \"\") {\n    let current = m.center.text;\n    let center = \"\";\n    m.center.options.fill = sol_text_color;\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          center += i;\n        }\n      }\n    }\n\n    m.center.text = center;\n    const meas = Text.measure(center, m.center.options);\n    m.center.position.x = (cell_size - meas.width) / 2;\n    m.center.position.y = (cell_size - meas.height) / 2;\n  } else if (mode === \"corner\" && m.normal.text === \"\") {\n    let current = \"\";\n    m.corner.forEach((t) => {\n      current += t.text;\n    });\n    m.side.forEach((t) => {\n      current += t.text;\n    });\n    let text = \"\";\n    if (newtext !== \"\") {\n      for (let i = 1; i <= 9; ++i) {\n        if (\n          (current.indexOf(i) === -1 && i === +newtext) ||\n          (current.indexOf(i) !== -1 && i !== +newtext)\n        ) {\n          text += i;\n        }\n      }\n    }\n    let i = 0;\n    m.corner.forEach((t) => {\n      t.text = text[i++] || \"\";\n    });\n    m.side.forEach((t) => {\n      t.text = text[i++] || \"\";\n    });\n  } else if (mode === \"color\") {\n    if (!lock) {\n      m.r_color.options.fill = DrawColors[color];\n    } else {\n      m.r_color_set.options.fill = DrawColors[color];\n      m.fill = color;\n    }\n  }\n  undo_entry.normal = m.normal.text;\n  undo_stack.push(undo_entry);\n}\n\nfunction keyup(event) {\n  if (event.key === \"Shift\") {\n    shift = false;\n  }\n}\n\nfunction set_cell(pos, mode, color, newtext) {\n  let lock = !solve_mode;\n  _set_cell(lock, pos, mode, color, newtext);\n}\n\nfunction lock_cell(pos, mode, color, newtext) {\n  _set_cell(true, pos, mode, color, newtext);\n}\n\nexport function DrawSetNumber(number) {\n  let count = 0;\n  let symbol = number;\n  if (symbol_page > 0) symbol = \"#\" + symbol_page + number;\n  if (boundary) {\n    set_cell(boundary, \"boundary\", current_color, symbol);\n  } else {\n    each_mark((m) => {\n      set_cell([m.x, m.y], current_mode, current_color, symbol);\n      ++count;\n    });\n    if (count > 1) undo_stack.push({ mode: \"group\", count: count });\n  }\n  scene.render();\n}\n\nexport function DrawSetColor(color_index) {\n  current_color = color_index;\n  if (current_mode === \"color\") {\n    each_mark((m) => {\n      set_cell([m.x, m.y], \"color\", color_index, null);\n    });\n    scene.render();\n  }\n}\n\nfunction keydown(event) {\n  if (event.target.tagName === \"TEXTAREA\") {\n    return;\n  }\n\n  let newtext;\n  if (event.key === \"Shift\") {\n    shift = true;\n    return;\n  } else if (event.key === \"Delete\" || event.key === \"Backspace\") {\n    DrawDelete();\n    event.preventDefault();\n    return;\n  } else if (event.key >= \"0\" && event.key <= \"9\") {\n    newtext = event.key;\n    if (symbol_page > 0) newtext = \"#\" + symbol_page + newtext;\n  } else if (\n    event.key.length === 1 &&\n    ((event.key >= \"a\" && event.key <= \"z\") ||\n      (event.key >= \"A\" && event.key <= \"Z\")) &&\n    !solve_mode\n  ) {\n    newtext = event.key;\n  } else if (event.key.startsWith(\"Arrow\") && cursor) {\n    let c = cursor.slice();\n    if (!shift) unmark();\n    cursor = c;\n    if (event.key === \"ArrowUp\" && cursor[1] > 0) cursor[1] -= 1;\n    if (event.key === \"ArrowDown\" && cursor[1] < grid_h - 1) cursor[1] += 1;\n    if (event.key === \"ArrowLeft\" && cursor[0] > 0) cursor[0] -= 1;\n    if (event.key === \"ArrowRight\" && cursor[0] < grid_w - 1) cursor[0] += 1;\n    mark(cursor[0], cursor[1]);\n    scene.render();\n    return;\n  } else {\n    return;\n  }\n\n  if (boundary) {\n    set_cell(boundary, \"boundary\", current_color, newtext);\n  } else {\n    let count = 0;\n    each_mark((m) => ++count);\n    each_mark((m) => {\n      if (current_mode === \"color\") {\n        let color = +newtext - 1;\n        if (color >= 0 && color <= 9)\n          set_cell([m.x, m.y], current_mode, color, null);\n      } else set_cell([m.x, m.y], current_mode, current_color, newtext);\n    });\n    if (count > 1) undo_stack.push({ mode: \"group\", count: count });\n  }\n  scene.render();\n}\n\nfunction get(x, y, b) {\n  if (x < 0 || y < 0 || x >= grid_w || y >= grid_h) {\n    return null;\n  }\n  let m = matrix[y][x];\n  if (b >= 0) return m.boundary[b];\n  return m;\n}\n\nfunction mark(x, y) {\n  let m = get(x, y);\n  if (!m.mark) {\n    m.mark = true;\n    m.rect.options.fill = mark_color;\n    return true;\n  }\n  return false;\n}\n\nfunction inner_hover(x, y) {\n  if (!drag) return;\n\n  if (current_mode === \"path\") {\n    current.objs.forEach((o) => o.parent.remove(o));\n    current.cells.push([x, y]);\n    current.objs = draw_path(ctx, current.cells, current_style, current_color);\n    scene.render();\n  }\n}\n\nfunction move(event, x, y) {\n  if (!drag) return;\n\n  if (current_mode === \"edge\") {\n    let m = get(x, y);\n    let xp = event.position.x - outer.position.x - m.pos[0];\n    let yp = event.position.y - outer.position.y - m.pos[1];\n    if (\n      (xp < cell_size * 0.4 || xp > cell_size * 0.6) &&\n      yp > cell_size * 0.4 &&\n      yp < cell_size * 0.6\n    ) {\n      if (xp < cell_size * 0.4) m = get(x - 1, y);\n      let edge = new Line([cell_size, 0], [[0, cell_size]], {\n        fill: null,\n        strokeWidth: 3,\n        stroke: \"black\",\n      });\n      m.edge_right.add(edge);\n      scene.render();\n    } else if (\n      (yp < cell_size * 0.4 || yp > cell_size * 0.6) &&\n      xp > cell_size * 0.4 &&\n      xp < cell_size * 0.6\n    ) {\n      if (yp < cell_size * 0.4) m = get(x, y - 1);\n      let edge = new Line([0, cell_size], [[cell_size, 0]], {\n        fill: null,\n        strokeWidth: 3,\n        stroke: \"black\",\n      });\n      m.edge_bottom.add(edge);\n      scene.render();\n    }\n  }\n}\n\nfunction hover(x, y) {\n  if (!drag) return;\n\n  if (current_mode === \"path\" || current_mode === \"edge\") {\n  } else if (current_mode === \"cage\") {\n    if (current.objs) current.objs.forEach((l) => l.parent.remove(l));\n    current.cells.push([x, y]);\n    current.objs = draw_cage(ctx, current.cells, current_style);\n    scene.render();\n  } else {\n    if (mark(x, y)) scene.render();\n  }\n}\n\nfunction mark_boundary(x, y, i) {\n  unmark();\n\n  let b = get(x, y).boundary[i];\n  b.options.stroke = \"red\";\n  b.options.strokeWidth = 1;\n  boundary = [x, y, i];\n}\n\nfunction unmark() {\n  if (boundary) {\n    get(...boundary).options.strokeWidth = 0;\n    boundary = null;\n  }\n  each_mark((m) => {\n    m.rect.options.fill = \"rgba(255, 255, 255, 0)\";\n    m.mark = false;\n  });\n  cursor = null;\n}\n\nfunction boundary_mousedown(event, x, y, i) {\n  mark_boundary(x, y, i);\n  scene.render();\n}\n\nfunction mousedown(event, x, y) {\n  if (!shift) unmark();\n\n  if (boundary) {\n    get(...boundary).options.strokeWidth = 0;\n    boundary = null;\n  }\n\n  cursor = [x, y];\n  drag = true;\n\n  if (current_mode === \"path\") {\n    current = { cells: [[x, y]], color: current_color };\n    current.objs = draw_path(ctx, current.cells, current_style, current_color);\n  } else if (current_mode === \"cage\") {\n    current = { cells: [x, y] };\n    current.objs = draw_cage(ctx, current.cells, current_style);\n  } else if (current_mode === \"edge\") {\n  } else {\n    mark(x, y);\n  }\n\n  scene.render();\n}\n\nfunction mouseup() {\n  drag = false;\n  if (current_mode === \"path\" && current) {\n    stuff.push({\n      type: type_path,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n      color: current_color,\n    });\n    current = null;\n  } else if (current_mode === \"cage\" && current) {\n    stuff.push({\n      type: type_cage,\n      style: current_style,\n      cells: current.cells,\n      objs: current.objs,\n    });\n    current = null;\n  }\n}\n\nexport function DrawSetMode(state) {\n  current_mode = state.mode;\n  solve_mode = state.solveMode;\n  if (state.mode === \"cage\") current_style = state.cageStyle;\n  if (state.mode === \"path\") current_style = state.pathStyle;\n  if (\n    (state.mode === \"normal\" || state.mode === \"number\") &&\n    state.numberStyle === \"normal\"\n  ) {\n    current_mode = \"normal\";\n    each_cell((m) =>\n      m.boundary.forEach((b) => {\n        b.options.fill = null;\n        b.removeAllListener();\n      })\n    );\n  }\n\n  let setBoundary = (type) => {\n    each_cell((m) =>\n      m.boundary.forEach((b, i) => {\n        b.options.fill = b.btype === type ? transparent : null;\n        b.removeAllListener();\n        if (b.btype === type)\n          b.on(\"mousedown\", (event) => boundary_mousedown(event, m.x, m.y, i));\n      })\n    );\n  };\n\n  if (state.mode === \"number\" && state.numberStyle === \"corner\") {\n    current_mode = \"boundary\";\n    setBoundary(b_corner);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"side\") {\n    current_mode = \"boundary\";\n    setBoundary(b_side);\n  }\n  if (state.mode === \"number\" && state.numberStyle === \"boundary\") {\n    current_mode = \"boundary\";\n    setBoundary(b_boundary);\n  }\n  scene.render();\n}\n\nclass DashLine extends Line {\n  setContext(ctx) {\n    super.setContext(ctx);\n    ctx.setLineDash([this.options.dash, this.options.dash]);\n  }\n}\n\nfunction each_cell(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      f(m);\n    }\n  }\n}\n\nfunction each_mark(f) {\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let m = get(x, y);\n      if (m.mark) f(m);\n    }\n  }\n}\n\nfunction load_size(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  if (data.version !== 1) {\n    alert(\"Bad version\");\n  }\n\n  cell_size = data.grid[0];\n  grid_w = data.grid[1];\n  grid_h = data.grid[2];\n  grid_left = data.grid[3];\n  grid_right = data.grid[4];\n  grid_top = data.grid[5];\n  grid_bottom = data.grid[6];\n  grid_div_width = data.grid[7];\n  grid_div_height = data.grid[8];\n  grid_style = data.grid[9];\n  grid_diagonals = data.grid[10];\n}\n\nfunction load(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  stuff = [];\n  each_cell((m) => {\n    m.lock_type = 0;\n    m.normal.text = \"\";\n    m.center.text = \"\";\n  });\n\n  data.cells.forEach((c) => {\n    let [pos, type, text, color] = c;\n    if (type === lock_normal) {\n      lock_cell(pos, \"normal\", color, text);\n    } else if (type === lock_color) {\n      lock_cell(pos, \"color\", color, text);\n    } else if (type === lock_boundary) {\n      lock_cell(pos, \"boundary\", color, text);\n    }\n  });\n  data.stuff.forEach((_s) => {\n    let s = { type: _s[0], style: _s[1], color: _s[2], cells: _s[3] };\n    if (s.type === type_path) {\n      s.objs = draw_path(ctx, s.cells, s.style, s.color);\n    } else if (s.type === type_cage) {\n      s.objs = draw_cage(ctx, s.cells, s.style);\n    }\n    stuff.push(s);\n  });\n}\n\nexport function DrawGetDescription(base64) {\n  let pack = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n  let unpack = pako.inflate(pack);\n  let data = msgpack.decode(unpack);\n\n  return data.desc;\n}\n\nexport function DrawGenerateUrl(description) {\n  let out = {\n    version: 1,\n    grid: [\n      cell_size,\n      grid_w,\n      grid_h,\n      grid_left,\n      grid_right,\n      grid_top,\n      grid_bottom,\n      grid_div_width,\n      grid_div_height,\n      grid_style,\n      grid_diagonals,\n    ],\n    cells: [],\n    stuff: stuff.map((e) => [e.type, e.style, e.color, e.cells]),\n    desc: description,\n  };\n\n  each_cell((m) => {\n    let pos = [m.x, m.y];\n    if (m.lock_type === lock_normal) {\n      if (m.normal.text !== \"\")\n        out.cells.push([pos, m.lock_type, m.normal.text, m.color]);\n      if (m.symcont.symboltext !== \"\" && m.symcont.symboltext !== undefined)\n        out.cells.push([\n          pos,\n          m.lock_type,\n          m.symcont.symboltext,\n          m.symcont.symbolcolor,\n        ]);\n    }\n    if (m.fill >= 0) {\n      out.cells.push([pos, lock_color, null, m.fill]);\n    }\n    m.boundary.forEach((b, i) => {\n      if (b.symboltext)\n        out.cells.push([\n          [m.x, m.y, i],\n          lock_boundary,\n          b.symboltext,\n          b.symbolcolor,\n        ]);\n    });\n  });\n\n  console.log(out);\n\n  let coded = msgpack.encode(out);\n  let packed = pako.deflate(coded);\n  let base64 = btoa(String.fromCharCode(...packed));\n  return window.location.origin + \"/?s=1&p=\" + encodeURIComponent(base64);\n}\n\nexport function DrawCheck() {\n  let r = range(1, 10);\n  let rows = Array.from({ length: 9 }, () => []);\n  let columns = Array.from({ length: 9 }, () => []);\n  let boxes = Array.from({ length: 9 }, () => []);\n  let missing = null;\n  each_cell((m) => {\n    let x = m.x - grid_left;\n    let y = m.y - grid_top;\n    let n = +m.normal.text;\n    if (n === 0 && missing === null) {\n      missing = `Missing entry at ${x + 1}, ${y + 1}`;\n    }\n    columns[x].push(n);\n    rows[y].push(n);\n    let b = Math.floor(x / 3) + Math.floor(y / 3) * 3;\n    boxes[b].push(n);\n  });\n  if (missing) {\n    alert(missing);\n    return false;\n  }\n  for (let i = 0; i < 9; ++i) {\n    if (!isEqual(rows[i].sort(), r)) {\n      alert(`Bad row ${i + 1}`);\n      return false;\n    }\n    if (!isEqual(columns[i].sort(), r)) {\n      alert(`Bad column ${i + 1}`);\n      return false;\n    }\n    if (!isEqual(boxes[i].sort(), r)) {\n      alert(`Bad box ${i + 1}`);\n      return false;\n    }\n  }\n  alert(\"OK\");\n  return true;\n}\n\nexport function DrawDelete() {\n  if (!solve_mode) {\n    let i = findLastIndex(stuff, (s) =>\n      s.cells.find((c) => c[0] === cursor[0] && c[1] === cursor[1])\n    );\n    if (i !== -1) {\n      stuff[i].objs.forEach((l) => l.parent.remove(l));\n      stuff.splice(i, 1);\n      scene.render();\n      return;\n    }\n  }\n\n  let count = 0;\n\n  if (boundary) {\n    set_cell(boundary, \"boundary\", null, \"\");\n  } else {\n    each_mark((m) => {\n      set_cell([m.x, m.y], \"reset\", null, \"\");\n      ++count;\n    });\n  }\n\n  if (count > 1) {\n    undo_stack.push({ mode: \"group\", count: count });\n  }\n\n  scene.render();\n}\n\nexport function DrawReset() {\n  each_cell((m) => {\n    set_cell([m.x, m.y], \"reset\", null, \"\");\n  });\n\n  if (!solve_mode) {\n    stuff.forEach((s) => s.objs.forEach((l) => l.parent.remove(l)));\n    stuff = [];\n  }\n  scene.render();\n}\n\nexport function DrawUndo() {\n  if (undo_stack.length === 0) return;\n  let u = undo_stack.pop();\n  let count = 0;\n  if (u.mode === \"group\") {\n    count = u.count;\n    u = undo_stack.pop();\n  }\n  do {\n    if (u.mode === \"normal\") {\n      set_cell([u.x, u.y], u.mode, current_color, u.old_normal);\n    } else if (u.mode === \"center\" || u.mode === \"corner\") {\n      set_cell([u.x, u.y], u.mode, current_color, u.newtext);\n    }\n    undo_stack.pop();\n    --count;\n    if (count > 0) {\n      u = undo_stack.pop();\n    }\n  } while (count > 0);\n  scene.render();\n}\n\nfunction add_grid(layer) {\n  let dash = grid_style === \"dash\" ? 4 : 0;\n\n  let thin = {\n    fill: null,\n    stroke: \"black\",\n    strokeWidth: 1,\n    dash: dash,\n  };\n  let fat = {\n    fill: null,\n    stroke: \"black\",\n    strokeWidth: 4,\n  };\n\n  layer.remove(...grid_lines);\n\n  let frame_w = grid_w - grid_left - grid_right;\n  let frame_h = grid_h - grid_top - grid_bottom;\n\n  grid_lines = [];\n  if (grid_diagonals) {\n    let diagonal = {\n      stroke: DrawColors[1],\n      strokeWidth: 4,\n    };\n    grid_lines.push(\n      new Line(\n        [grid_left * cell_size, grid_top * cell_size],\n        [[frame_w * cell_size, frame_h * cell_size]],\n        diagonal\n      )\n    );\n    grid_lines.push(\n      new Line(\n        [(grid_w - grid_right) * cell_size, grid_top * cell_size],\n        [[-frame_w * cell_size, frame_h * cell_size]],\n        diagonal\n      )\n    );\n  }\n\n  for (let x = 0; x <= frame_w; ++x) {\n    grid_lines.push(\n      new DashLine(\n        [(grid_left + x) * cell_size, grid_top * cell_size],\n        [[0, frame_h * cell_size]],\n        x % grid_div_width === 0 ? fat : thin\n      )\n    );\n  }\n  for (let y = 0; y <= frame_h; ++y) {\n    grid_lines.push(\n      new DashLine(\n        [grid_left * cell_size, (grid_top + y) * cell_size],\n        [[frame_w * cell_size, 0]],\n        y % grid_div_height === 0 ? fat : thin\n      )\n    );\n  }\n\n  grid_lines.push(\n    new Rectangle(\n      [grid_left * cell_size, grid_top * cell_size],\n      frame_w * cell_size,\n      frame_h * cell_size,\n      fat\n    )\n  );\n\n  layer.add(...grid_lines);\n}\n\nexport function DrawRender(code, wrapper, state) {\n  cell_size = state.cellSize;\n  grid_left = state.left;\n  grid_right = state.right;\n  grid_top = state.top;\n  grid_bottom = state.bottom;\n  grid_w = grid_left + state.width + grid_right;\n  grid_h = grid_top + state.height + grid_bottom;\n  grid_div_width = state.gridDivWidth;\n  grid_div_height = state.gridDivHeight;\n  grid_style = state.gridDashed ? \"dash\" : \"normal\";\n  grid_diagonals = state.gridDiagonals;\n\n  if (code) load_size(code);\n\n  corner_offset = cell_size * 0.08;\n  hover_offset = cell_size * 0.2;\n\n  let wrapper_clone = wrapper.cloneNode(false);\n  wrapper.parentNode.replaceChild(wrapper_clone, wrapper);\n  wrapper_clone.style.width = cell_size * grid_w + 20 + \"px\";\n  wrapper_clone.style.height = cell_size * grid_h + 250 + \"px\";\n  scene = new Scene(wrapper_clone);\n  scene.on(\"keyup\", (event) => keyup(event));\n  scene.on(\"mouseup\", () => mouseup());\n  reset();\n\n  const outer_w = cell_size * grid_w;\n  const outer_x = (scene.size.x - outer_w) / 2;\n  const outer_y = 20;\n  const options = {\n    fill: \"rgba(255, 255, 255, 0)\",\n    stroke: \"black\",\n    strokeWidth: 1,\n    cursor: Component.cursors.pointer,\n  };\n  const boptions = {\n    fill: \"rgba(255, 255, 255, 0)\",\n    strokeWidth: 0,\n    cursor: Component.cursors.pointer,\n  };\n  const options_inner = {\n    fill: \"rgba(255, 255, 255, 0)\",\n    cursor: Component.cursors.pointer,\n  };\n\n  textOptions.fontSize = cell_size * 0.8;\n  centerTextOptions.fontSize = cell_size * 0.3;\n\n  outer = new Container([outer_x, outer_y]);\n  scene.add(outer);\n\n  underlay = new Container([0, 0]);\n  let underlay2 = new Container([0, 0]);\n  let gridlayer = new Container([0, 0]);\n  let overlay = new Container([0, 0]);\n  outer.add(underlay2, underlay, gridlayer, overlay);\n\n  for (let y = 0; y < grid_h; ++y) {\n    matrix[y] = [];\n  }\n  let cs = cell_size;\n  boundary_size = cell_size * 0.3;\n  let bsize = boundary_size;\n\n  for (let x = 0; x < grid_w; ++x) {\n    for (let y = 0; y < grid_h; ++y) {\n      let xp = x * cs;\n      let yp = y * cs;\n      let main_grid =\n        x >= grid_left &&\n        y >= grid_top &&\n        x < grid_w - grid_right &&\n        y < grid_h - grid_bottom;\n      let ocont = new Container([xp, yp]);\n      let cont = new Container([xp, yp]);\n      let symcont = new Container([xp, yp]);\n      options.strokeWidth = 0;\n      let r = new Rectangle([0, 0], cs, cs, options);\n      let edge_right = new Rectangle([0, 0], cs, cs, options);\n      let edge_bottom = new Rectangle([0, 0], cs, cs, options);\n      let r_color = new Rectangle([0, 0], cs, cs, options);\n      let r_color_set = new Rectangle([0, 0], cs, cs, options);\n      let r_hover = new Rectangle(\n        [hover_offset, hover_offset],\n        cs - hover_offset * 2,\n        cs - hover_offset * 2,\n        options_inner\n      );\n      let normal = new Text([0, cs * 0.5], \"\", textOptions);\n      let center = new Text([0, cs * 0.4], \"\", centerTextOptions);\n      let corner_pos = [];\n      corner_pos[0] = [corner_offset, corner_offset];\n      corner_pos[1] = [cs - corner_offset, corner_offset];\n      corner_pos[2] = [cs - corner_offset, cs - corner_offset];\n      corner_pos[3] = [corner_offset, cs - corner_offset];\n      let side_pos = [];\n      side_pos[0] = [cs / 2, corner_offset];\n      side_pos[1] = [cs - corner_offset, cs / 2];\n      side_pos[2] = [cs / 2, cs - corner_offset];\n      side_pos[3] = [corner_offset, cs / 2];\n\n      let corner = [];\n      let side = [];\n      let boundary = [];\n      if (main_grid) {\n        cornerTextOptions.fontSize = cs * 0.25;\n        corner_pos.forEach((p, i) => {\n          p = p.slice(0);\n          p[0] -= cs * 0.025;\n          p[1] -= cs * 0.025;\n          if (i === 2 || i === 3) p[1] -= cs * 0.15;\n          if (i === 1 || i === 2) p[0] -= cs * 0.1;\n          corner.push(new Text(p, \"\", cornerTextOptions));\n        });\n        side_pos.forEach((p, i) => {\n          p = p.slice(0);\n          p[0] -= cs * 0.025;\n          p[1] -= cs * 0.025;\n          if (i === 2) p[1] -= cs * 0.15;\n          if (i === 1 || i === 3) p[1] -= cs * 0.05;\n          if (i === 0 || i === 2) p[0] -= cs * 0.025;\n          if (i === 1) p[0] -= cs * 0.1;\n          side.push(new Text(p, \"\", cornerTextOptions));\n        });\n        let bc = cell_size * 0.03;\n        // Corners\n        boundary.push(new Rectangle([bc, bc], bsize, bsize, boptions));\n        boundary.push(\n          new Rectangle([cs - bsize - bc, bc], bsize, bsize, boptions)\n        );\n        boundary.push(\n          new Rectangle([bc, cs - bsize - bc], bsize, bsize, boptions)\n        );\n        boundary.push(\n          new Rectangle(\n            [cs - bsize - bc, cs - bsize - bc],\n            bsize,\n            bsize,\n            boptions\n          )\n        );\n\n        // Sides\n        boundary.push(\n          new Rectangle([bc, cs / 2 - bsize / 2], bsize, bsize, boptions)\n        );\n        boundary.push(\n          new Rectangle([cs / 2 - bsize / 2, bc], bsize, bsize, boptions)\n        );\n        boundary.push(\n          new Rectangle(\n            [cs - bsize - bc, cs / 2 - bsize / 2],\n            bsize,\n            bsize,\n            boptions\n          )\n        );\n        boundary.push(\n          new Rectangle(\n            [cs / 2 - bsize / 2, cs - bsize - bc],\n            bsize,\n            bsize,\n            boptions\n          )\n        );\n\n        // Boundaries\n        boundary.push(\n          new Rectangle([-bsize / 2, -bsize / 2], bsize, bsize, boptions)\n        );\n        boundary.push(\n          new Rectangle(\n            [-bsize / 2, cs / 2 - bsize / 2],\n            bsize,\n            bsize,\n            boptions\n          )\n        );\n        boundary.push(\n          new Rectangle(\n            [cs / 2 - bsize / 2, -bsize / 2],\n            bsize,\n            bsize,\n            boptions\n          )\n        );\n        if (x === grid_w - grid_right - 1) {\n          boundary.push(\n            new Rectangle([cs - bsize / 2, -bsize / 2], bsize, bsize, boptions)\n          );\n          boundary.push(\n            new Rectangle(\n              [cs - bsize / 2, cs / 2 - bsize / 2],\n              bsize,\n              bsize,\n              boptions\n            )\n          );\n        }\n        if (y === grid_h - grid_bottom - 1) {\n          boundary.push(\n            new Rectangle([-bsize / 2, cs - bsize / 2], bsize, bsize, boptions)\n          );\n          boundary.push(\n            new Rectangle(\n              [cs / 2 - bsize / 2, cs - bsize / 2],\n              bsize,\n              bsize,\n              boptions\n            )\n          );\n          boundary.push(\n            new Rectangle(\n              [cs - bsize / 2, cs - bsize / 2],\n              bsize,\n              bsize,\n              boptions\n            )\n          );\n        }\n        boundary.forEach((b, i) => {\n          if (i < 4) {\n            b.btype = b_corner;\n            b.bsize = bsize;\n          } else if (i < 8) {\n            b.btype = b_side;\n            b.bsize = bsize;\n          } else {\n            b.btype = b_boundary;\n            b.bsize = bsize;\n          }\n        });\n      }\n\n      cont.add(r_color_set, r_color, r, r_hover, normal, center);\n      cont.on(\"mousedown\", (event) => mousedown(event, x, y));\n      cont.on(\"hover\", () => hover(x, y));\n      cont.on(\"mousemove\", (event) => move(event, x, y));\n      r_hover.on(\"hover\", () => inner_hover(x, y));\n      matrix[y][x] = {\n        x: x,\n        y: y,\n        pos: [xp, yp],\n        symcont: symcont,\n        cont: cont,\n        rect: r,\n        boundary: boundary,\n        fill: -1,\n        color: null,\n        normal: normal,\n        center: center,\n        corner: corner,\n        side: side,\n        corner_pos: corner_pos,\n        edge_right: edge_right,\n        edge_bottom: edge_bottom,\n        r: r,\n        r_color_set: r_color_set,\n        r_color: r_color,\n        main_grid: main_grid,\n      };\n      underlay.add(symcont, cont);\n      ocont.add(...corner, ...side, ...boundary);\n      overlay.add(ocont);\n    }\n  }\n\n  add_grid(gridlayer);\n\n  ctx.scene = scene;\n  ctx.underlay = underlay;\n  ctx.underlay2 = underlay2;\n  ctx.cell_size = cell_size;\n  ctx.corner_offset = corner_offset;\n  ctx.boundary_size = boundary_size;\n  ctx.each_cell = each_cell;\n  ctx.get = get;\n\n  if (code) load(code);\n\n  scene.render();\n\n  return null;\n}\n\nwindow.addEventListener(\"keydown\", (event) => keydown(event));\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  DrawRender,\n  DrawSymbol,\n  DrawSetMode,\n  DrawUndo,\n  DrawDelete,\n  DrawGenerateUrl,\n  DrawSetNumber,\n  DrawSetColor,\n  DrawColors,\n  DrawGetDescription,\n  DrawReset,\n  DrawCheck,\n  DrawSetSymbolPage,\n} from \"./draw\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Slider,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Grid,\n  TextField,\n  Switch,\n} from \"@material-ui/core\";\nimport { PlayArrow, Pause, SkipPrevious } from \"@material-ui/icons\";\n\nconst query = window.location.search;\nconst url_params = new URLSearchParams(query);\nconst code = url_params.get(\"p\");\nconst solve_mode = url_params.get(\"s\") === \"1\";\n\nfunction UrlDialog(props) {\n  let openInTab = () => {\n    props.onClose();\n    let w = window.open(props.text, \"_blank\");\n    w.focus();\n  };\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle>URL</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{props.text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={openInTab}>Open in tab</Button>\n        <Button color=\"primary\" onClick={props.onClose}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.symbolRef = [];\n    for (let i = 0; i < 9; ++i) this.symbolRef.push(React.createRef());\n\n    this.state = {\n      solveMode: solve_mode,\n      settingsMode: \"size\",\n      color: 0,\n      description: \"\",\n      cellSize: 64,\n      width: 9,\n      height: 9,\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      gridDivWidth: 3,\n      gridDivHeight: 3,\n      gridDashed: false,\n      gridDiagonals: false,\n      mode: solve_mode ? \"normal\" : \"number\",\n      numberStyle: \"normal\",\n      cageStyle: \"dash\",\n      pathStyle: \"arrow\",\n      dialogOpen: false,\n      dialogText: \"\",\n      seconds: 0,\n      timeStatus: true,\n      symbolPage: \"0\",\n    };\n  }\n\n  handleKeyDown = (event) => {\n    if (this.state.solveMode) {\n      const cycle_modes = [\"normal\", \"center\", \"corner\", \"color\"];\n      let i = \"qwer\".indexOf(event.key);\n      if (event.key.length === 1 && i !== -1) this.setMode(cycle_modes[i]);\n      else if (event.key === \" \") {\n        let i = cycle_modes.indexOf(this.state.mode);\n        i = (i + 1) % cycle_modes.length;\n        this.setMode(cycle_modes[i]);\n      }\n    }\n  };\n\n  componentDidMount() {\n    let desc = \"\";\n    if (code) {\n      desc = DrawGetDescription(code);\n    }\n    this.setState({ description: desc }, () => {\n      DrawRender(code, this.canvasRef.current, this.state);\n      DrawSetMode(this.state);\n    });\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n\n    this.interval = setInterval(() => {\n      if (this.state.timeStatus) {\n        this.setState({ seconds: this.state.seconds + 1 });\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    clearInterval(this.interval);\n  }\n\n  setMode = (mode) => {\n    let b = document.getElementById(\"button\" + mode);\n    if (b) b.focus();\n    this.setState({ mode: mode }, () => {\n      DrawSetMode(this.state);\n    });\n  };\n\n  setStyle = (style, value) => {\n    this.setState({ [style]: value }, () => DrawSetMode(this.state));\n  };\n\n  generateUrl = () => {\n    let url = DrawGenerateUrl(this.state.description);\n    this.setState({ dialogText: url, dialogOpen: true });\n  };\n\n  numberStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"numberstyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"numberstyle-label\"\n            fullWidth={true}\n            value={this.state.numberStyle}\n            onChange={(event) =>\n              this.setStyle(\"numberStyle\", event.target.value)\n            }\n          >\n            <MenuItem value=\"normal\">Normal</MenuItem>\n            <MenuItem value=\"corner\">Corner</MenuItem>\n            <MenuItem value=\"side\">Side</MenuItem>\n            <MenuItem value=\"boundary\">Boundary</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  cageStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"cagestyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"cagestyle-label\"\n            fullWidth={true}\n            value={this.state.cageStyle}\n            onChange={(event) => this.setStyle(\"cageStyle\", event.target.value)}\n          >\n            <MenuItem value=\"dash\">Dashed</MenuItem>\n            <MenuItem value=\"edge\">Edge</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  pathStyleBox() {\n    return (\n      <Box margin=\"10px\">\n        <FormControl fullWidth={true}>\n          <InputLabel shrink id=\"pathstyle-label\">\n            Style\n          </InputLabel>\n          <Select\n            labelId=\"pathstyle-label\"\n            fullWidth={true}\n            value={this.state.pathStyle}\n            onChange={(event) => this.setStyle(\"pathStyle\", event.target.value)}\n          >\n            <MenuItem value=\"thin\">Line</MenuItem>\n            <MenuItem value=\"fat\">Fat Line</MenuItem>\n            <MenuItem value=\"thermo\">Thermo</MenuItem>\n            <MenuItem value=\"arrow\">Arrow</MenuItem>\n            <MenuItem value=\"arrowcircle\">Arrow with circle</MenuItem>\n            <MenuItem value=\"roundborder\">Round border</MenuItem>\n            <MenuItem value=\"border\">Border</MenuItem>\n            <MenuItem value=\"roundfill\">Round fill</MenuItem>\n            <MenuItem value=\"squarefill\">Square fill</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\n  timerBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Box margin=\"20px\" padding=\"10px\" boxShadow={3}>\n          <Typography align=\"center\" variant=\"h4\">\n            {new Date(this.state.seconds * 1000).toISOString().substr(11, 8)}\n          </Typography>\n          <ButtonGroup fullWidth={true} size=\"large\">\n            <Button onClick={() => this.setState({ timeStatus: true })}>\n              <PlayArrow />\n            </Button>\n            <Button onClick={() => this.setState({ timeStatus: false })}>\n              <Pause />\n            </Button>\n            <Button\n              onClick={() => this.setState({ seconds: 0, timeStatus: false })}\n            >\n              <SkipPrevious />\n            </Button>\n          </ButtonGroup>\n        </Box>\n        {this.state.description !== \"\" && (\n          <Box margin=\"20px\">\n            <TextField\n              multiline\n              variant=\"outlined\"\n              InputProps={{ readOnly: true }}\n              value={this.state.description}\n            />\n          </Box>\n        )}\n        <Box margin=\"20px\">\n          <TextField multiline variant=\"outlined\" />\n        </Box>\n      </Box>\n    );\n  }\n\n  settingLeftBox() {\n    return (\n      <Box minWidth=\"250px\">\n        <Box margin=\"30px\">\n          <Select\n            fullWidth={true}\n            value={this.state.mode}\n            onChange={(event) => this.setMode(event.target.value)}\n          >\n            <MenuItem value=\"number\">Number</MenuItem>\n            <MenuItem value=\"cage\">Cage</MenuItem>\n            <MenuItem value=\"path\">Path</MenuItem>\n            <MenuItem value=\"color\">Color</MenuItem>\n          </Select>\n          {this.state.mode === \"number\" && this.numberStyleBox()}\n          {this.state.mode === \"cage\" && this.cageStyleBox()}\n          {this.state.mode === \"path\" && this.pathStyleBox()}\n        </Box>\n        <Box margin=\"30px\">\n          <ButtonGroup\n            fullWidth={true}\n            size=\"large\"\n            variant=\"contained\"\n            orientation=\"vertical\"\n          >\n            <Button onClick={this.generateUrl}>Generate URL</Button>\n          </ButtonGroup>\n        </Box>\n        <Box margin=\"30px\">\n          <Select\n            fullWidth={true}\n            value={this.state.settingsMode}\n            onChange={(event) =>\n              this.setState({ settingsMode: event.target.value })\n            }\n          >\n            <MenuItem value=\"size\">Size</MenuItem>\n            <MenuItem value=\"margins\">Margins</MenuItem>\n            <MenuItem value=\"grid\">Grid</MenuItem>\n            <MenuItem value=\"description\">Description</MenuItem>\n          </Select>\n        </Box>\n        {this.state.settingsMode === \"size\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"cellSize\")}\n            {this.sizeSlider(\"width\")}\n            {this.sizeSlider(\"height\")}\n          </Box>\n        )}\n        {this.state.settingsMode === \"margins\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"left\")}\n            {this.sizeSlider(\"right\")}\n            {this.sizeSlider(\"top\")}\n            {this.sizeSlider(\"bottom\")}\n          </Box>\n        )}\n        {this.state.settingsMode === \"grid\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            {this.sizeSlider(\"gridDivWidth\")}\n            {this.sizeSlider(\"gridDivHeight\")}\n            <Typography>Dashed</Typography>\n            <Switch\n              checked={this.state.gridDashed}\n              onChange={(e) => {\n                this.setGridState(\"gridDashed\", e.target.checked);\n              }}\n            />\n            <Typography>Diagonals</Typography>\n            <Switch\n              checked={this.state.gridDiagonals}\n              onChange={(e) => {\n                this.setGridState(\"gridDiagonals\", e.target.checked);\n              }}\n            />\n          </Box>\n        )}\n        {this.state.settingsMode === \"description\" && (\n          <Box margin=\"30px\" padding=\"10px\" boxShadow={3}>\n            <TextField\n              multiline\n              rows={8}\n              value={this.state.description}\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n          </Box>\n        )}\n      </Box>\n    );\n  }\n\n  handleChange = (event, newValue) => {\n    this.setState({ [event.target.parentNode.id]: newValue });\n  };\n\n  setGrid = () => {\n    // Can't use ref as element is replaced\n    DrawRender(code, document.getElementById(\"canvas\"), this.state);\n    DrawSetMode(this.state);\n  };\n\n  setSymbolPage = (event) => {\n    this.setState({ symbolPage: event.target.value }, () => {\n      if (+this.state.symbolPage > 0)\n        for (let i = 0; i < 9; ++i) {\n          this.symbolRef[i].current.children[0].innerHTML = \"\";\n          DrawSymbol(\n            this.symbolRef[i].current.children[0],\n            this.state.symbolPage,\n            i + 1,\n            30\n          );\n        }\n    });\n    DrawSetSymbolPage(+event.target.value);\n  };\n\n  setGridState = (state, value) => {\n    // Can't use ref as element is replaced\n    this.setState({ [state]: value }, () => {\n      DrawRender(code, document.getElementById(\"canvas\"), this.state);\n      DrawSetMode(this.state);\n    });\n  };\n\n  sizeSlider(type) {\n    let t = {\n      cellSize: { label: \"Cell size\", min: 32, max: 96, step: 4, marks: true },\n      width: { label: \"Width\", min: 3, max: 30, step: 1, marks: false },\n      height: { label: \"Height\", min: 3, max: 30, step: 1, marks: false },\n      gridDivWidth: {\n        label: \"Grid divider width\",\n        min: 0,\n        max: 10,\n        step: 1,\n        marks: false,\n      },\n      gridDivHeight: {\n        label: \"Grid divider height\",\n        min: 0,\n        max: 10,\n        step: 1,\n        marks: false,\n      },\n      left: { label: \"Left margin\", min: 0, max: 10, step: 1, marks: false },\n      right: { label: \"Right margin\", min: 0, max: 10, step: 1, marks: false },\n      top: { label: \"Top margin\", min: 0, max: 10, step: 1, marks: false },\n      bottom: {\n        label: \"Bottom margin\",\n        min: 0,\n        max: 10,\n        step: 1,\n        marks: false,\n      },\n    }[type];\n    return (\n      <Box>\n        <Typography>\n          {t.label}: {this.state[type]}\n        </Typography>\n        <Slider\n          value={this.state[type]}\n          min={t.min}\n          max={t.max}\n          step={t.step}\n          marks={t.marks}\n          id={type}\n          onChange={this.handleChange}\n          onChangeCommitted={this.setGrid}\n        />\n      </Box>\n    );\n  }\n\n  colorGrid(num) {\n    return DrawColors.slice(0, num).map((color, index) => (\n      <Grid key={index} item xs={4}>\n        <Button variant=\"outlined\" onClick={() => DrawSetColor(index)}>\n          <div\n            style={{\n              border: \"1px solid black\",\n              background: color,\n              width: \"30px\",\n              height: \"30px\",\n            }}\n          />\n        </Button>\n      </Grid>\n    ));\n  }\n\n  renderSolveMode() {\n    let buttons = [\n      [\"normal\", \"Normal\"],\n      [\"center\", \"Center\"],\n      [\"corner\", \"Corner\"],\n      [\"color\", \"Color\"],\n    ];\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        {this.timerBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              {buttons.map((b) => (\n                <Button\n                  id={\"button\" + b[0]}\n                  key={b[0]}\n                  color={this.state.mode === b[0] ? \"primary\" : \"default\"}\n                  onClick={() => this.setMode(b[0])}\n                >\n                  {b[1]}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawReset}>Reset</Button>\n              <Button onClick={DrawCheck}>Check</Button>\n              <Button onClick={DrawUndo}>Undo</Button>\n              <Button onClick={DrawDelete}>Delete</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <Grid container>\n              {this.state.mode === \"color\" && this.colorGrid(9)}\n              {this.state.mode !== \"color\" &&\n                [...Array(9).keys()].map((index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => DrawSetNumber(index + 1)}\n                    >\n                      <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n                    </Button>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  renderSetMode() {\n    let pages = [\"Numbers\", \"Circles\", \"Arrows\", \"Arrows 2\", \"Misc\"];\n\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        <UrlDialog\n          text={this.state.dialogText}\n          open={this.state.dialogOpen}\n          onClose={() => this.setState({ dialogOpen: false })}\n        />\n        {this.settingLeftBox()}\n        <Box display=\"flex\">\n          <div id=\"canvas\" ref={this.canvasRef}></div>\n        </Box>\n        <Box minWidth=\"250px\" maxWidth=\"250px\">\n          <Box margin=\"30px\">\n            <ButtonGroup\n              fullWidth={true}\n              size=\"large\"\n              variant=\"contained\"\n              orientation=\"vertical\"\n            >\n              <Button onClick={DrawReset}>Reset</Button>\n              <Button onClick={DrawCheck}>Check</Button>\n              <Button onClick={DrawUndo}>Undo</Button>\n              <Button onClick={DrawDelete}>Delete</Button>\n            </ButtonGroup>\n          </Box>\n          <Box margin=\"30px\">\n            <Grid container>\n              {this.state.mode !== \"color\" &&\n                DrawColors.slice(0, 9).map((color, index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant={\n                        this.state.color === index ? \"contained\" : \"outlined\"\n                      }\n                      onClick={() => {\n                        this.setState({ color: index });\n                        DrawSetColor(index);\n                      }}\n                    >\n                      <div\n                        style={{\n                          border: \"1px solid black\",\n                          background: color,\n                          width: \"30px\",\n                          height: \"30px\",\n                        }}\n                      />\n                    </Button>\n                  </Grid>\n                ))}\n              {this.state.mode !== \"color\" &&\n                DrawColors.slice(9).map((color, index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant={\n                        this.state.color === index + 9\n                          ? \"contained\"\n                          : \"outlined\"\n                      }\n                      onClick={() => {\n                        this.setState({ color: index + 9 });\n                        DrawSetColor(index + 9);\n                      }}\n                    >\n                      <div\n                        style={{\n                          border: \"1px solid black\",\n                          background: color,\n                          width: \"30px\",\n                          height: \"30px\",\n                        }}\n                      />\n                    </Button>\n                  </Grid>\n                ))}\n              {this.state.mode === \"color\" && this.colorGrid()}\n              {this.state.mode === \"number\" && (\n                <FormControl fullWidth={true}>\n                  <Select\n                    fullWidth={true}\n                    value={this.state.symbolPage}\n                    onChange={this.setSymbolPage}\n                  >\n                    {pages.map((p, i) => (\n                      <MenuItem key={p} value={i}>\n                        {p}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              )}\n              {this.state.mode === \"number\" &&\n                [...Array(9).keys()].map((index) => (\n                  <Grid key={index} item xs={4}>\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => DrawSetNumber(index + 1)}\n                    >\n                      {+this.state.symbolPage === 0 && (\n                        <div style={{ fontSize: \"20px\" }}>{index + 1}</div>\n                      )}\n                      {+this.state.symbolPage > 0 && (\n                        <div ref={this.symbolRef[index]}>\n                          <div style={{ width: \"30px\", height: \"30px\" }} />\n                        </div>\n                      )}\n                    </Button>\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  render() {\n    if (this.state.solveMode) return this.renderSolveMode();\n    else return this.renderSetMode();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}